<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20130409 15:06:21.461" generator="Robot trunk 20130226 (Python 2.7.4 on darwin)">
<suite source="/Users/asyrjasalo/eficode/robot/robotframework/atest/robot/cli/dryrun/dryrun.txt" id="s1" name="Dryrun">
<kw type="setup" name="atest_resource.Run Tests" timeout="">
<doc></doc>
<arguments>
<arg>--runmode dryrun</arg>
<arg>cli/dryrun/dryrun.txt</arg>
<arg>cli/dryrun/more_tests.txt</arg>
</arguments>
<kw type="kw" name="atest_resource.Run Tests Helper" timeout="">
<doc></doc>
<arguments>
<arg>${options}</arg>
<arg>@{data list}</arg>
</arguments>
<kw type="kw" name="${data string} = atest_resource.Set Variables And Get Datasources" timeout="">
<doc></doc>
<arguments>
<arg>@{data list}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Suite Variable" timeout="">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>$SUITE</arg>
<arg>${NONE}</arg>
</arguments>
<msg timestamp="20130409 15:06:21.566" level="INFO">${SUITE} = None</msg>
<status status="PASS" endtime="20130409 15:06:21.566" starttime="20130409 15:06:21.565"></status>
</kw>
<kw type="kw" name="${name} = TestHelper.Get Output Name" timeout="">
<doc></doc>
<arguments>
<arg>@{data list}</arg>
</arguments>
<msg timestamp="20130409 15:06:21.566" level="INFO">${name} = dryrun_more_tests</msg>
<status status="PASS" endtime="20130409 15:06:21.566" starttime="20130409 15:06:21.566"></status>
</kw>
<kw type="kw" name="atest_resource.Set Variables" timeout="">
<doc></doc>
<arguments>
<arg>${name}</arg>
</arguments>
<kw type="kw" name="${OUTDIR} = OperatingSystem.Join Path" timeout="">
<doc>Joins the given path part(s) to the given base path.</doc>
<arguments>
<arg>${OUTPUTDIR}</arg>
<arg>output</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20130409 15:06:21.568" level="INFO">${OUTDIR} = /Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests</msg>
<status status="PASS" endtime="20130409 15:06:21.568" starttime="20130409 15:06:21.567"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Global Variable" timeout="">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>$OUTDIR</arg>
<arg>${OUTDIR.encode('ascii', 'ignore').replace('?', '_') .replace('*', '_')}</arg>
</arguments>
<msg timestamp="20130409 15:06:21.569" level="INFO">${OUTDIR} = /Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests</msg>
<status status="PASS" endtime="20130409 15:06:21.569" starttime="20130409 15:06:21.568"></status>
</kw>
<kw type="kw" name="OperatingSystem.Create Directory" timeout="">
<doc>Creates the specified directory.</doc>
<arguments>
<arg>${OUTDIR}</arg>
</arguments>
<msg timestamp="20130409 15:06:21.570" html="yes" level="INFO">Created directory '&lt;a href="file:///Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests"&gt;/Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests&lt;/a&gt;'</msg>
<status status="PASS" endtime="20130409 15:06:21.570" starttime="20130409 15:06:21.570"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Suite Variable" timeout="">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>$OUTFILE</arg>
<arg>${OUTDIR}${/}output.xml</arg>
</arguments>
<msg timestamp="20130409 15:06:21.571" level="INFO">${OUTFILE} = /Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests/output.xml</msg>
<status status="PASS" endtime="20130409 15:06:21.571" starttime="20130409 15:06:21.570"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Suite Variable" timeout="">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>$STDOUT_FILE</arg>
<arg>${OUTDIR}${/}stdout.txt</arg>
</arguments>
<msg timestamp="20130409 15:06:21.572" level="INFO">${STDOUT_FILE} = /Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests/stdout.txt</msg>
<status status="PASS" endtime="20130409 15:06:21.572" starttime="20130409 15:06:21.571"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Suite Variable" timeout="">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>$STDERR_FILE</arg>
<arg>${OUTDIR}${/}stderr.txt</arg>
</arguments>
<msg timestamp="20130409 15:06:21.573" level="INFO">${STDERR_FILE} = /Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests/stderr.txt</msg>
<status status="PASS" endtime="20130409 15:06:21.573" starttime="20130409 15:06:21.572"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Suite Variable" timeout="">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>$SYSLOG_FILE</arg>
<arg>${OUTDIR}${/}syslog.txt</arg>
</arguments>
<msg timestamp="20130409 15:06:21.573" level="INFO">${SYSLOG_FILE} = /Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests/syslog.txt</msg>
<status status="PASS" endtime="20130409 15:06:21.573" starttime="20130409 15:06:21.573"></status>
</kw>
<kw type="kw" name="OperatingSystem.Set Environment Variable" timeout="">
<doc>Sets an environment variable to a specified value.</doc>
<arguments>
<arg>ROBOT_SYSLOG_FILE</arg>
<arg>${SYSLOG_FILE}</arg>
</arguments>
<msg timestamp="20130409 15:06:21.574" level="INFO">Environment variable 'ROBOT_SYSLOG_FILE' set to value '/Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests/syslog.txt'</msg>
<status status="PASS" endtime="20130409 15:06:21.574" starttime="20130409 15:06:21.574"></status>
</kw>
<kw type="kw" name="atest_resource.Set Runners" timeout="">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${robot} = OperatingSystem.Join Path" timeout="">
<doc>Joins the given path part(s) to the given base path.</doc>
<arguments>
<arg>${ROBOTPATH}</arg>
<arg>run.py</arg>
</arguments>
<msg timestamp="20130409 15:06:21.576" level="INFO">${robot} = /Users/asyrjasalo/eficode/robot/robotframework/src/robot/run.py</msg>
<status status="PASS" endtime="20130409 15:06:21.575" starttime="20130409 15:06:21.575"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Suite Variable" timeout="">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>$ROBOT</arg>
<arg>${INTERPRETER} ${robot}</arg>
</arguments>
<msg timestamp="20130409 15:06:21.576" level="INFO">${ROBOT} = python /Users/asyrjasalo/eficode/robot/robotframework/src/robot/run.py</msg>
<status status="PASS" endtime="20130409 15:06:21.576" starttime="20130409 15:06:21.576"></status>
</kw>
<kw type="kw" name="${rebot} = OperatingSystem.Join Path" timeout="">
<doc>Joins the given path part(s) to the given base path.</doc>
<arguments>
<arg>${ROBOTPATH}</arg>
<arg>rebot.py</arg>
</arguments>
<msg timestamp="20130409 15:06:21.577" level="INFO">${rebot} = /Users/asyrjasalo/eficode/robot/robotframework/src/robot/rebot.py</msg>
<status status="PASS" endtime="20130409 15:06:21.577" starttime="20130409 15:06:21.577"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Suite Variable" timeout="">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>$REBOT</arg>
<arg>${INTERPRETER} ${rebot}</arg>
</arguments>
<msg timestamp="20130409 15:06:21.578" level="INFO">${REBOT} = python /Users/asyrjasalo/eficode/robot/robotframework/src/robot/rebot.py</msg>
<status status="PASS" endtime="20130409 15:06:21.578" starttime="20130409 15:06:21.577"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:21.578" starttime="20130409 15:06:21.574"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:21.578" starttime="20130409 15:06:21.567"></status>
</kw>
<kw type="kw" name="@{data list} = OperatingSystem.Join Paths" timeout="">
<doc>Joins given paths with base and returns resulted paths.</doc>
<arguments>
<arg>${DATADIR}</arg>
<arg>@{data list}</arg>
</arguments>
<msg timestamp="20130409 15:06:21.579" level="INFO">@{data list} = [ /Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/dryrun.txt | /Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/more_tests.txt ]</msg>
<status status="PASS" endtime="20130409 15:06:21.578" starttime="20130409 15:06:21.578"></status>
</kw>
<kw type="kw" name="${data string} = BuiltIn.Catenate" timeout="">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>@{data list}</arg>
</arguments>
<msg timestamp="20130409 15:06:21.579" level="INFO">${data string} = /Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/dryrun.txt /Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/more_tests.txt</msg>
<status status="PASS" endtime="20130409 15:06:21.579" starttime="20130409 15:06:21.579"></status>
</kw>
<msg timestamp="20130409 15:06:21.580" level="INFO">${data string} = /Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/dryrun.txt /Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/more_tests.txt</msg>
<status status="PASS" endtime="20130409 15:06:21.580" starttime="20130409 15:06:21.564"></status>
</kw>
<kw type="kw" name="${options} = BuiltIn.Catenate" timeout="">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>--MonitorMarkers OFF</arg>
<arg>${user options}</arg>
<arg>--variable interpreter:${INTERPRETER}</arg>
<arg>--pythonpath ${LIBPATH1}</arg>
<arg>--pythonpath ${LIBPATH2}</arg>
</arguments>
<msg timestamp="20130409 15:06:21.581" level="INFO">${options} = --MonitorMarkers OFF --runmode dryrun --variable interpreter:python --pythonpath /Users/asyrjasalo/eficode/robot/robotframework/atest/resources/../testresources/testlibs --pythonpath /Users/asyrjasalo...</msg>
<status status="PASS" endtime="20130409 15:06:21.581" starttime="20130409 15:06:21.580"></status>
</kw>
<kw type="kw" name="atest_resource.Run Helper" timeout="">
<doc></doc>
<arguments>
<arg>${ROBOT}</arg>
<arg>${options}</arg>
<arg>${data string}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Remove Files" timeout="">
<doc>Uses `Remove File` to remove multiple files one-by-one.</doc>
<arguments>
<arg>${OUTFILE}</arg>
<arg>${OUTDIR}/*.xml</arg>
<arg>${OUTDIR}/*.html</arg>
</arguments>
<msg timestamp="20130409 15:06:21.583" html="yes" level="INFO">File '&lt;a href="file:///Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests/output.xml"&gt;/Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests/output.xml&lt;/a&gt;' does not exist</msg>
<msg timestamp="20130409 15:06:21.583" html="yes" level="INFO">File '&lt;a href="file:///Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests/*.xml"&gt;/Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests/*.xml&lt;/a&gt;' does not exist</msg>
<msg timestamp="20130409 15:06:21.583" html="yes" level="INFO">File '&lt;a href="file:///Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests/*.html"&gt;/Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests/*.html&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20130409 15:06:21.583" starttime="20130409 15:06:21.582"></status>
</kw>
<kw type="kw" name="${cmd} = BuiltIn.Catenate" timeout="">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>${runner}</arg>
<arg>--monitorcolors OFF</arg>
<arg>--outputdir ${OUTDIR}</arg>
<arg>--output ${OUTFILE}</arg>
<arg>--report NONE</arg>
<arg>--log NONE</arg>
<arg>${options}</arg>
<arg>${data string}</arg>
<arg>1&gt;${STDOUTFILE}</arg>
<arg>2&gt;${STDERRFILE}</arg>
</arguments>
<msg timestamp="20130409 15:06:21.585" level="INFO">${cmd} = python /Users/asyrjasalo/eficode/robot/robotframework/src/robot/run.py --monitorcolors OFF --outputdir /Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests --ou...</msg>
<status status="PASS" endtime="20130409 15:06:21.584" starttime="20130409 15:06:21.584"></status>
</kw>
<kw type="kw" name="${rc} = OperatingSystem.Run And Return Rc" timeout="">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>${cmd}</arg>
</arguments>
<msg timestamp="20130409 15:06:21.586" level="INFO">Running command 'python /Users/asyrjasalo/eficode/robot/robotframework/src/robot/run.py --monitorcolors OFF --outputdir /Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests --output /Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests/output.xml --report NONE --log NONE --MonitorMarkers OFF --runmode dryrun --variable interpreter:python --pythonpath /Users/asyrjasalo/eficode/robot/robotframework/atest/resources/../testresources/testlibs --pythonpath /Users/asyrjasalo/eficode/robot/robotframework/atest/resources/../testresources/listeners /Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/dryrun.txt /Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/more_tests.txt 1&gt;/Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests/stdout.txt 2&gt;/Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests/stderr.txt'</msg>
<msg timestamp="20130409 15:06:21.919" level="INFO">${rc} = 10</msg>
<status status="PASS" endtime="20130409 15:06:21.919" starttime="20130409 15:06:21.585"></status>
</kw>
<kw type="kw" name="BuiltIn.Log" timeout="">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>&lt;a href="file://${OUTDIR}"&gt;${OUTDIR}&lt;/a&gt;</arg>
<arg>HTML</arg>
</arguments>
<msg timestamp="20130409 15:06:21.920" html="yes" level="INFO">&lt;a href="file:///Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests"&gt;/Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests&lt;/a&gt;</msg>
<status status="PASS" endtime="20130409 15:06:21.920" starttime="20130409 15:06:21.919"></status>
</kw>
<kw type="kw" name="BuiltIn.Log" timeout="">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>&lt;a href="file://${OUTFILE}"&gt;${OUTFILE}&lt;/a&gt;</arg>
<arg>HTML</arg>
</arguments>
<msg timestamp="20130409 15:06:21.921" html="yes" level="INFO">&lt;a href="file:///Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests/output.xml"&gt;/Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests/output.xml&lt;/a&gt;</msg>
<status status="PASS" endtime="20130409 15:06:21.921" starttime="20130409 15:06:21.920"></status>
</kw>
<kw type="kw" name="BuiltIn.Log" timeout="">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>&lt;a href="file://${STDOUTFILE}"&gt;${STDOUTFILE}&lt;/a&gt;</arg>
<arg>HTML</arg>
</arguments>
<msg timestamp="20130409 15:06:21.921" html="yes" level="INFO">&lt;a href="file:///Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests/stdout.txt"&gt;/Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests/stdout.txt&lt;/a&gt;</msg>
<status status="PASS" endtime="20130409 15:06:21.921" starttime="20130409 15:06:21.921"></status>
</kw>
<kw type="kw" name="BuiltIn.Log" timeout="">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>&lt;a href="file://${STDERRFILE}"&gt;${STDERRFILE}&lt;/a&gt;</arg>
<arg>HTML</arg>
</arguments>
<msg timestamp="20130409 15:06:21.922" html="yes" level="INFO">&lt;a href="file:///Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests/stderr.txt"&gt;/Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests/stderr.txt&lt;/a&gt;</msg>
<status status="PASS" endtime="20130409 15:06:21.922" starttime="20130409 15:06:21.922"></status>
</kw>
<kw type="kw" name="BuiltIn.Log" timeout="">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>&lt;a href="file://${SYSLOGFILE}"&gt;${SYSLOGFILE}&lt;/a&gt;</arg>
<arg>HTML</arg>
</arguments>
<msg timestamp="20130409 15:06:21.923" html="yes" level="INFO">&lt;a href="file:///Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests/syslog.txt"&gt;/Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests/syslog.txt&lt;/a&gt;</msg>
<status status="PASS" endtime="20130409 15:06:21.923" starttime="20130409 15:06:21.922"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:21.923" starttime="20130409 15:06:21.581"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:21.923" starttime="20130409 15:06:21.563"></status>
</kw>
<kw type="kw" name="TestCheckerLibrary.Process Output" timeout="">
<doc></doc>
<arguments>
<arg>${OUTFILE}</arg>
</arguments>
<msg timestamp="20130409 15:06:21.932" level="INFO">${SUITE} = Dryrun &amp; More Tests</msg>
<msg timestamp="20130409 15:06:21.933" level="INFO">${STATISTICS} = &lt;robot.model.statistics.Statistics object at 0x1091c10d0&gt;</msg>
<msg timestamp="20130409 15:06:21.933" level="INFO">${ERRORS} = &lt;robot.result.executionerrors.ExecutionErrors object at 0x1091c1090&gt;</msg>
<msg timestamp="20130409 15:06:21.933" level="INFO">Processing output '/Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests/output.xml'</msg>
<status status="PASS" endtime="20130409 15:06:21.933" starttime="20130409 15:06:21.923"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:21.933" starttime="20130409 15:06:21.562"></status>
</kw>
<test id="s1-t1" timeout="" name="Passing keywords">
<kw type="kw" name="${tc} = atest_resource.Check Test Case" timeout="">
<doc></doc>
<arguments>
<arg>${TESTNAME}</arg>
</arguments>
<kw type="kw" name="${test} = TestCheckerLibrary.Get Test From Suite" timeout="">
<doc></doc>
<arguments>
<arg>${SUITE}</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20130409 15:06:21.936" level="INFO">${test} = Passing keywords</msg>
<status status="PASS" endtime="20130409 15:06:21.936" starttime="20130409 15:06:21.936"></status>
</kw>
<kw type="kw" name="TestCheckerLibrary.Check Test Status" timeout="">
<doc>Verifies that test's status and message are as expected.</doc>
<arguments>
<arg>${test}</arg>
<arg>${status}</arg>
<arg>${message}</arg>
</arguments>
<status status="PASS" endtime="20130409 15:06:21.937" starttime="20130409 15:06:21.936"></status>
</kw>
<msg timestamp="20130409 15:06:21.937" level="INFO">${tc} = Passing keywords</msg>
<status status="PASS" endtime="20130409 15:06:21.937" starttime="20130409 15:06:21.934"></status>
</kw>
<kw type="kw" name="Should have correct number of keywords" timeout="">
<doc></doc>
<arguments>
<arg>${tc}</arg>
<arg>3</arg>
</arguments>
<kw type="kw" name="BuiltIn.Log" timeout="">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${test or uk.kws}</arg>
</arguments>
<msg timestamp="20130409 15:06:21.939" level="INFO">[&lt;TestCheckerLibrary.NoSlotsKeyword object at 0x109182c30&gt;, &lt;TestCheckerLibrary.NoSlotsKeyword object at 0x109182d70&gt;, &lt;TestCheckerLibrary.NoSlotsKeyword object at 0x109182e10&gt;]</msg>
<status status="PASS" endtime="20130409 15:06:21.939" starttime="20130409 15:06:21.938"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal As Integers" timeout="">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${test or uk.kw_count}</arg>
<arg>${exp number of kws}</arg>
</arguments>
<msg timestamp="20130409 15:06:21.940" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20130409 15:06:21.940" starttime="20130409 15:06:21.939"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:21.940" starttime="20130409 15:06:21.938"></status>
</kw>
<kw type="kw" name="Name and status should be" timeout="">
<doc></doc>
<arguments>
<arg>${tc.kws[0]}</arg>
<arg>BuiltIn.Log</arg>
<arg>NOT_RUN</arg>
</arguments>
<kw type="kw" name="BuiltIn.Should Be Equal" timeout="">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${kw.name}</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20130409 15:06:21.942" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20130409 15:06:21.942" starttime="20130409 15:06:21.942"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal" timeout="">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${kw.status}</arg>
<arg>${status}</arg>
</arguments>
<msg timestamp="20130409 15:06:21.943" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20130409 15:06:21.943" starttime="20130409 15:06:21.942"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:21.943" starttime="20130409 15:06:21.940"></status>
</kw>
<kw type="kw" name="Name and status should be" timeout="">
<doc></doc>
<arguments>
<arg>${tc.kws[1]}</arg>
<arg>\${contents} = OperatingSystem.List Directory</arg>
<arg>NOT_RUN</arg>
</arguments>
<kw type="kw" name="BuiltIn.Should Be Equal" timeout="">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${kw.name}</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20130409 15:06:21.945" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20130409 15:06:21.945" starttime="20130409 15:06:21.944"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal" timeout="">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${kw.status}</arg>
<arg>${status}</arg>
</arguments>
<msg timestamp="20130409 15:06:21.946" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20130409 15:06:21.946" starttime="20130409 15:06:21.945"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:21.946" starttime="20130409 15:06:21.943"></status>
</kw>
<kw type="kw" name="Name and status should be" timeout="">
<doc></doc>
<arguments>
<arg>${tc.kws[2]}</arg>
<arg>resource.Simple UK</arg>
<arg>PASS</arg>
</arguments>
<kw type="kw" name="BuiltIn.Should Be Equal" timeout="">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${kw.name}</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20130409 15:06:21.948" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20130409 15:06:21.948" starttime="20130409 15:06:21.947"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal" timeout="">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${kw.status}</arg>
<arg>${status}</arg>
</arguments>
<msg timestamp="20130409 15:06:21.949" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20130409 15:06:21.949" starttime="20130409 15:06:21.948"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:21.949" starttime="20130409 15:06:21.946"></status>
</kw>
<kw type="kw" name="Name and status should be" timeout="">
<doc></doc>
<arguments>
<arg>${tc.kws[2].kws[0]}</arg>
<arg>BuiltIn.Log</arg>
<arg>NOT_RUN</arg>
</arguments>
<kw type="kw" name="BuiltIn.Should Be Equal" timeout="">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${kw.name}</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20130409 15:06:21.951" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20130409 15:06:21.951" starttime="20130409 15:06:21.950"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal" timeout="">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${kw.status}</arg>
<arg>${status}</arg>
</arguments>
<msg timestamp="20130409 15:06:21.951" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20130409 15:06:21.951" starttime="20130409 15:06:21.951"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:21.952" starttime="20130409 15:06:21.949"></status>
</kw>
<doc></doc>
<tags>
<tag>jybot</tag>
<tag>pybot</tag>
<tag>regression</tag>
</tags>
<status status="PASS" endtime="20130409 15:06:21.952" critical="yes" starttime="20130409 15:06:21.933"></status>
</test>
<test id="s1-t2" timeout="" name="Keywords with embedded arguments">
<kw type="kw" name="${tc} = atest_resource.Check Test Case" timeout="">
<doc></doc>
<arguments>
<arg>${TESTNAME}</arg>
</arguments>
<kw type="kw" name="${test} = TestCheckerLibrary.Get Test From Suite" timeout="">
<doc></doc>
<arguments>
<arg>${SUITE}</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20130409 15:06:21.955" level="INFO">${test} = Keywords with embedded arguments</msg>
<status status="PASS" endtime="20130409 15:06:21.955" starttime="20130409 15:06:21.954"></status>
</kw>
<kw type="kw" name="TestCheckerLibrary.Check Test Status" timeout="">
<doc>Verifies that test's status and message are as expected.</doc>
<arguments>
<arg>${test}</arg>
<arg>${status}</arg>
<arg>${message}</arg>
</arguments>
<status status="PASS" endtime="20130409 15:06:21.956" starttime="20130409 15:06:21.955"></status>
</kw>
<msg timestamp="20130409 15:06:21.956" level="INFO">${tc} = Keywords with embedded arguments</msg>
<status status="PASS" endtime="20130409 15:06:21.956" starttime="20130409 15:06:21.953"></status>
</kw>
<kw type="kw" name="Should have correct number of keywords" timeout="">
<doc></doc>
<arguments>
<arg>${tc}</arg>
<arg>2</arg>
</arguments>
<kw type="kw" name="BuiltIn.Log" timeout="">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${test or uk.kws}</arg>
</arguments>
<msg timestamp="20130409 15:06:21.957" level="INFO">[&lt;TestCheckerLibrary.NoSlotsKeyword object at 0x109182f50&gt;, &lt;TestCheckerLibrary.NoSlotsKeyword object at 0x1091d80f0&gt;]</msg>
<status status="PASS" endtime="20130409 15:06:21.958" starttime="20130409 15:06:21.957"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal As Integers" timeout="">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${test or uk.kw_count}</arg>
<arg>${exp number of kws}</arg>
</arguments>
<msg timestamp="20130409 15:06:21.958" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20130409 15:06:21.958" starttime="20130409 15:06:21.958"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:21.958" starttime="20130409 15:06:21.956"></status>
</kw>
<kw type="kw" name="Name and status should be" timeout="">
<doc></doc>
<arguments>
<arg>${tc.kws[0]}</arg>
<arg>Embedded arguments here</arg>
<arg>PASS</arg>
</arguments>
<kw type="kw" name="BuiltIn.Should Be Equal" timeout="">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${kw.name}</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20130409 15:06:21.960" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20130409 15:06:21.960" starttime="20130409 15:06:21.960"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal" timeout="">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${kw.status}</arg>
<arg>${status}</arg>
</arguments>
<msg timestamp="20130409 15:06:21.961" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20130409 15:06:21.961" starttime="20130409 15:06:21.961"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:21.961" starttime="20130409 15:06:21.959"></status>
</kw>
<kw type="kw" name="Name and status should be" timeout="">
<doc></doc>
<arguments>
<arg>${tc.kws[0].kws[0]}</arg>
<arg>BuiltIn.No Operation</arg>
<arg>NOT_RUN</arg>
</arguments>
<kw type="kw" name="BuiltIn.Should Be Equal" timeout="">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${kw.name}</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20130409 15:06:21.963" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20130409 15:06:21.963" starttime="20130409 15:06:21.963"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal" timeout="">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${kw.status}</arg>
<arg>${status}</arg>
</arguments>
<msg timestamp="20130409 15:06:21.964" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20130409 15:06:21.964" starttime="20130409 15:06:21.963"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:21.964" starttime="20130409 15:06:21.961"></status>
</kw>
<kw type="kw" name="Name and status should be" timeout="">
<doc></doc>
<arguments>
<arg>${tc.kws[1]}</arg>
<arg>Embedded args rock here</arg>
<arg>PASS</arg>
</arguments>
<kw type="kw" name="BuiltIn.Should Be Equal" timeout="">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${kw.name}</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20130409 15:06:21.966" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20130409 15:06:21.966" starttime="20130409 15:06:21.966"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal" timeout="">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${kw.status}</arg>
<arg>${status}</arg>
</arguments>
<msg timestamp="20130409 15:06:21.967" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20130409 15:06:21.967" starttime="20130409 15:06:21.967"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:21.967" starttime="20130409 15:06:21.964"></status>
</kw>
<kw type="kw" name="Name and status should be" timeout="">
<doc></doc>
<arguments>
<arg>${tc.kws[1].kws[0]}</arg>
<arg>BuiltIn.No Operation</arg>
<arg>NOT_RUN</arg>
</arguments>
<kw type="kw" name="BuiltIn.Should Be Equal" timeout="">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${kw.name}</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20130409 15:06:21.970" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20130409 15:06:21.970" starttime="20130409 15:06:21.969"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal" timeout="">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${kw.status}</arg>
<arg>${status}</arg>
</arguments>
<msg timestamp="20130409 15:06:21.971" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20130409 15:06:21.971" starttime="20130409 15:06:21.970"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:21.971" starttime="20130409 15:06:21.968"></status>
</kw>
<doc></doc>
<tags>
<tag>jybot</tag>
<tag>pybot</tag>
<tag>regression</tag>
</tags>
<status status="PASS" endtime="20130409 15:06:21.971" critical="yes" starttime="20130409 15:06:21.952"></status>
</test>
<test id="s1-t3" timeout="" name="Keywords that would fail">
<kw type="kw" name="${tc} = atest_resource.Check Test Case" timeout="">
<doc></doc>
<arguments>
<arg>${TESTNAME}</arg>
</arguments>
<kw type="kw" name="${test} = TestCheckerLibrary.Get Test From Suite" timeout="">
<doc></doc>
<arguments>
<arg>${SUITE}</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20130409 15:06:21.975" level="INFO">${test} = Keywords that would fail</msg>
<status status="PASS" endtime="20130409 15:06:21.975" starttime="20130409 15:06:21.974"></status>
</kw>
<kw type="kw" name="TestCheckerLibrary.Check Test Status" timeout="">
<doc>Verifies that test's status and message are as expected.</doc>
<arguments>
<arg>${test}</arg>
<arg>${status}</arg>
<arg>${message}</arg>
</arguments>
<status status="PASS" endtime="20130409 15:06:21.976" starttime="20130409 15:06:21.976"></status>
</kw>
<msg timestamp="20130409 15:06:21.977" level="INFO">${tc} = Keywords that would fail</msg>
<status status="PASS" endtime="20130409 15:06:21.976" starttime="20130409 15:06:21.973"></status>
</kw>
<kw type="kw" name="Should have correct number of keywords" timeout="">
<doc></doc>
<arguments>
<arg>${tc}</arg>
<arg>3</arg>
</arguments>
<kw type="kw" name="BuiltIn.Log" timeout="">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${test or uk.kws}</arg>
</arguments>
<msg timestamp="20130409 15:06:21.979" level="INFO">[&lt;TestCheckerLibrary.NoSlotsKeyword object at 0x1091d8230&gt;, &lt;TestCheckerLibrary.NoSlotsKeyword object at 0x1091d82d0&gt;, &lt;TestCheckerLibrary.NoSlotsKeyword object at 0x1091d84b0&gt;]</msg>
<status status="PASS" endtime="20130409 15:06:21.979" starttime="20130409 15:06:21.978"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal As Integers" timeout="">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${test or uk.kw_count}</arg>
<arg>${exp number of kws}</arg>
</arguments>
<msg timestamp="20130409 15:06:21.980" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20130409 15:06:21.980" starttime="20130409 15:06:21.979"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:21.980" starttime="20130409 15:06:21.977"></status>
</kw>
<kw type="kw" name="Name and status should be" timeout="">
<doc></doc>
<arguments>
<arg>${tc.kws[0]}</arg>
<arg>BuiltIn.Fail</arg>
<arg>NOT_RUN</arg>
</arguments>
<kw type="kw" name="BuiltIn.Should Be Equal" timeout="">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${kw.name}</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20130409 15:06:21.986" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20130409 15:06:21.986" starttime="20130409 15:06:21.983"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal" timeout="">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${kw.status}</arg>
<arg>${status}</arg>
</arguments>
<msg timestamp="20130409 15:06:21.987" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20130409 15:06:21.987" starttime="20130409 15:06:21.986"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:21.987" starttime="20130409 15:06:21.981"></status>
</kw>
<kw type="kw" name="Name and status should be" timeout="">
<doc></doc>
<arguments>
<arg>${tc.kws[1]}</arg>
<arg>resource.Fail In UK</arg>
<arg>PASS</arg>
</arguments>
<kw type="kw" name="BuiltIn.Should Be Equal" timeout="">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${kw.name}</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20130409 15:06:21.989" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20130409 15:06:21.989" starttime="20130409 15:06:21.989"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal" timeout="">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${kw.status}</arg>
<arg>${status}</arg>
</arguments>
<msg timestamp="20130409 15:06:21.990" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20130409 15:06:21.990" starttime="20130409 15:06:21.990"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:21.990" starttime="20130409 15:06:21.987"></status>
</kw>
<kw type="kw" name="Should have correct number of keywords" timeout="">
<doc></doc>
<arguments>
<arg>${tc.kws[1]}</arg>
<arg>2</arg>
</arguments>
<kw type="kw" name="BuiltIn.Log" timeout="">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${test or uk.kws}</arg>
</arguments>
<msg timestamp="20130409 15:06:21.992" level="INFO">[BuiltIn.Fail, BuiltIn.Fail]</msg>
<status status="PASS" endtime="20130409 15:06:21.992" starttime="20130409 15:06:21.992"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal As Integers" timeout="">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${test or uk.kw_count}</arg>
<arg>${exp number of kws}</arg>
</arguments>
<msg timestamp="20130409 15:06:21.993" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20130409 15:06:21.993" starttime="20130409 15:06:21.992"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:21.993" starttime="20130409 15:06:21.990"></status>
</kw>
<kw type="kw" name="Name and status should be" timeout="">
<doc></doc>
<arguments>
<arg>${tc.kws[1].kws[0]}</arg>
<arg>BuiltIn.Fail</arg>
<arg>NOT_RUN</arg>
</arguments>
<kw type="kw" name="BuiltIn.Should Be Equal" timeout="">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${kw.name}</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20130409 15:06:21.995" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20130409 15:06:21.995" starttime="20130409 15:06:21.994"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal" timeout="">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${kw.status}</arg>
<arg>${status}</arg>
</arguments>
<msg timestamp="20130409 15:06:21.996" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20130409 15:06:21.996" starttime="20130409 15:06:21.995"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:21.996" starttime="20130409 15:06:21.993"></status>
</kw>
<kw type="kw" name="Name and status should be" timeout="">
<doc></doc>
<arguments>
<arg>${tc.kws[1].kws[1]}</arg>
<arg>BuiltIn.Fail</arg>
<arg>NOT_RUN</arg>
</arguments>
<kw type="kw" name="BuiltIn.Should Be Equal" timeout="">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${kw.name}</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20130409 15:06:21.998" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20130409 15:06:21.998" starttime="20130409 15:06:21.997"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal" timeout="">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${kw.status}</arg>
<arg>${status}</arg>
</arguments>
<msg timestamp="20130409 15:06:21.999" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20130409 15:06:21.999" starttime="20130409 15:06:21.998"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:21.999" starttime="20130409 15:06:21.996"></status>
</kw>
<doc></doc>
<tags>
<tag>jybot</tag>
<tag>pybot</tag>
<tag>regression</tag>
</tags>
<status status="PASS" endtime="20130409 15:06:21.999" critical="yes" starttime="20130409 15:06:21.971"></status>
</test>
<test id="s1-t4" timeout="" name="Scalar variables are not checked in keyword arguments">
<kw type="kw" name="${tc} = atest_resource.Check Test Case" timeout="">
<doc></doc>
<arguments>
<arg>${TESTNAME}</arg>
</arguments>
<kw type="kw" name="${test} = TestCheckerLibrary.Get Test From Suite" timeout="">
<doc></doc>
<arguments>
<arg>${SUITE}</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20130409 15:06:22.004" level="INFO">${test} = Scalar variables are not checked in keyword arguments</msg>
<status status="PASS" endtime="20130409 15:06:22.004" starttime="20130409 15:06:22.003"></status>
</kw>
<kw type="kw" name="TestCheckerLibrary.Check Test Status" timeout="">
<doc>Verifies that test's status and message are as expected.</doc>
<arguments>
<arg>${test}</arg>
<arg>${status}</arg>
<arg>${message}</arg>
</arguments>
<status status="PASS" endtime="20130409 15:06:22.005" starttime="20130409 15:06:22.005"></status>
</kw>
<msg timestamp="20130409 15:06:22.005" level="INFO">${tc} = Scalar variables are not checked in keyword arguments</msg>
<status status="PASS" endtime="20130409 15:06:22.005" starttime="20130409 15:06:22.002"></status>
</kw>
<kw type="kw" name="Name and status should be" timeout="">
<doc></doc>
<arguments>
<arg>${tc.kws[0]}</arg>
<arg>BuiltIn.Log</arg>
<arg>NOT_RUN</arg>
</arguments>
<kw type="kw" name="BuiltIn.Should Be Equal" timeout="">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${kw.name}</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20130409 15:06:22.008" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20130409 15:06:22.008" starttime="20130409 15:06:22.007"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal" timeout="">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${kw.status}</arg>
<arg>${status}</arg>
</arguments>
<msg timestamp="20130409 15:06:22.009" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20130409 15:06:22.009" starttime="20130409 15:06:22.008"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:22.010" starttime="20130409 15:06:22.006"></status>
</kw>
<kw type="kw" name="Name and status should be" timeout="">
<doc></doc>
<arguments>
<arg>${tc.kws[1]}</arg>
<arg>BuiltIn.Log</arg>
<arg>NOT_RUN</arg>
</arguments>
<kw type="kw" name="BuiltIn.Should Be Equal" timeout="">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${kw.name}</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20130409 15:06:22.012" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20130409 15:06:22.012" starttime="20130409 15:06:22.011"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal" timeout="">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${kw.status}</arg>
<arg>${status}</arg>
</arguments>
<msg timestamp="20130409 15:06:22.013" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20130409 15:06:22.013" starttime="20130409 15:06:22.012"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:22.014" starttime="20130409 15:06:22.010"></status>
</kw>
<doc>Variables are too often set somehow dynamically that we cannot expect them to always exist.</doc>
<tags>
<tag>jybot</tag>
<tag>pybot</tag>
<tag>regression</tag>
</tags>
<status status="PASS" endtime="20130409 15:06:22.014" critical="yes" starttime="20130409 15:06:21.999"></status>
</test>
<test id="s1-t5" timeout="" name="List variables are not checked in keyword arguments">
<kw type="kw" name="atest_resource.Check Test Case" timeout="">
<doc></doc>
<arguments>
<arg>${TESTNAME}</arg>
</arguments>
<kw type="kw" name="${test} = TestCheckerLibrary.Get Test From Suite" timeout="">
<doc></doc>
<arguments>
<arg>${SUITE}</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20130409 15:06:22.019" level="INFO">${test} = List variables are not checked in keyword arguments</msg>
<status status="PASS" endtime="20130409 15:06:22.019" starttime="20130409 15:06:22.018"></status>
</kw>
<kw type="kw" name="TestCheckerLibrary.Check Test Status" timeout="">
<doc>Verifies that test's status and message are as expected.</doc>
<arguments>
<arg>${test}</arg>
<arg>${status}</arg>
<arg>${message}</arg>
</arguments>
<status status="PASS" endtime="20130409 15:06:22.020" starttime="20130409 15:06:22.019"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:22.020" starttime="20130409 15:06:22.017"></status>
</kw>
<doc>See the doc of the previous test</doc>
<tags>
<tag>jybot</tag>
<tag>pybot</tag>
<tag>regression</tag>
</tags>
<status status="PASS" endtime="20130409 15:06:22.021" critical="yes" starttime="20130409 15:06:22.015"></status>
</test>
<test id="s1-t6" timeout="" name="Variables are not checked in when arguments are embedded">
<kw type="kw" name="${tc} = atest_resource.Check Test Case" timeout="">
<doc></doc>
<arguments>
<arg>${TESTNAME}</arg>
</arguments>
<kw type="kw" name="${test} = TestCheckerLibrary.Get Test From Suite" timeout="">
<doc></doc>
<arguments>
<arg>${SUITE}</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20130409 15:06:22.025" level="INFO">${test} = Variables are not checked in when arguments are embedded</msg>
<status status="PASS" endtime="20130409 15:06:22.025" starttime="20130409 15:06:22.024"></status>
</kw>
<kw type="kw" name="TestCheckerLibrary.Check Test Status" timeout="">
<doc>Verifies that test's status and message are as expected.</doc>
<arguments>
<arg>${test}</arg>
<arg>${status}</arg>
<arg>${message}</arg>
</arguments>
<status status="PASS" endtime="20130409 15:06:22.026" starttime="20130409 15:06:22.025"></status>
</kw>
<msg timestamp="20130409 15:06:22.027" level="INFO">${tc} = Variables are not checked in when arguments are embedded</msg>
<status status="PASS" endtime="20130409 15:06:22.026" starttime="20130409 15:06:22.023"></status>
</kw>
<kw type="kw" name="Name and status should be" timeout="">
<doc></doc>
<arguments>
<arg>${tc.kws[0]}</arg>
<arg>Embedded \${TESTNAME} here</arg>
<arg>PASS</arg>
</arguments>
<kw type="kw" name="BuiltIn.Should Be Equal" timeout="">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${kw.name}</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20130409 15:06:22.029" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20130409 15:06:22.029" starttime="20130409 15:06:22.028"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal" timeout="">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${kw.status}</arg>
<arg>${status}</arg>
</arguments>
<msg timestamp="20130409 15:06:22.030" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20130409 15:06:22.030" starttime="20130409 15:06:22.030"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:22.030" starttime="20130409 15:06:22.027"></status>
</kw>
<kw type="kw" name="Name and status should be" timeout="">
<doc></doc>
<arguments>
<arg>${tc.kws[0].kws[0]}</arg>
<arg>BuiltIn.No Operation</arg>
<arg>NOT_RUN</arg>
</arguments>
<kw type="kw" name="BuiltIn.Should Be Equal" timeout="">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${kw.name}</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20130409 15:06:22.033" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20130409 15:06:22.033" starttime="20130409 15:06:22.032"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal" timeout="">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${kw.status}</arg>
<arg>${status}</arg>
</arguments>
<msg timestamp="20130409 15:06:22.034" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20130409 15:06:22.034" starttime="20130409 15:06:22.033"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:22.034" starttime="20130409 15:06:22.031"></status>
</kw>
<kw type="kw" name="Name and status should be" timeout="">
<doc></doc>
<arguments>
<arg>${tc.kws[1]}</arg>
<arg>Embedded \${nonex} here</arg>
<arg>PASS</arg>
</arguments>
<kw type="kw" name="BuiltIn.Should Be Equal" timeout="">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${kw.name}</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20130409 15:06:22.036" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20130409 15:06:22.036" starttime="20130409 15:06:22.036"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal" timeout="">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${kw.status}</arg>
<arg>${status}</arg>
</arguments>
<msg timestamp="20130409 15:06:22.037" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20130409 15:06:22.037" starttime="20130409 15:06:22.036"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:22.037" starttime="20130409 15:06:22.034"></status>
</kw>
<kw type="kw" name="Name and status should be" timeout="">
<doc></doc>
<arguments>
<arg>${tc.kws[1].kws[0]}</arg>
<arg>BuiltIn.No Operation</arg>
<arg>NOT_RUN</arg>
</arguments>
<kw type="kw" name="BuiltIn.Should Be Equal" timeout="">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${kw.name}</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20130409 15:06:22.039" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20130409 15:06:22.039" starttime="20130409 15:06:22.039"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal" timeout="">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${kw.status}</arg>
<arg>${status}</arg>
</arguments>
<msg timestamp="20130409 15:06:22.040" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20130409 15:06:22.040" starttime="20130409 15:06:22.039"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:22.040" starttime="20130409 15:06:22.037"></status>
</kw>
<doc>See the doc of the previous test</doc>
<tags>
<tag>jybot</tag>
<tag>pybot</tag>
<tag>regression</tag>
</tags>
<status status="PASS" endtime="20130409 15:06:22.040" critical="yes" starttime="20130409 15:06:22.021"></status>
</test>
<test id="s1-t7" timeout="" name="User keyword return value">
<kw type="kw" name="atest_resource.Check Test Case" timeout="">
<doc></doc>
<arguments>
<arg>${TESTNAME}</arg>
</arguments>
<kw type="kw" name="${test} = TestCheckerLibrary.Get Test From Suite" timeout="">
<doc></doc>
<arguments>
<arg>${SUITE}</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20130409 15:06:22.044" level="INFO">${test} = User keyword return value</msg>
<status status="PASS" endtime="20130409 15:06:22.044" starttime="20130409 15:06:22.043"></status>
</kw>
<kw type="kw" name="TestCheckerLibrary.Check Test Status" timeout="">
<doc>Verifies that test's status and message are as expected.</doc>
<arguments>
<arg>${test}</arg>
<arg>${status}</arg>
<arg>${message}</arg>
</arguments>
<status status="PASS" endtime="20130409 15:06:22.045" starttime="20130409 15:06:22.044"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:22.045" starttime="20130409 15:06:22.042"></status>
</kw>
<doc></doc>
<tags>
<tag>jybot</tag>
<tag>pybot</tag>
<tag>regression</tag>
</tags>
<status status="PASS" endtime="20130409 15:06:22.045" critical="yes" starttime="20130409 15:06:22.041"></status>
</test>
<test id="s1-t8" timeout="" name="Test Setup and Teardown">
<kw type="kw" name="${tc} = atest_resource.Check Test Case" timeout="">
<doc></doc>
<arguments>
<arg>${TESTNAME}</arg>
</arguments>
<kw type="kw" name="${test} = TestCheckerLibrary.Get Test From Suite" timeout="">
<doc></doc>
<arguments>
<arg>${SUITE}</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20130409 15:06:22.049" level="INFO">${test} = Test Setup And Teardown</msg>
<status status="PASS" endtime="20130409 15:06:22.049" starttime="20130409 15:06:22.048"></status>
</kw>
<kw type="kw" name="TestCheckerLibrary.Check Test Status" timeout="">
<doc>Verifies that test's status and message are as expected.</doc>
<arguments>
<arg>${test}</arg>
<arg>${status}</arg>
<arg>${message}</arg>
</arguments>
<status status="PASS" endtime="20130409 15:06:22.050" starttime="20130409 15:06:22.049"></status>
</kw>
<msg timestamp="20130409 15:06:22.050" level="INFO">${tc} = Test Setup And Teardown</msg>
<status status="PASS" endtime="20130409 15:06:22.050" starttime="20130409 15:06:22.047"></status>
</kw>
<kw type="kw" name="Should have correct number of keywords" timeout="">
<doc></doc>
<arguments>
<arg>${tc}</arg>
<arg>1</arg>
</arguments>
<kw type="kw" name="BuiltIn.Log" timeout="">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${test or uk.kws}</arg>
</arguments>
<msg timestamp="20130409 15:06:22.052" level="INFO">[&lt;TestCheckerLibrary.NoSlotsKeyword object at 0x1091d8eb0&gt;]</msg>
<status status="PASS" endtime="20130409 15:06:22.052" starttime="20130409 15:06:22.051"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal As Integers" timeout="">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${test or uk.kw_count}</arg>
<arg>${exp number of kws}</arg>
</arguments>
<msg timestamp="20130409 15:06:22.053" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20130409 15:06:22.053" starttime="20130409 15:06:22.052"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:22.053" starttime="20130409 15:06:22.050"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal" timeout="">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${tc.setup.name}</arg>
<arg>BuiltIn.Log</arg>
</arguments>
<msg timestamp="20130409 15:06:22.054" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20130409 15:06:22.054" starttime="20130409 15:06:22.053"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal" timeout="">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${tc.teardown.name}</arg>
<arg>Does not exist</arg>
</arguments>
<msg timestamp="20130409 15:06:22.054" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20130409 15:06:22.054" starttime="20130409 15:06:22.054"></status>
</kw>
<doc></doc>
<tags>
<tag>jybot</tag>
<tag>pybot</tag>
<tag>regression</tag>
</tags>
<status status="PASS" endtime="20130409 15:06:22.055" critical="yes" starttime="20130409 15:06:22.046"></status>
</test>
<test id="s1-t9" timeout="" name="Keyword Teardown">
<kw type="kw" name="${tc} = atest_resource.Check Test Case" timeout="">
<doc></doc>
<arguments>
<arg>${TESTNAME}</arg>
</arguments>
<kw type="kw" name="${test} = TestCheckerLibrary.Get Test From Suite" timeout="">
<doc></doc>
<arguments>
<arg>${SUITE}</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20130409 15:06:22.058" level="INFO">${test} = Keyword Teardown</msg>
<status status="PASS" endtime="20130409 15:06:22.058" starttime="20130409 15:06:22.057"></status>
</kw>
<kw type="kw" name="TestCheckerLibrary.Check Test Status" timeout="">
<doc>Verifies that test's status and message are as expected.</doc>
<arguments>
<arg>${test}</arg>
<arg>${status}</arg>
<arg>${message}</arg>
</arguments>
<status status="PASS" endtime="20130409 15:06:22.058" starttime="20130409 15:06:22.058"></status>
</kw>
<msg timestamp="20130409 15:06:22.059" level="INFO">${tc} = Keyword Teardown</msg>
<status status="PASS" endtime="20130409 15:06:22.059" starttime="20130409 15:06:22.056"></status>
</kw>
<kw type="kw" name="Should have correct number of keywords" timeout="">
<doc></doc>
<arguments>
<arg>${tc}</arg>
<arg>1</arg>
</arguments>
<kw type="kw" name="BuiltIn.Log" timeout="">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${test or uk.kws}</arg>
</arguments>
<msg timestamp="20130409 15:06:22.060" level="INFO">[&lt;TestCheckerLibrary.NoSlotsKeyword object at 0x1091da0f0&gt;]</msg>
<status status="PASS" endtime="20130409 15:06:22.061" starttime="20130409 15:06:22.060"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal As Integers" timeout="">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${test or uk.kw_count}</arg>
<arg>${exp number of kws}</arg>
</arguments>
<msg timestamp="20130409 15:06:22.061" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20130409 15:06:22.062" starttime="20130409 15:06:22.061"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:22.062" starttime="20130409 15:06:22.059"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal" timeout="">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${tc.kws[0].kws[1].name}</arg>
<arg>Does not exist</arg>
</arguments>
<msg timestamp="20130409 15:06:22.063" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20130409 15:06:22.063" starttime="20130409 15:06:22.062"></status>
</kw>
<doc></doc>
<tags>
<tag>jybot</tag>
<tag>pybot</tag>
<tag>regression</tag>
</tags>
<status status="PASS" endtime="20130409 15:06:22.063" critical="yes" starttime="20130409 15:06:22.055"></status>
</test>
<test id="s1-t10" timeout="" name="For Loops">
<kw type="kw" name="${tc} = atest_resource.Check Test Case" timeout="">
<doc></doc>
<arguments>
<arg>${TESTNAME}</arg>
</arguments>
<kw type="kw" name="${test} = TestCheckerLibrary.Get Test From Suite" timeout="">
<doc></doc>
<arguments>
<arg>${SUITE}</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20130409 15:06:22.067" level="INFO">${test} = For Loops</msg>
<status status="PASS" endtime="20130409 15:06:22.067" starttime="20130409 15:06:22.066"></status>
</kw>
<kw type="kw" name="TestCheckerLibrary.Check Test Status" timeout="">
<doc>Verifies that test's status and message are as expected.</doc>
<arguments>
<arg>${test}</arg>
<arg>${status}</arg>
<arg>${message}</arg>
</arguments>
<status status="PASS" endtime="20130409 15:06:22.068" starttime="20130409 15:06:22.068"></status>
</kw>
<msg timestamp="20130409 15:06:22.068" level="INFO">${tc} = For Loops</msg>
<status status="PASS" endtime="20130409 15:06:22.068" starttime="20130409 15:06:22.065"></status>
</kw>
<kw type="kw" name="Should have correct number of keywords" timeout="">
<doc></doc>
<arguments>
<arg>${tc}</arg>
<arg>3</arg>
</arguments>
<kw type="kw" name="BuiltIn.Log" timeout="">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${test or uk.kws}</arg>
</arguments>
<msg timestamp="20130409 15:06:22.070" level="INFO">[&lt;TestCheckerLibrary.NoSlotsKeyword object at 0x1091da2d0&gt;, &lt;TestCheckerLibrary.NoSlotsKeyword object at 0x1091da5f0&gt;, &lt;TestCheckerLibrary.NoSlotsKeyword object at 0x1091da9b0&gt;]</msg>
<status status="PASS" endtime="20130409 15:06:22.070" starttime="20130409 15:06:22.070"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal As Integers" timeout="">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${test or uk.kw_count}</arg>
<arg>${exp number of kws}</arg>
</arguments>
<msg timestamp="20130409 15:06:22.071" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20130409 15:06:22.071" starttime="20130409 15:06:22.071"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:22.071" starttime="20130409 15:06:22.069"></status>
</kw>
<kw type="kw" name="Should have correct number of keywords" timeout="">
<doc></doc>
<arguments>
<arg>${tc.kws[0]}</arg>
<arg>1</arg>
</arguments>
<kw type="kw" name="BuiltIn.Log" timeout="">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${test or uk.kws}</arg>
</arguments>
<msg timestamp="20130409 15:06:22.073" level="INFO">[${i} = ${i}]</msg>
<status status="PASS" endtime="20130409 15:06:22.073" starttime="20130409 15:06:22.073"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal As Integers" timeout="">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${test or uk.kw_count}</arg>
<arg>${exp number of kws}</arg>
</arguments>
<msg timestamp="20130409 15:06:22.074" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20130409 15:06:22.074" starttime="20130409 15:06:22.073"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:22.074" starttime="20130409 15:06:22.072"></status>
</kw>
<kw type="kw" name="Should have correct number of keywords" timeout="">
<doc></doc>
<arguments>
<arg>${tc.kws[0].kws[0]}</arg>
<arg>2</arg>
</arguments>
<kw type="kw" name="BuiltIn.Log" timeout="">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${test or uk.kws}</arg>
</arguments>
<msg timestamp="20130409 15:06:22.076" level="INFO">[BuiltIn.Log, resource.Simple UK]</msg>
<status status="PASS" endtime="20130409 15:06:22.076" starttime="20130409 15:06:22.076"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal As Integers" timeout="">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${test or uk.kw_count}</arg>
<arg>${exp number of kws}</arg>
</arguments>
<msg timestamp="20130409 15:06:22.077" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20130409 15:06:22.077" starttime="20130409 15:06:22.076"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:22.077" starttime="20130409 15:06:22.074"></status>
</kw>
<kw type="kw" name="Should have correct number of keywords" timeout="">
<doc></doc>
<arguments>
<arg>${tc.kws[1]}</arg>
<arg>3</arg>
</arguments>
<kw type="kw" name="BuiltIn.Log" timeout="">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${test or uk.kws}</arg>
</arguments>
<msg timestamp="20130409 15:06:22.079" level="INFO">[@{list} = BuiltIn.Create List, ${i} | ${j} | ${k} IN [ @{list} ], BuiltIn.Fail]</msg>
<status status="PASS" endtime="20130409 15:06:22.079" starttime="20130409 15:06:22.079"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal As Integers" timeout="">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${test or uk.kw_count}</arg>
<arg>${exp number of kws}</arg>
</arguments>
<msg timestamp="20130409 15:06:22.080" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20130409 15:06:22.080" starttime="20130409 15:06:22.079"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:22.080" starttime="20130409 15:06:22.077"></status>
</kw>
<kw type="kw" name="Should have correct number of keywords" timeout="">
<doc></doc>
<arguments>
<arg>${tc.kws[1].kws[1]}</arg>
<arg>1</arg>
</arguments>
<kw type="kw" name="BuiltIn.Log" timeout="">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${test or uk.kws}</arg>
</arguments>
<msg timestamp="20130409 15:06:22.083" level="INFO">[${i} = ${i}, ${j} = ${j}, ${k} = ${k}]</msg>
<status status="PASS" endtime="20130409 15:06:22.083" starttime="20130409 15:06:22.082"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal As Integers" timeout="">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${test or uk.kw_count}</arg>
<arg>${exp number of kws}</arg>
</arguments>
<msg timestamp="20130409 15:06:22.084" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20130409 15:06:22.084" starttime="20130409 15:06:22.083"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:22.084" starttime="20130409 15:06:22.081"></status>
</kw>
<doc></doc>
<tags>
<tag>jybot</tag>
<tag>pybot</tag>
<tag>regression</tag>
</tags>
<status status="PASS" endtime="20130409 15:06:22.084" critical="yes" starttime="20130409 15:06:22.063"></status>
</test>
<test id="s1-t11" timeout="" name="Non-existing keyword name">
<kw type="kw" name="atest_resource.Check Test Case" timeout="">
<doc></doc>
<arguments>
<arg>${TESTNAME}</arg>
</arguments>
<kw type="kw" name="${test} = TestCheckerLibrary.Get Test From Suite" timeout="">
<doc></doc>
<arguments>
<arg>${SUITE}</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20130409 15:06:22.087" level="INFO">${test} = Non-existing keyword name</msg>
<status status="PASS" endtime="20130409 15:06:22.087" starttime="20130409 15:06:22.087"></status>
</kw>
<kw type="kw" name="TestCheckerLibrary.Check Test Status" timeout="">
<doc>Verifies that test's status and message are as expected.</doc>
<arguments>
<arg>${test}</arg>
<arg>${status}</arg>
<arg>${message}</arg>
</arguments>
<status status="PASS" endtime="20130409 15:06:22.088" starttime="20130409 15:06:22.088"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:22.088" starttime="20130409 15:06:22.085"></status>
</kw>
<doc></doc>
<tags>
<tag>jybot</tag>
<tag>pybot</tag>
<tag>regression</tag>
</tags>
<status status="PASS" endtime="20130409 15:06:22.089" critical="yes" starttime="20130409 15:06:22.084"></status>
</test>
<test id="s1-t12" timeout="" name="Too few arguments">
<kw type="kw" name="atest_resource.Check Test Case" timeout="">
<doc></doc>
<arguments>
<arg>${TESTNAME}</arg>
</arguments>
<kw type="kw" name="${test} = TestCheckerLibrary.Get Test From Suite" timeout="">
<doc></doc>
<arguments>
<arg>${SUITE}</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20130409 15:06:22.092" level="INFO">${test} = Too few arguments</msg>
<status status="PASS" endtime="20130409 15:06:22.092" starttime="20130409 15:06:22.091"></status>
</kw>
<kw type="kw" name="TestCheckerLibrary.Check Test Status" timeout="">
<doc>Verifies that test's status and message are as expected.</doc>
<arguments>
<arg>${test}</arg>
<arg>${status}</arg>
<arg>${message}</arg>
</arguments>
<status status="PASS" endtime="20130409 15:06:22.093" starttime="20130409 15:06:22.092"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:22.093" starttime="20130409 15:06:22.090"></status>
</kw>
<doc></doc>
<tags>
<tag>jybot</tag>
<tag>pybot</tag>
<tag>regression</tag>
</tags>
<status status="PASS" endtime="20130409 15:06:22.093" critical="yes" starttime="20130409 15:06:22.089"></status>
</test>
<test id="s1-t13" timeout="" name="Too few arguments for UK">
<kw type="kw" name="atest_resource.Check Test Case" timeout="">
<doc></doc>
<arguments>
<arg>${TESTNAME}</arg>
</arguments>
<kw type="kw" name="${test} = TestCheckerLibrary.Get Test From Suite" timeout="">
<doc></doc>
<arguments>
<arg>${SUITE}</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20130409 15:06:22.097" level="INFO">${test} = Too few arguments for UK</msg>
<status status="PASS" endtime="20130409 15:06:22.096" starttime="20130409 15:06:22.096"></status>
</kw>
<kw type="kw" name="TestCheckerLibrary.Check Test Status" timeout="">
<doc>Verifies that test's status and message are as expected.</doc>
<arguments>
<arg>${test}</arg>
<arg>${status}</arg>
<arg>${message}</arg>
</arguments>
<status status="PASS" endtime="20130409 15:06:22.097" starttime="20130409 15:06:22.097"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:22.097" starttime="20130409 15:06:22.095"></status>
</kw>
<doc></doc>
<tags>
<tag>jybot</tag>
<tag>pybot</tag>
<tag>regression</tag>
</tags>
<status status="PASS" endtime="20130409 15:06:22.098" critical="yes" starttime="20130409 15:06:22.094"></status>
</test>
<test id="s1-t14" timeout="" name="Too many arguments">
<kw type="kw" name="atest_resource.Check Test Case" timeout="">
<doc></doc>
<arguments>
<arg>${TESTNAME}</arg>
</arguments>
<kw type="kw" name="${test} = TestCheckerLibrary.Get Test From Suite" timeout="">
<doc></doc>
<arguments>
<arg>${SUITE}</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20130409 15:06:22.101" level="INFO">${test} = Too many arguments</msg>
<status status="PASS" endtime="20130409 15:06:22.101" starttime="20130409 15:06:22.100"></status>
</kw>
<kw type="kw" name="TestCheckerLibrary.Check Test Status" timeout="">
<doc>Verifies that test's status and message are as expected.</doc>
<arguments>
<arg>${test}</arg>
<arg>${status}</arg>
<arg>${message}</arg>
</arguments>
<status status="PASS" endtime="20130409 15:06:22.102" starttime="20130409 15:06:22.101"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:22.102" starttime="20130409 15:06:22.099"></status>
</kw>
<doc></doc>
<tags>
<tag>jybot</tag>
<tag>pybot</tag>
<tag>regression</tag>
</tags>
<status status="PASS" endtime="20130409 15:06:22.102" critical="yes" starttime="20130409 15:06:22.098"></status>
</test>
<test id="s1-t15" timeout="" name="Invalid syntax in UK">
<kw type="kw" name="atest_resource.Check Test Case" timeout="">
<doc></doc>
<arguments>
<arg>${TESTNAME}</arg>
</arguments>
<kw type="kw" name="${test} = TestCheckerLibrary.Get Test From Suite" timeout="">
<doc></doc>
<arguments>
<arg>${SUITE}</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20130409 15:06:22.109" level="INFO">${test} = Invalid syntax in UK</msg>
<status status="PASS" endtime="20130409 15:06:22.109" starttime="20130409 15:06:22.107"></status>
</kw>
<kw type="kw" name="TestCheckerLibrary.Check Test Status" timeout="">
<doc>Verifies that test's status and message are as expected.</doc>
<arguments>
<arg>${test}</arg>
<arg>${status}</arg>
<arg>${message}</arg>
</arguments>
<status status="PASS" endtime="20130409 15:06:22.110" starttime="20130409 15:06:22.109"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:22.111" starttime="20130409 15:06:22.104"></status>
</kw>
<doc></doc>
<tags>
<tag>jybot</tag>
<tag>pybot</tag>
<tag>regression</tag>
</tags>
<status status="PASS" endtime="20130409 15:06:22.111" critical="yes" starttime="20130409 15:06:22.103"></status>
</test>
<test id="s1-t16" timeout="" name="Multiple Failures">
<kw type="kw" name="atest_resource.Check Test Case" timeout="">
<doc></doc>
<arguments>
<arg>${TESTNAME}</arg>
</arguments>
<kw type="kw" name="${test} = TestCheckerLibrary.Get Test From Suite" timeout="">
<doc></doc>
<arguments>
<arg>${SUITE}</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20130409 15:06:22.116" level="INFO">${test} = Multiple Failures</msg>
<status status="PASS" endtime="20130409 15:06:22.116" starttime="20130409 15:06:22.115"></status>
</kw>
<kw type="kw" name="TestCheckerLibrary.Check Test Status" timeout="">
<doc>Verifies that test's status and message are as expected.</doc>
<arguments>
<arg>${test}</arg>
<arg>${status}</arg>
<arg>${message}</arg>
</arguments>
<status status="PASS" endtime="20130409 15:06:22.117" starttime="20130409 15:06:22.116"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:22.117" starttime="20130409 15:06:22.113"></status>
</kw>
<doc></doc>
<tags>
<tag>jybot</tag>
<tag>pybot</tag>
<tag>regression</tag>
</tags>
<status status="PASS" endtime="20130409 15:06:22.117" critical="yes" starttime="20130409 15:06:22.111"></status>
</test>
<test id="s1-t17" timeout="" name="Invalid imports">
<kw type="kw" name="atest_resource.Check Stderr Contains" timeout="">
<doc></doc>
<arguments>
<arg>Importing test library 'DoesNotExist' failed: ImportError: No module named DoesNotExist</arg>
</arguments>
<kw type="kw" name="atest_resource.Check File Contains" timeout="">
<doc></doc>
<arguments>
<arg>${STDERR_FILE}</arg>
<arg>@{expected}</arg>
</arguments>
<kw type="kw" name="${exp} = BuiltIn.Catenate" timeout="">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>@{expected}</arg>
</arguments>
<msg timestamp="20130409 15:06:22.121" level="INFO">${exp} = Importing test library 'DoesNotExist' failed: ImportError: No module named DoesNotExist</msg>
<status status="PASS" endtime="20130409 15:06:22.121" starttime="20130409 15:06:22.121"></status>
</kw>
<kw type="kw" name="${file} = atest_resource.Get Output File" timeout="">
<doc>Output encoding avare helper</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<kw type="kw" name="${encoding} = BuiltIn.Evaluate" timeout="">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>__import__('robot').utils.encoding.OUTPUT_ENCODING</arg>
</arguments>
<msg timestamp="20130409 15:06:22.123" level="INFO">${encoding} = UTF-8</msg>
<status status="PASS" endtime="20130409 15:06:22.123" starttime="20130409 15:06:22.122"></status>
</kw>
<kw type="kw" name="${encoding} = BuiltIn.Set Variable If" timeout="">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>r'${path}' in [r'${STDERR FILE}',r'${STDOUT FILE}']</arg>
<arg>${encoding}</arg>
<arg>UTF-8</arg>
</arguments>
<msg timestamp="20130409 15:06:22.123" level="INFO">${encoding} = UTF-8</msg>
<status status="PASS" endtime="20130409 15:06:22.123" starttime="20130409 15:06:22.123"></status>
</kw>
<kw type="kw" name="${file} = OperatingSystem.Log File" timeout="">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${path}</arg>
<arg>${encoding}</arg>
</arguments>
<msg timestamp="20130409 15:06:22.124" html="yes" level="INFO">Getting file '&lt;a href="file:///Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests/stderr.txt"&gt;/Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests/stderr.txt&lt;/a&gt;'</msg>
<msg timestamp="20130409 15:06:22.124" level="INFO">[ ERROR ] Error in file '/Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/dryrun.txt' in table 'Settings': Importing test library 'DoesNotExist' failed: ImportError: No module named DoesNotExist
Traceback (most recent call last):
  None
PYTHONPATH:
  /Users/asyrjasalo/eficode/robot/robotframework/atest/testresources/testlibs
  /Users/asyrjasalo/eficode/robot/robotframework/atest/testresources/listeners
  /Users/asyrjasalo/eficode/robot/robotframework/src/robot/libraries
  /Users/asyrjasalo/eficode/robot/robotframework/src
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/pip-1.3.1-py2.7.egg
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/distribute-0.6.36-py2.7.egg
  /usr/local/lib/python2.7/site-packages/pip-1.3.1-py2.7.egg
  /usr/local/lib/python2.7/site-packages/distribute-0.6.36-py2.7.egg
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python27.zip
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-darwin
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-mac
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-mac/lib-scriptpackages
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-tk
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-old
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-dynload
  /Library/Python/2.7/site-packages
  /usr/local/lib/wxPython-unicode-2.8.12.1/lib/python2.7
  /usr/local/lib/python2.7/site-packages
  .
  /Users/asyrjasalo/eficode/robot/robotframework/atest
[ ERROR ] Error in file '/Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/dryrun.txt' in table 'Settings': Variable file 'wrong_path.py' does not exist.
[ ERROR ] Error in file '/Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/dryrun.txt' in table 'Settings': Resource file 'NonExisting.tsv' does not exist.
</msg>
<msg timestamp="20130409 15:06:22.125" level="INFO">${file} = [ ERROR ] Error in file '/Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/dryrun.txt' in table 'Settings': Importing test library 'DoesNotExist' failed: ImportError: No module ...</msg>
<status status="PASS" endtime="20130409 15:06:22.125" starttime="20130409 15:06:22.124"></status>
</kw>
<msg timestamp="20130409 15:06:22.125" level="INFO">${file} = [ ERROR ] Error in file '/Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/dryrun.txt' in table 'Settings': Importing test library 'DoesNotExist' failed: ImportError: No module ...</msg>
<status status="PASS" endtime="20130409 15:06:22.125" starttime="20130409 15:06:22.121"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Contain" timeout="">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${file}</arg>
<arg>${exp}</arg>
</arguments>
<status status="PASS" endtime="20130409 15:06:22.126" starttime="20130409 15:06:22.125"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:22.126" starttime="20130409 15:06:22.120"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:22.126" starttime="20130409 15:06:22.119"></status>
</kw>
<kw type="kw" name="atest_resource.Check Stderr Contains" timeout="">
<doc></doc>
<arguments>
<arg>Variable file 'wrong_path.py' does not exist</arg>
</arguments>
<kw type="kw" name="atest_resource.Check File Contains" timeout="">
<doc></doc>
<arguments>
<arg>${STDERR_FILE}</arg>
<arg>@{expected}</arg>
</arguments>
<kw type="kw" name="${exp} = BuiltIn.Catenate" timeout="">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>@{expected}</arg>
</arguments>
<msg timestamp="20130409 15:06:22.128" level="INFO">${exp} = Variable file 'wrong_path.py' does not exist</msg>
<status status="PASS" endtime="20130409 15:06:22.128" starttime="20130409 15:06:22.128"></status>
</kw>
<kw type="kw" name="${file} = atest_resource.Get Output File" timeout="">
<doc>Output encoding avare helper</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<kw type="kw" name="${encoding} = BuiltIn.Evaluate" timeout="">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>__import__('robot').utils.encoding.OUTPUT_ENCODING</arg>
</arguments>
<msg timestamp="20130409 15:06:22.130" level="INFO">${encoding} = UTF-8</msg>
<status status="PASS" endtime="20130409 15:06:22.129" starttime="20130409 15:06:22.129"></status>
</kw>
<kw type="kw" name="${encoding} = BuiltIn.Set Variable If" timeout="">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>r'${path}' in [r'${STDERR FILE}',r'${STDOUT FILE}']</arg>
<arg>${encoding}</arg>
<arg>UTF-8</arg>
</arguments>
<msg timestamp="20130409 15:06:22.130" level="INFO">${encoding} = UTF-8</msg>
<status status="PASS" endtime="20130409 15:06:22.130" starttime="20130409 15:06:22.130"></status>
</kw>
<kw type="kw" name="${file} = OperatingSystem.Log File" timeout="">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${path}</arg>
<arg>${encoding}</arg>
</arguments>
<msg timestamp="20130409 15:06:22.131" html="yes" level="INFO">Getting file '&lt;a href="file:///Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests/stderr.txt"&gt;/Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests/stderr.txt&lt;/a&gt;'</msg>
<msg timestamp="20130409 15:06:22.131" level="INFO">[ ERROR ] Error in file '/Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/dryrun.txt' in table 'Settings': Importing test library 'DoesNotExist' failed: ImportError: No module named DoesNotExist
Traceback (most recent call last):
  None
PYTHONPATH:
  /Users/asyrjasalo/eficode/robot/robotframework/atest/testresources/testlibs
  /Users/asyrjasalo/eficode/robot/robotframework/atest/testresources/listeners
  /Users/asyrjasalo/eficode/robot/robotframework/src/robot/libraries
  /Users/asyrjasalo/eficode/robot/robotframework/src
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/pip-1.3.1-py2.7.egg
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/distribute-0.6.36-py2.7.egg
  /usr/local/lib/python2.7/site-packages/pip-1.3.1-py2.7.egg
  /usr/local/lib/python2.7/site-packages/distribute-0.6.36-py2.7.egg
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python27.zip
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-darwin
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-mac
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-mac/lib-scriptpackages
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-tk
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-old
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-dynload
  /Library/Python/2.7/site-packages
  /usr/local/lib/wxPython-unicode-2.8.12.1/lib/python2.7
  /usr/local/lib/python2.7/site-packages
  .
  /Users/asyrjasalo/eficode/robot/robotframework/atest
[ ERROR ] Error in file '/Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/dryrun.txt' in table 'Settings': Variable file 'wrong_path.py' does not exist.
[ ERROR ] Error in file '/Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/dryrun.txt' in table 'Settings': Resource file 'NonExisting.tsv' does not exist.
</msg>
<msg timestamp="20130409 15:06:22.131" level="INFO">${file} = [ ERROR ] Error in file '/Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/dryrun.txt' in table 'Settings': Importing test library 'DoesNotExist' failed: ImportError: No module ...</msg>
<status status="PASS" endtime="20130409 15:06:22.131" starttime="20130409 15:06:22.131"></status>
</kw>
<msg timestamp="20130409 15:06:22.132" level="INFO">${file} = [ ERROR ] Error in file '/Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/dryrun.txt' in table 'Settings': Importing test library 'DoesNotExist' failed: ImportError: No module ...</msg>
<status status="PASS" endtime="20130409 15:06:22.131" starttime="20130409 15:06:22.128"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Contain" timeout="">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${file}</arg>
<arg>${exp}</arg>
</arguments>
<status status="PASS" endtime="20130409 15:06:22.132" starttime="20130409 15:06:22.132"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:22.132" starttime="20130409 15:06:22.127"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:22.132" starttime="20130409 15:06:22.126"></status>
</kw>
<kw type="kw" name="atest_resource.Check Stderr Contains" timeout="">
<doc></doc>
<arguments>
<arg>Resource file 'NonExisting.tsv' does not exist</arg>
</arguments>
<kw type="kw" name="atest_resource.Check File Contains" timeout="">
<doc></doc>
<arguments>
<arg>${STDERR_FILE}</arg>
<arg>@{expected}</arg>
</arguments>
<kw type="kw" name="${exp} = BuiltIn.Catenate" timeout="">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>@{expected}</arg>
</arguments>
<msg timestamp="20130409 15:06:22.135" level="INFO">${exp} = Resource file 'NonExisting.tsv' does not exist</msg>
<status status="PASS" endtime="20130409 15:06:22.135" starttime="20130409 15:06:22.134"></status>
</kw>
<kw type="kw" name="${file} = atest_resource.Get Output File" timeout="">
<doc>Output encoding avare helper</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<kw type="kw" name="${encoding} = BuiltIn.Evaluate" timeout="">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>__import__('robot').utils.encoding.OUTPUT_ENCODING</arg>
</arguments>
<msg timestamp="20130409 15:06:22.136" level="INFO">${encoding} = UTF-8</msg>
<status status="PASS" endtime="20130409 15:06:22.136" starttime="20130409 15:06:22.136"></status>
</kw>
<kw type="kw" name="${encoding} = BuiltIn.Set Variable If" timeout="">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>r'${path}' in [r'${STDERR FILE}',r'${STDOUT FILE}']</arg>
<arg>${encoding}</arg>
<arg>UTF-8</arg>
</arguments>
<msg timestamp="20130409 15:06:22.137" level="INFO">${encoding} = UTF-8</msg>
<status status="PASS" endtime="20130409 15:06:22.137" starttime="20130409 15:06:22.136"></status>
</kw>
<kw type="kw" name="${file} = OperatingSystem.Log File" timeout="">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${path}</arg>
<arg>${encoding}</arg>
</arguments>
<msg timestamp="20130409 15:06:22.137" html="yes" level="INFO">Getting file '&lt;a href="file:///Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests/stderr.txt"&gt;/Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests/stderr.txt&lt;/a&gt;'</msg>
<msg timestamp="20130409 15:06:22.138" level="INFO">[ ERROR ] Error in file '/Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/dryrun.txt' in table 'Settings': Importing test library 'DoesNotExist' failed: ImportError: No module named DoesNotExist
Traceback (most recent call last):
  None
PYTHONPATH:
  /Users/asyrjasalo/eficode/robot/robotframework/atest/testresources/testlibs
  /Users/asyrjasalo/eficode/robot/robotframework/atest/testresources/listeners
  /Users/asyrjasalo/eficode/robot/robotframework/src/robot/libraries
  /Users/asyrjasalo/eficode/robot/robotframework/src
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/pip-1.3.1-py2.7.egg
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/distribute-0.6.36-py2.7.egg
  /usr/local/lib/python2.7/site-packages/pip-1.3.1-py2.7.egg
  /usr/local/lib/python2.7/site-packages/distribute-0.6.36-py2.7.egg
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python27.zip
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-darwin
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-mac
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-mac/lib-scriptpackages
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-tk
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-old
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-dynload
  /Library/Python/2.7/site-packages
  /usr/local/lib/wxPython-unicode-2.8.12.1/lib/python2.7
  /usr/local/lib/python2.7/site-packages
  .
  /Users/asyrjasalo/eficode/robot/robotframework/atest
[ ERROR ] Error in file '/Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/dryrun.txt' in table 'Settings': Variable file 'wrong_path.py' does not exist.
[ ERROR ] Error in file '/Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/dryrun.txt' in table 'Settings': Resource file 'NonExisting.tsv' does not exist.
</msg>
<msg timestamp="20130409 15:06:22.138" level="INFO">${file} = [ ERROR ] Error in file '/Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/dryrun.txt' in table 'Settings': Importing test library 'DoesNotExist' failed: ImportError: No module ...</msg>
<status status="PASS" endtime="20130409 15:06:22.138" starttime="20130409 15:06:22.137"></status>
</kw>
<msg timestamp="20130409 15:06:22.138" level="INFO">${file} = [ ERROR ] Error in file '/Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/dryrun.txt' in table 'Settings': Importing test library 'DoesNotExist' failed: ImportError: No module ...</msg>
<status status="PASS" endtime="20130409 15:06:22.138" starttime="20130409 15:06:22.135"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Contain" timeout="">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${file}</arg>
<arg>${exp}</arg>
</arguments>
<status status="PASS" endtime="20130409 15:06:22.139" starttime="20130409 15:06:22.138"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:22.139" starttime="20130409 15:06:22.133"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:22.139" starttime="20130409 15:06:22.132"></status>
</kw>
<doc></doc>
<tags>
<tag>jybot</tag>
<tag>pybot</tag>
<tag>regression</tag>
</tags>
<status status="PASS" endtime="20130409 15:06:22.139" critical="yes" starttime="20130409 15:06:22.118"></status>
</test>
<test id="s1-t18" timeout="" name="Test from other suite">
<kw type="kw" name="atest_resource.Check Test Case" timeout="">
<doc></doc>
<arguments>
<arg>Some Other Test</arg>
</arguments>
<kw type="kw" name="${test} = TestCheckerLibrary.Get Test From Suite" timeout="">
<doc></doc>
<arguments>
<arg>${SUITE}</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20130409 15:06:22.142" level="INFO">${test} = Some other test</msg>
<status status="PASS" endtime="20130409 15:06:22.142" starttime="20130409 15:06:22.142"></status>
</kw>
<kw type="kw" name="TestCheckerLibrary.Check Test Status" timeout="">
<doc>Verifies that test's status and message are as expected.</doc>
<arguments>
<arg>${test}</arg>
<arg>${status}</arg>
<arg>${message}</arg>
</arguments>
<status status="PASS" endtime="20130409 15:06:22.143" starttime="20130409 15:06:22.143"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:22.143" starttime="20130409 15:06:22.141"></status>
</kw>
<doc></doc>
<tags>
<tag>jybot</tag>
<tag>pybot</tag>
<tag>regression</tag>
</tags>
<status status="PASS" endtime="20130409 15:06:22.143" critical="yes" starttime="20130409 15:06:22.139"></status>
</test>
<test id="s1-t19" timeout="" name="Import Library Keyword is Called">
<kw type="kw" name="atest_resource.Check Test Case" timeout="">
<doc></doc>
<arguments>
<arg>${TESTNAME}</arg>
</arguments>
<kw type="kw" name="${test} = TestCheckerLibrary.Get Test From Suite" timeout="">
<doc></doc>
<arguments>
<arg>${SUITE}</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20130409 15:06:22.146" level="INFO">${test} = Import Library Keyword is Called</msg>
<status status="PASS" endtime="20130409 15:06:22.146" starttime="20130409 15:06:22.146"></status>
</kw>
<kw type="kw" name="TestCheckerLibrary.Check Test Status" timeout="">
<doc>Verifies that test's status and message are as expected.</doc>
<arguments>
<arg>${test}</arg>
<arg>${status}</arg>
<arg>${message}</arg>
</arguments>
<status status="PASS" endtime="20130409 15:06:22.147" starttime="20130409 15:06:22.147"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:22.147" starttime="20130409 15:06:22.145"></status>
</kw>
<kw type="kw" name="atest_resource.Check Syslog Contains" timeout="">
<doc></doc>
<arguments>
<arg>Imported library 'String' with arguments [ ]</arg>
</arguments>
<kw type="kw" name="atest_resource.Check File Contains" timeout="">
<doc></doc>
<arguments>
<arg>${SYSLOG_FILE}</arg>
<arg>@{expected}</arg>
</arguments>
<kw type="kw" name="${exp} = BuiltIn.Catenate" timeout="">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>@{expected}</arg>
</arguments>
<msg timestamp="20130409 15:06:22.150" level="INFO">${exp} = Imported library 'String' with arguments [ ]</msg>
<status status="PASS" endtime="20130409 15:06:22.150" starttime="20130409 15:06:22.149"></status>
</kw>
<kw type="kw" name="${file} = atest_resource.Get Output File" timeout="">
<doc>Output encoding avare helper</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<kw type="kw" name="${encoding} = BuiltIn.Evaluate" timeout="">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>__import__('robot').utils.encoding.OUTPUT_ENCODING</arg>
</arguments>
<msg timestamp="20130409 15:06:22.151" level="INFO">${encoding} = UTF-8</msg>
<status status="PASS" endtime="20130409 15:06:22.151" starttime="20130409 15:06:22.151"></status>
</kw>
<kw type="kw" name="${encoding} = BuiltIn.Set Variable If" timeout="">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>r'${path}' in [r'${STDERR FILE}',r'${STDOUT FILE}']</arg>
<arg>${encoding}</arg>
<arg>UTF-8</arg>
</arguments>
<msg timestamp="20130409 15:06:22.152" level="INFO">${encoding} = UTF-8</msg>
<status status="PASS" endtime="20130409 15:06:22.152" starttime="20130409 15:06:22.152"></status>
</kw>
<kw type="kw" name="${file} = OperatingSystem.Log File" timeout="">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${path}</arg>
<arg>${encoding}</arg>
</arguments>
<msg timestamp="20130409 15:06:22.153" html="yes" level="INFO">Getting file '&lt;a href="file:///Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests/syslog.txt"&gt;/Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests/syslog.txt&lt;/a&gt;'</msg>
<msg timestamp="20130409 15:06:22.154" level="INFO">20130409 15:06:21.761 | INFO  | Robot Framework trunk 20130226 (Python 2.7.4 on darwin)
20130409 15:06:21.762 | INFO  | Arguments: /Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/dryrun.txt,/Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/more_tests.txt
20130409 15:06:21.762 | INFO  | Settings:
Critical: None
DebugFile: NONE
Doc: None
Exclude: []
Include: []
Listeners: []
Log: NONE
LogLevel: INFO
LogTitle: None
Metadata: []
MonitorColors: OFF
MonitorMarkers: OFF
MonitorWidth: 78
Name: None
NoStatusRC: False
NonCritical: None
Output: /Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests/output.xml
OutputDir: /Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests
RemoveKeywords: []
Report: NONE
ReportBackground: ('#99FF66', '#99FF66', '#FF3333')
ReportTitle: None
RunEmptySuite: False
RunMode: [u'dryrun']
SetTag: []
SplitLog: False
StdErr: None
StdOut: None
SuiteNames: []
SuiteStatLevel: -1
TagDoc: []
TagStatCombine: []
TagStatExclude: []
TagStatInclude: []
TagStatLink: []
TestNames: []
TimestampOutputs: False
VariableFiles: []
Variables: [u'interpreter:python']
VisibleLogLevel: INFO
WarnOnSkipped: False
XUnitFile: NONE
20130409 15:06:21.764 | INFO  | Parsing file '/Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/dryrun.txt'.
20130409 15:06:21.775 | INFO  | Parsing file '/Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/more_tests.txt'.
20130409 15:06:21.779 | INFO  | No debug file
20130409 15:06:21.779 | INFO  | Initializing namespace for test suite 'Dryrun &amp; More Tests'
20130409 15:06:21.781 | INFO  | Imported test library class 'BuiltIn' from '/Users/asyrjasalo/eficode/robot/robotframework/src/robot/libraries/BuiltIn.pyc'.
20130409 15:06:21.798 | INFO  | Imported library 'BuiltIn' with arguments [ ] (version trunk 20130226, class type, global scope, 88 keywords)
20130409 15:06:21.799 | INFO  | Imported test library class 'DeprecatedBuiltIn' from '/Users/asyrjasalo/eficode/robot/robotframework/src/robot/libraries/DeprecatedBuiltIn.pyc'.
20130409 15:06:21.807 | INFO  | Imported library 'DeprecatedBuiltIn' with arguments [ ] (version &lt;unknown&gt;, class type, global scope, 52 keywords)
20130409 15:06:21.807 | INFO  | Imported test library class 'Reserved' from '/Users/asyrjasalo/eficode/robot/robotframework/src/robot/libraries/Reserved.pyc'.
20130409 15:06:21.808 | INFO  | Imported library 'Reserved' with arguments [ ] (version &lt;unknown&gt;, dynamic type, global scope, 10 keywords)
20130409 15:06:21.809 | INFO  | Imported test library module 'Easter' from '/Users/asyrjasalo/eficode/robot/robotframework/src/robot/libraries/Easter.pyc'.
20130409 15:06:21.809 | INFO  | Imported library 'Easter' with arguments [ ] (version &lt;unknown&gt;, module type, global scope, 1 keywords)
20130409 15:06:21.810 | INFO  | Started test suite 'Dryrun &amp; More Tests'
20130409 15:06:21.810 | INFO  | Initializing namespace for test suite 'Dryrun &amp; More Tests.Dryrun'
20130409 15:06:21.810 | INFO  | Imported test library class 'BuiltIn' from '/Users/asyrjasalo/eficode/robot/robotframework/src/robot/libraries/BuiltIn.pyc'.
20130409 15:06:21.811 | INFO  | Found test library 'BuiltIn' with arguments [ ] from cache
20130409 15:06:21.811 | INFO  | Imported test library class 'DeprecatedBuiltIn' from '/Users/asyrjasalo/eficode/robot/robotframework/src/robot/libraries/DeprecatedBuiltIn.pyc'.
20130409 15:06:21.811 | INFO  | Found test library 'DeprecatedBuiltIn' with arguments [ ] from cache
20130409 15:06:21.811 | INFO  | Imported test library class 'Reserved' from '/Users/asyrjasalo/eficode/robot/robotframework/src/robot/libraries/Reserved.pyc'.
20130409 15:06:21.811 | INFO  | Found test library 'Reserved' with arguments [ ] from cache
20130409 15:06:21.812 | INFO  | Imported test library module 'Easter' from '/Users/asyrjasalo/eficode/robot/robotframework/src/robot/libraries/Easter.pyc'.
20130409 15:06:21.812 | INFO  | Found test library 'Easter' with arguments [ ] from cache
20130409 15:06:21.817 | INFO  | Imported test library class 'OperatingSystem' from '/Users/asyrjasalo/eficode/robot/robotframework/src/robot/libraries/OperatingSystem.pyc'.
20130409 15:06:21.826 | INFO  | Imported library 'OperatingSystem' with arguments [ ] (version trunk 20130226, class type, global scope, 57 keywords)
20130409 15:06:21.827 | INFO  | Imported test library class 'DeprecatedOperatingSystem' from '/Users/asyrjasalo/eficode/robot/robotframework/src/robot/libraries/DeprecatedOperatingSystem.pyc'.
20130409 15:06:21.830 | INFO  | Imported library 'DeprecatedOperatingSystem' with arguments [ ] (version &lt;unknown&gt;, class type, global scope, 24 keywords)
20130409 15:06:21.831 | INFO  | Importing variable file '/Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/vars.py' with args []
20130409 15:06:21.831 | INFO  | Imported variable file module 'vars' from '/Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/vars.py'.
20130409 15:06:21.831 | INFO  | Parsing file '/Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/resource.txt'.
20130409 15:06:21.833 | INFO  | Imported resource file '/Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/resource.txt' (4 keywords).
20130409 15:06:21.836 | ERROR | Error in file '/Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/dryrun.txt' in table 'Settings': Importing test library 'DoesNotExist' failed: ImportError: No module named DoesNotExist
Traceback (most recent call last):
  None
PYTHONPATH:
  /Users/asyrjasalo/eficode/robot/robotframework/atest/testresources/testlibs
  /Users/asyrjasalo/eficode/robot/robotframework/atest/testresources/listeners
  /Users/asyrjasalo/eficode/robot/robotframework/src/robot/libraries
  /Users/asyrjasalo/eficode/robot/robotframework/src
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/pip-1.3.1-py2.7.egg
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/distribute-0.6.36-py2.7.egg
  /usr/local/lib/python2.7/site-packages/pip-1.3.1-py2.7.egg
  /usr/local/lib/python2.7/site-packages/distribute-0.6.36-py2.7.egg
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python27.zip
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-darwin
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-mac
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-mac/lib-scriptpackages
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-tk
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-old
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-dynload
  /Library/Python/2.7/site-packages
  /usr/local/lib/wxPython-unicode-2.8.12.1/lib/python2.7
  /usr/local/lib/python2.7/site-packages
  .
  /Users/asyrjasalo/eficode/robot/robotframework/atest
20130409 15:06:21.838 | ERROR | Error in file '/Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/dryrun.txt' in table 'Settings': Variable file 'wrong_path.py' does not exist.
20130409 15:06:21.839 | ERROR | Error in file '/Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/dryrun.txt' in table 'Settings': Resource file 'NonExisting.tsv' does not exist.
20130409 15:06:21.839 | INFO  | Started test suite 'Dryrun'
20130409 15:06:21.840 | INFO  | Started test case 'Passing keywords'
20130409 15:06:21.842 | INFO  | Ended test case 'Passing keywords'
20130409 15:06:21.843 | INFO  | Started test case 'Keywords with embedded arguments'
20130409 15:06:21.845 | INFO  | Ended test case 'Keywords with embedded arguments'
20130409 15:06:21.846 | INFO  | Started test case 'Keywords that would fail'
20130409 15:06:21.848 | INFO  | Ended test case 'Keywords that would fail'
20130409 15:06:21.849 | INFO  | Started test case 'Scalar variables are not checked in keyword arguments'
20130409 15:06:21.850 | INFO  | Ended test case 'Scalar variables are not checked in keyword arguments'
20130409 15:06:21.851 | INFO  | Started test case 'List variables are not checked in keyword arguments'
20130409 15:06:21.854 | INFO  | Ended test case 'List variables are not checked in keyword arguments'
20130409 15:06:21.855 | INFO  | Started test case 'Variables are not checked in when arguments are embedded'
20130409 15:06:21.857 | INFO  | Ended test case 'Variables are not checked in when arguments are embedded'
20130409 15:06:21.858 | INFO  | Started test case 'User keyword return value'
20130409 15:06:21.859 | INFO  | Ended test case 'User keyword return value'
20130409 15:06:21.860 | INFO  | Started test case 'Test Setup And Teardown'
20130409 15:06:21.861 | INFO  | Ended test case 'Test Setup And Teardown'
20130409 15:06:21.862 | INFO  | Started test case 'Keyword Teardown'
20130409 15:06:21.864 | INFO  | Ended test case 'Keyword Teardown'
20130409 15:06:21.865 | INFO  | Started test case 'For Loops'
20130409 15:06:21.870 | INFO  | Ended test case 'For Loops'
20130409 15:06:21.871 | INFO  | Started test case 'Non-existing keyword name'
20130409 15:06:21.872 | INFO  | Ended test case 'Non-existing keyword name'
20130409 15:06:21.872 | INFO  | Started test case 'Too few arguments'
20130409 15:06:21.873 | INFO  | Ended test case 'Too few arguments'
20130409 15:06:21.874 | INFO  | Started test case 'Too few arguments for UK'
20130409 15:06:21.875 | INFO  | Ended test case 'Too few arguments for UK'
20130409 15:06:21.876 | INFO  | Started test case 'Too many arguments'
20130409 15:06:21.877 | INFO  | Ended test case 'Too many arguments'
20130409 15:06:21.878 | INFO  | Started test case 'Invalid syntax in UK'
20130409 15:06:21.879 | INFO  | Ended test case 'Invalid syntax in UK'
20130409 15:06:21.880 | INFO  | Started test case 'Multiple Failures'
20130409 15:06:21.883 | INFO  | Ended test case 'Multiple Failures'
20130409 15:06:21.884 | INFO  | Started test case 'Import Library Keyword is Called'
20130409 15:06:21.885 | INFO  | Imported test library class 'String' from '/Users/asyrjasalo/eficode/robot/robotframework/src/robot/libraries/String.pyc'.
20130409 15:06:21.889 | INFO  | Imported library 'String' with arguments [ ] (version trunk 20130226, class type, global scope, 24 keywords)
20130409 15:06:21.891 | INFO  | Imported test library class 'ParameterLibrary' from '/Users/asyrjasalo/eficode/robot/robotframework/atest/testresources/testlibs/ParameterLibrary.pyc'.
20130409 15:06:21.891 | INFO  | Adding keyword 'host' to library 'ParameterLibrary' failed: Not a method or function
20130409 15:06:21.891 | INFO  | Adding keyword 'port' to library 'ParameterLibrary' failed: Not a method or function
20130409 15:06:21.891 | INFO  | Imported library 'ParameterLibrary' with arguments [ value | 42 ] (version &lt;unknown&gt;, class type, testcase scope, 1 keywords)
20130409 15:06:21.892 | INFO  | Ended test case 'Import Library Keyword is Called'
20130409 15:06:21.893 | INFO  | Ended test suite 'Dryrun'
20130409 15:06:21.893 | INFO  | Initializing namespace for test suite 'Dryrun &amp; More Tests.More Tests'
20130409 15:06:21.894 | INFO  | Imported test library class 'BuiltIn' from '/Users/asyrjasalo/eficode/robot/robotframework/src/robot/libraries/BuiltIn.pyc'.
20130409 15:06:21.894 | INFO  | Found test library 'BuiltIn' with arguments [ ] from cache
20130409 15:06:21.894 | INFO  | Imported test library class 'DeprecatedBuiltIn' from '/Users/asyrjasalo/eficode/robot/robotframework/src/robot/libraries/DeprecatedBuiltIn.pyc'.
20130409 15:06:21.894 | INFO  | Found test library 'DeprecatedBuiltIn' with arguments [ ] from cache
20130409 15:06:21.894 | INFO  | Imported test library class 'Reserved' from '/Users/asyrjasalo/eficode/robot/robotframework/src/robot/libraries/Reserved.pyc'.
20130409 15:06:21.895 | INFO  | Found test library 'Reserved' with arguments [ ] from cache
20130409 15:06:21.895 | INFO  | Imported test library module 'Easter' from '/Users/asyrjasalo/eficode/robot/robotframework/src/robot/libraries/Easter.pyc'.
20130409 15:06:21.895 | INFO  | Found test library 'Easter' with arguments [ ] from cache
20130409 15:06:21.895 | INFO  | Found resource file '/Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/resource.txt' from cache
20130409 15:06:21.896 | INFO  | Started test suite 'More Tests'
20130409 15:06:21.897 | INFO  | Started test case 'Some other test'
20130409 15:06:21.898 | INFO  | Ended test case 'Some other test'
20130409 15:06:21.899 | INFO  | Ended test suite 'More Tests'
20130409 15:06:21.900 | INFO  | Ended test suite 'Dryrun &amp; More Tests'
20130409 15:06:21.900 | INFO  | Tests execution ended. Statistics:
18 critical tests, 8 passed, 10 failed
18 tests total, 8 passed, 10 failed
20130409 15:06:21.901 | INFO  | Output: /Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests/output.xml
</msg>
<msg timestamp="20130409 15:06:22.154" level="INFO">${file} = 20130409 15:06:21.761 | INFO  | Robot Framework trunk 20130226 (Python 2.7.4 on darwin)
20130409 15:06:21.762 | INFO  | Arguments: /Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dry...</msg>
<status status="PASS" endtime="20130409 15:06:22.154" starttime="20130409 15:06:22.153"></status>
</kw>
<msg timestamp="20130409 15:06:22.155" level="INFO">${file} = 20130409 15:06:21.761 | INFO  | Robot Framework trunk 20130226 (Python 2.7.4 on darwin)
20130409 15:06:21.762 | INFO  | Arguments: /Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dry...</msg>
<status status="PASS" endtime="20130409 15:06:22.155" starttime="20130409 15:06:22.150"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Contain" timeout="">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${file}</arg>
<arg>${exp}</arg>
</arguments>
<status status="PASS" endtime="20130409 15:06:22.156" starttime="20130409 15:06:22.155"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:22.156" starttime="20130409 15:06:22.148"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:22.156" starttime="20130409 15:06:22.147"></status>
</kw>
<kw type="kw" name="atest_resource.Check Syslog Contains" timeout="">
<doc></doc>
<arguments>
<arg>Imported library 'ParameterLibrary' with arguments [ value | 42 ]</arg>
</arguments>
<kw type="kw" name="atest_resource.Check File Contains" timeout="">
<doc></doc>
<arguments>
<arg>${SYSLOG_FILE}</arg>
<arg>@{expected}</arg>
</arguments>
<kw type="kw" name="${exp} = BuiltIn.Catenate" timeout="">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>@{expected}</arg>
</arguments>
<msg timestamp="20130409 15:06:22.159" level="INFO">${exp} = Imported library 'ParameterLibrary' with arguments [ value | 42 ]</msg>
<status status="PASS" endtime="20130409 15:06:22.159" starttime="20130409 15:06:22.159"></status>
</kw>
<kw type="kw" name="${file} = atest_resource.Get Output File" timeout="">
<doc>Output encoding avare helper</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<kw type="kw" name="${encoding} = BuiltIn.Evaluate" timeout="">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>__import__('robot').utils.encoding.OUTPUT_ENCODING</arg>
</arguments>
<msg timestamp="20130409 15:06:22.161" level="INFO">${encoding} = UTF-8</msg>
<status status="PASS" endtime="20130409 15:06:22.161" starttime="20130409 15:06:22.161"></status>
</kw>
<kw type="kw" name="${encoding} = BuiltIn.Set Variable If" timeout="">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>r'${path}' in [r'${STDERR FILE}',r'${STDOUT FILE}']</arg>
<arg>${encoding}</arg>
<arg>UTF-8</arg>
</arguments>
<msg timestamp="20130409 15:06:22.162" level="INFO">${encoding} = UTF-8</msg>
<status status="PASS" endtime="20130409 15:06:22.162" starttime="20130409 15:06:22.161"></status>
</kw>
<kw type="kw" name="${file} = OperatingSystem.Log File" timeout="">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${path}</arg>
<arg>${encoding}</arg>
</arguments>
<msg timestamp="20130409 15:06:22.163" html="yes" level="INFO">Getting file '&lt;a href="file:///Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests/syslog.txt"&gt;/Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests/syslog.txt&lt;/a&gt;'</msg>
<msg timestamp="20130409 15:06:22.163" level="INFO">20130409 15:06:21.761 | INFO  | Robot Framework trunk 20130226 (Python 2.7.4 on darwin)
20130409 15:06:21.762 | INFO  | Arguments: /Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/dryrun.txt,/Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/more_tests.txt
20130409 15:06:21.762 | INFO  | Settings:
Critical: None
DebugFile: NONE
Doc: None
Exclude: []
Include: []
Listeners: []
Log: NONE
LogLevel: INFO
LogTitle: None
Metadata: []
MonitorColors: OFF
MonitorMarkers: OFF
MonitorWidth: 78
Name: None
NoStatusRC: False
NonCritical: None
Output: /Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests/output.xml
OutputDir: /Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests
RemoveKeywords: []
Report: NONE
ReportBackground: ('#99FF66', '#99FF66', '#FF3333')
ReportTitle: None
RunEmptySuite: False
RunMode: [u'dryrun']
SetTag: []
SplitLog: False
StdErr: None
StdOut: None
SuiteNames: []
SuiteStatLevel: -1
TagDoc: []
TagStatCombine: []
TagStatExclude: []
TagStatInclude: []
TagStatLink: []
TestNames: []
TimestampOutputs: False
VariableFiles: []
Variables: [u'interpreter:python']
VisibleLogLevel: INFO
WarnOnSkipped: False
XUnitFile: NONE
20130409 15:06:21.764 | INFO  | Parsing file '/Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/dryrun.txt'.
20130409 15:06:21.775 | INFO  | Parsing file '/Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/more_tests.txt'.
20130409 15:06:21.779 | INFO  | No debug file
20130409 15:06:21.779 | INFO  | Initializing namespace for test suite 'Dryrun &amp; More Tests'
20130409 15:06:21.781 | INFO  | Imported test library class 'BuiltIn' from '/Users/asyrjasalo/eficode/robot/robotframework/src/robot/libraries/BuiltIn.pyc'.
20130409 15:06:21.798 | INFO  | Imported library 'BuiltIn' with arguments [ ] (version trunk 20130226, class type, global scope, 88 keywords)
20130409 15:06:21.799 | INFO  | Imported test library class 'DeprecatedBuiltIn' from '/Users/asyrjasalo/eficode/robot/robotframework/src/robot/libraries/DeprecatedBuiltIn.pyc'.
20130409 15:06:21.807 | INFO  | Imported library 'DeprecatedBuiltIn' with arguments [ ] (version &lt;unknown&gt;, class type, global scope, 52 keywords)
20130409 15:06:21.807 | INFO  | Imported test library class 'Reserved' from '/Users/asyrjasalo/eficode/robot/robotframework/src/robot/libraries/Reserved.pyc'.
20130409 15:06:21.808 | INFO  | Imported library 'Reserved' with arguments [ ] (version &lt;unknown&gt;, dynamic type, global scope, 10 keywords)
20130409 15:06:21.809 | INFO  | Imported test library module 'Easter' from '/Users/asyrjasalo/eficode/robot/robotframework/src/robot/libraries/Easter.pyc'.
20130409 15:06:21.809 | INFO  | Imported library 'Easter' with arguments [ ] (version &lt;unknown&gt;, module type, global scope, 1 keywords)
20130409 15:06:21.810 | INFO  | Started test suite 'Dryrun &amp; More Tests'
20130409 15:06:21.810 | INFO  | Initializing namespace for test suite 'Dryrun &amp; More Tests.Dryrun'
20130409 15:06:21.810 | INFO  | Imported test library class 'BuiltIn' from '/Users/asyrjasalo/eficode/robot/robotframework/src/robot/libraries/BuiltIn.pyc'.
20130409 15:06:21.811 | INFO  | Found test library 'BuiltIn' with arguments [ ] from cache
20130409 15:06:21.811 | INFO  | Imported test library class 'DeprecatedBuiltIn' from '/Users/asyrjasalo/eficode/robot/robotframework/src/robot/libraries/DeprecatedBuiltIn.pyc'.
20130409 15:06:21.811 | INFO  | Found test library 'DeprecatedBuiltIn' with arguments [ ] from cache
20130409 15:06:21.811 | INFO  | Imported test library class 'Reserved' from '/Users/asyrjasalo/eficode/robot/robotframework/src/robot/libraries/Reserved.pyc'.
20130409 15:06:21.811 | INFO  | Found test library 'Reserved' with arguments [ ] from cache
20130409 15:06:21.812 | INFO  | Imported test library module 'Easter' from '/Users/asyrjasalo/eficode/robot/robotframework/src/robot/libraries/Easter.pyc'.
20130409 15:06:21.812 | INFO  | Found test library 'Easter' with arguments [ ] from cache
20130409 15:06:21.817 | INFO  | Imported test library class 'OperatingSystem' from '/Users/asyrjasalo/eficode/robot/robotframework/src/robot/libraries/OperatingSystem.pyc'.
20130409 15:06:21.826 | INFO  | Imported library 'OperatingSystem' with arguments [ ] (version trunk 20130226, class type, global scope, 57 keywords)
20130409 15:06:21.827 | INFO  | Imported test library class 'DeprecatedOperatingSystem' from '/Users/asyrjasalo/eficode/robot/robotframework/src/robot/libraries/DeprecatedOperatingSystem.pyc'.
20130409 15:06:21.830 | INFO  | Imported library 'DeprecatedOperatingSystem' with arguments [ ] (version &lt;unknown&gt;, class type, global scope, 24 keywords)
20130409 15:06:21.831 | INFO  | Importing variable file '/Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/vars.py' with args []
20130409 15:06:21.831 | INFO  | Imported variable file module 'vars' from '/Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/vars.py'.
20130409 15:06:21.831 | INFO  | Parsing file '/Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/resource.txt'.
20130409 15:06:21.833 | INFO  | Imported resource file '/Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/resource.txt' (4 keywords).
20130409 15:06:21.836 | ERROR | Error in file '/Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/dryrun.txt' in table 'Settings': Importing test library 'DoesNotExist' failed: ImportError: No module named DoesNotExist
Traceback (most recent call last):
  None
PYTHONPATH:
  /Users/asyrjasalo/eficode/robot/robotframework/atest/testresources/testlibs
  /Users/asyrjasalo/eficode/robot/robotframework/atest/testresources/listeners
  /Users/asyrjasalo/eficode/robot/robotframework/src/robot/libraries
  /Users/asyrjasalo/eficode/robot/robotframework/src
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/pip-1.3.1-py2.7.egg
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/distribute-0.6.36-py2.7.egg
  /usr/local/lib/python2.7/site-packages/pip-1.3.1-py2.7.egg
  /usr/local/lib/python2.7/site-packages/distribute-0.6.36-py2.7.egg
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python27.zip
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-darwin
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-mac
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-mac/lib-scriptpackages
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-tk
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-old
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-dynload
  /Library/Python/2.7/site-packages
  /usr/local/lib/wxPython-unicode-2.8.12.1/lib/python2.7
  /usr/local/lib/python2.7/site-packages
  .
  /Users/asyrjasalo/eficode/robot/robotframework/atest
20130409 15:06:21.838 | ERROR | Error in file '/Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/dryrun.txt' in table 'Settings': Variable file 'wrong_path.py' does not exist.
20130409 15:06:21.839 | ERROR | Error in file '/Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/dryrun.txt' in table 'Settings': Resource file 'NonExisting.tsv' does not exist.
20130409 15:06:21.839 | INFO  | Started test suite 'Dryrun'
20130409 15:06:21.840 | INFO  | Started test case 'Passing keywords'
20130409 15:06:21.842 | INFO  | Ended test case 'Passing keywords'
20130409 15:06:21.843 | INFO  | Started test case 'Keywords with embedded arguments'
20130409 15:06:21.845 | INFO  | Ended test case 'Keywords with embedded arguments'
20130409 15:06:21.846 | INFO  | Started test case 'Keywords that would fail'
20130409 15:06:21.848 | INFO  | Ended test case 'Keywords that would fail'
20130409 15:06:21.849 | INFO  | Started test case 'Scalar variables are not checked in keyword arguments'
20130409 15:06:21.850 | INFO  | Ended test case 'Scalar variables are not checked in keyword arguments'
20130409 15:06:21.851 | INFO  | Started test case 'List variables are not checked in keyword arguments'
20130409 15:06:21.854 | INFO  | Ended test case 'List variables are not checked in keyword arguments'
20130409 15:06:21.855 | INFO  | Started test case 'Variables are not checked in when arguments are embedded'
20130409 15:06:21.857 | INFO  | Ended test case 'Variables are not checked in when arguments are embedded'
20130409 15:06:21.858 | INFO  | Started test case 'User keyword return value'
20130409 15:06:21.859 | INFO  | Ended test case 'User keyword return value'
20130409 15:06:21.860 | INFO  | Started test case 'Test Setup And Teardown'
20130409 15:06:21.861 | INFO  | Ended test case 'Test Setup And Teardown'
20130409 15:06:21.862 | INFO  | Started test case 'Keyword Teardown'
20130409 15:06:21.864 | INFO  | Ended test case 'Keyword Teardown'
20130409 15:06:21.865 | INFO  | Started test case 'For Loops'
20130409 15:06:21.870 | INFO  | Ended test case 'For Loops'
20130409 15:06:21.871 | INFO  | Started test case 'Non-existing keyword name'
20130409 15:06:21.872 | INFO  | Ended test case 'Non-existing keyword name'
20130409 15:06:21.872 | INFO  | Started test case 'Too few arguments'
20130409 15:06:21.873 | INFO  | Ended test case 'Too few arguments'
20130409 15:06:21.874 | INFO  | Started test case 'Too few arguments for UK'
20130409 15:06:21.875 | INFO  | Ended test case 'Too few arguments for UK'
20130409 15:06:21.876 | INFO  | Started test case 'Too many arguments'
20130409 15:06:21.877 | INFO  | Ended test case 'Too many arguments'
20130409 15:06:21.878 | INFO  | Started test case 'Invalid syntax in UK'
20130409 15:06:21.879 | INFO  | Ended test case 'Invalid syntax in UK'
20130409 15:06:21.880 | INFO  | Started test case 'Multiple Failures'
20130409 15:06:21.883 | INFO  | Ended test case 'Multiple Failures'
20130409 15:06:21.884 | INFO  | Started test case 'Import Library Keyword is Called'
20130409 15:06:21.885 | INFO  | Imported test library class 'String' from '/Users/asyrjasalo/eficode/robot/robotframework/src/robot/libraries/String.pyc'.
20130409 15:06:21.889 | INFO  | Imported library 'String' with arguments [ ] (version trunk 20130226, class type, global scope, 24 keywords)
20130409 15:06:21.891 | INFO  | Imported test library class 'ParameterLibrary' from '/Users/asyrjasalo/eficode/robot/robotframework/atest/testresources/testlibs/ParameterLibrary.pyc'.
20130409 15:06:21.891 | INFO  | Adding keyword 'host' to library 'ParameterLibrary' failed: Not a method or function
20130409 15:06:21.891 | INFO  | Adding keyword 'port' to library 'ParameterLibrary' failed: Not a method or function
20130409 15:06:21.891 | INFO  | Imported library 'ParameterLibrary' with arguments [ value | 42 ] (version &lt;unknown&gt;, class type, testcase scope, 1 keywords)
20130409 15:06:21.892 | INFO  | Ended test case 'Import Library Keyword is Called'
20130409 15:06:21.893 | INFO  | Ended test suite 'Dryrun'
20130409 15:06:21.893 | INFO  | Initializing namespace for test suite 'Dryrun &amp; More Tests.More Tests'
20130409 15:06:21.894 | INFO  | Imported test library class 'BuiltIn' from '/Users/asyrjasalo/eficode/robot/robotframework/src/robot/libraries/BuiltIn.pyc'.
20130409 15:06:21.894 | INFO  | Found test library 'BuiltIn' with arguments [ ] from cache
20130409 15:06:21.894 | INFO  | Imported test library class 'DeprecatedBuiltIn' from '/Users/asyrjasalo/eficode/robot/robotframework/src/robot/libraries/DeprecatedBuiltIn.pyc'.
20130409 15:06:21.894 | INFO  | Found test library 'DeprecatedBuiltIn' with arguments [ ] from cache
20130409 15:06:21.894 | INFO  | Imported test library class 'Reserved' from '/Users/asyrjasalo/eficode/robot/robotframework/src/robot/libraries/Reserved.pyc'.
20130409 15:06:21.895 | INFO  | Found test library 'Reserved' with arguments [ ] from cache
20130409 15:06:21.895 | INFO  | Imported test library module 'Easter' from '/Users/asyrjasalo/eficode/robot/robotframework/src/robot/libraries/Easter.pyc'.
20130409 15:06:21.895 | INFO  | Found test library 'Easter' with arguments [ ] from cache
20130409 15:06:21.895 | INFO  | Found resource file '/Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/resource.txt' from cache
20130409 15:06:21.896 | INFO  | Started test suite 'More Tests'
20130409 15:06:21.897 | INFO  | Started test case 'Some other test'
20130409 15:06:21.898 | INFO  | Ended test case 'Some other test'
20130409 15:06:21.899 | INFO  | Ended test suite 'More Tests'
20130409 15:06:21.900 | INFO  | Ended test suite 'Dryrun &amp; More Tests'
20130409 15:06:21.900 | INFO  | Tests execution ended. Statistics:
18 critical tests, 8 passed, 10 failed
18 tests total, 8 passed, 10 failed
20130409 15:06:21.901 | INFO  | Output: /Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests/output.xml
</msg>
<msg timestamp="20130409 15:06:22.164" level="INFO">${file} = 20130409 15:06:21.761 | INFO  | Robot Framework trunk 20130226 (Python 2.7.4 on darwin)
20130409 15:06:21.762 | INFO  | Arguments: /Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dry...</msg>
<status status="PASS" endtime="20130409 15:06:22.164" starttime="20130409 15:06:22.163"></status>
</kw>
<msg timestamp="20130409 15:06:22.165" level="INFO">${file} = 20130409 15:06:21.761 | INFO  | Robot Framework trunk 20130226 (Python 2.7.4 on darwin)
20130409 15:06:21.762 | INFO  | Arguments: /Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dry...</msg>
<status status="PASS" endtime="20130409 15:06:22.165" starttime="20130409 15:06:22.160"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Contain" timeout="">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${file}</arg>
<arg>${exp}</arg>
</arguments>
<status status="PASS" endtime="20130409 15:06:22.166" starttime="20130409 15:06:22.165"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:22.166" starttime="20130409 15:06:22.158"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:22.166" starttime="20130409 15:06:22.157"></status>
</kw>
<doc></doc>
<tags>
<tag>jybot</tag>
<tag>pybot</tag>
<tag>regression</tag>
</tags>
<status status="PASS" endtime="20130409 15:06:22.167" critical="yes" starttime="20130409 15:06:22.144"></status>
</test>
<doc>Robot Framework acceptance tests</doc>
<metadata>
<item name="Interpreter">python</item>
<item name="Platform">darwin</item>
</metadata>
<status status="PASS" endtime="20130409 15:06:22.167" starttime="20130409 15:06:21.461"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="19">Critical Tests</stat>
<stat fail="0" pass="19">All Tests</stat>
</total>
<tag>
<stat info="critical" links="" doc="" combined="" pass="19" fail="0">regression</stat>
<stat info="combined" links="" doc="" combined="jybot NOT pybot" pass="0" fail="0">jybot NOT pybot</stat>
<stat info="combined" links="" doc="" combined="pybot NOT jybot" pass="0" fail="0">pybot NOT jybot</stat>
</tag>
<suite>
<stat fail="0" pass="19" id="s1" name="Dryrun">Dryrun</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
