<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20130409 15:06:56.309" generator="Robot trunk 20130226 (Python 2.7.4 on darwin)">
<suite source="/Users/asyrjasalo/eficode/robot/robotframework/atest/robot/cli/dryrun" id="s1" name="Dryrun">
<suite source="/Users/asyrjasalo/eficode/robot/robotframework/atest/robot/cli/dryrun/dryrun.txt" id="s1-s1" name="Dryrun">
<kw type="setup" name="atest_resource.Run Tests" timeout="">
<doc></doc>
<arguments>
<arg>--runmode dryrun</arg>
<arg>cli/dryrun/dryrun.txt</arg>
<arg>cli/dryrun/more_tests.txt</arg>
</arguments>
<kw type="kw" name="atest_resource.Run Tests Helper" timeout="">
<doc></doc>
<arguments>
<arg>${options}</arg>
<arg>@{data list}</arg>
</arguments>
<kw type="kw" name="${data string} = atest_resource.Set Variables And Get Datasources" timeout="">
<doc></doc>
<arguments>
<arg>@{data list}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Suite Variable" timeout="">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>$SUITE</arg>
<arg>${NONE}</arg>
</arguments>
<msg timestamp="20130409 15:06:56.424" level="INFO">${SUITE} = None</msg>
<status status="PASS" endtime="20130409 15:06:56.424" starttime="20130409 15:06:56.423"></status>
</kw>
<kw type="kw" name="${name} = TestHelper.Get Output Name" timeout="">
<doc></doc>
<arguments>
<arg>@{data list}</arg>
</arguments>
<msg timestamp="20130409 15:06:56.425" level="INFO">${name} = dryrun_more_tests</msg>
<status status="PASS" endtime="20130409 15:06:56.425" starttime="20130409 15:06:56.424"></status>
</kw>
<kw type="kw" name="atest_resource.Set Variables" timeout="">
<doc></doc>
<arguments>
<arg>${name}</arg>
</arguments>
<kw type="kw" name="${OUTDIR} = OperatingSystem.Join Path" timeout="">
<doc>Joins the given path part(s) to the given base path.</doc>
<arguments>
<arg>${OUTPUTDIR}</arg>
<arg>output</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20130409 15:06:56.427" level="INFO">${OUTDIR} = /Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests</msg>
<status status="PASS" endtime="20130409 15:06:56.426" starttime="20130409 15:06:56.426"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Global Variable" timeout="">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>$OUTDIR</arg>
<arg>${OUTDIR.encode('ascii', 'ignore').replace('?', '_') .replace('*', '_')}</arg>
</arguments>
<msg timestamp="20130409 15:06:56.428" level="INFO">${OUTDIR} = /Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests</msg>
<status status="PASS" endtime="20130409 15:06:56.428" starttime="20130409 15:06:56.427"></status>
</kw>
<kw type="kw" name="OperatingSystem.Create Directory" timeout="">
<doc>Creates the specified directory.</doc>
<arguments>
<arg>${OUTDIR}</arg>
</arguments>
<msg timestamp="20130409 15:06:56.429" html="yes" level="INFO">Created directory '&lt;a href="file:///Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests"&gt;/Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests&lt;/a&gt;'</msg>
<status status="PASS" endtime="20130409 15:06:56.429" starttime="20130409 15:06:56.428"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Suite Variable" timeout="">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>$OUTFILE</arg>
<arg>${OUTDIR}${/}output.xml</arg>
</arguments>
<msg timestamp="20130409 15:06:56.430" level="INFO">${OUTFILE} = /Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests/output.xml</msg>
<status status="PASS" endtime="20130409 15:06:56.430" starttime="20130409 15:06:56.429"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Suite Variable" timeout="">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>$STDOUT_FILE</arg>
<arg>${OUTDIR}${/}stdout.txt</arg>
</arguments>
<msg timestamp="20130409 15:06:56.431" level="INFO">${STDOUT_FILE} = /Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests/stdout.txt</msg>
<status status="PASS" endtime="20130409 15:06:56.431" starttime="20130409 15:06:56.430"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Suite Variable" timeout="">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>$STDERR_FILE</arg>
<arg>${OUTDIR}${/}stderr.txt</arg>
</arguments>
<msg timestamp="20130409 15:06:56.431" level="INFO">${STDERR_FILE} = /Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests/stderr.txt</msg>
<status status="PASS" endtime="20130409 15:06:56.432" starttime="20130409 15:06:56.431"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Suite Variable" timeout="">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>$SYSLOG_FILE</arg>
<arg>${OUTDIR}${/}syslog.txt</arg>
</arguments>
<msg timestamp="20130409 15:06:56.432" level="INFO">${SYSLOG_FILE} = /Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests/syslog.txt</msg>
<status status="PASS" endtime="20130409 15:06:56.432" starttime="20130409 15:06:56.432"></status>
</kw>
<kw type="kw" name="OperatingSystem.Set Environment Variable" timeout="">
<doc>Sets an environment variable to a specified value.</doc>
<arguments>
<arg>ROBOT_SYSLOG_FILE</arg>
<arg>${SYSLOG_FILE}</arg>
</arguments>
<msg timestamp="20130409 15:06:56.433" level="INFO">Environment variable 'ROBOT_SYSLOG_FILE' set to value '/Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests/syslog.txt'</msg>
<status status="PASS" endtime="20130409 15:06:56.433" starttime="20130409 15:06:56.433"></status>
</kw>
<kw type="kw" name="atest_resource.Set Runners" timeout="">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${robot} = OperatingSystem.Join Path" timeout="">
<doc>Joins the given path part(s) to the given base path.</doc>
<arguments>
<arg>${ROBOTPATH}</arg>
<arg>run.py</arg>
</arguments>
<msg timestamp="20130409 15:06:56.434" level="INFO">${robot} = /Users/asyrjasalo/eficode/robot/robotframework/src/robot/run.py</msg>
<status status="PASS" endtime="20130409 15:06:56.434" starttime="20130409 15:06:56.434"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Suite Variable" timeout="">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>$ROBOT</arg>
<arg>${INTERPRETER} ${robot}</arg>
</arguments>
<msg timestamp="20130409 15:06:56.435" level="INFO">${ROBOT} = python /Users/asyrjasalo/eficode/robot/robotframework/src/robot/run.py</msg>
<status status="PASS" endtime="20130409 15:06:56.435" starttime="20130409 15:06:56.435"></status>
</kw>
<kw type="kw" name="${rebot} = OperatingSystem.Join Path" timeout="">
<doc>Joins the given path part(s) to the given base path.</doc>
<arguments>
<arg>${ROBOTPATH}</arg>
<arg>rebot.py</arg>
</arguments>
<msg timestamp="20130409 15:06:56.436" level="INFO">${rebot} = /Users/asyrjasalo/eficode/robot/robotframework/src/robot/rebot.py</msg>
<status status="PASS" endtime="20130409 15:06:56.436" starttime="20130409 15:06:56.435"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Suite Variable" timeout="">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>$REBOT</arg>
<arg>${INTERPRETER} ${rebot}</arg>
</arguments>
<msg timestamp="20130409 15:06:56.436" level="INFO">${REBOT} = python /Users/asyrjasalo/eficode/robot/robotframework/src/robot/rebot.py</msg>
<status status="PASS" endtime="20130409 15:06:56.436" starttime="20130409 15:06:56.436"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:56.436" starttime="20130409 15:06:56.433"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:56.437" starttime="20130409 15:06:56.425"></status>
</kw>
<kw type="kw" name="@{data list} = OperatingSystem.Join Paths" timeout="">
<doc>Joins given paths with base and returns resulted paths.</doc>
<arguments>
<arg>${DATADIR}</arg>
<arg>@{data list}</arg>
</arguments>
<msg timestamp="20130409 15:06:56.437" level="INFO">@{data list} = [ /Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/dryrun.txt | /Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/more_tests.txt ]</msg>
<status status="PASS" endtime="20130409 15:06:56.437" starttime="20130409 15:06:56.437"></status>
</kw>
<kw type="kw" name="${data string} = BuiltIn.Catenate" timeout="">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>@{data list}</arg>
</arguments>
<msg timestamp="20130409 15:06:56.438" level="INFO">${data string} = /Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/dryrun.txt /Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/more_tests.txt</msg>
<status status="PASS" endtime="20130409 15:06:56.438" starttime="20130409 15:06:56.437"></status>
</kw>
<msg timestamp="20130409 15:06:56.438" level="INFO">${data string} = /Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/dryrun.txt /Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/more_tests.txt</msg>
<status status="PASS" endtime="20130409 15:06:56.438" starttime="20130409 15:06:56.422"></status>
</kw>
<kw type="kw" name="${options} = BuiltIn.Catenate" timeout="">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>--MonitorMarkers OFF</arg>
<arg>${user options}</arg>
<arg>--variable interpreter:${INTERPRETER}</arg>
<arg>--pythonpath ${LIBPATH1}</arg>
<arg>--pythonpath ${LIBPATH2}</arg>
</arguments>
<msg timestamp="20130409 15:06:56.439" level="INFO">${options} = --MonitorMarkers OFF --runmode dryrun --variable interpreter:python --pythonpath /Users/asyrjasalo/eficode/robot/robotframework/atest/resources/../testresources/testlibs --pythonpath /Users/asyrjasalo...</msg>
<status status="PASS" endtime="20130409 15:06:56.439" starttime="20130409 15:06:56.438"></status>
</kw>
<kw type="kw" name="atest_resource.Run Helper" timeout="">
<doc></doc>
<arguments>
<arg>${ROBOT}</arg>
<arg>${options}</arg>
<arg>${data string}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Remove Files" timeout="">
<doc>Uses `Remove File` to remove multiple files one-by-one.</doc>
<arguments>
<arg>${OUTFILE}</arg>
<arg>${OUTDIR}/*.xml</arg>
<arg>${OUTDIR}/*.html</arg>
</arguments>
<msg timestamp="20130409 15:06:56.441" html="yes" level="INFO">File '&lt;a href="file:///Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests/output.xml"&gt;/Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests/output.xml&lt;/a&gt;' does not exist</msg>
<msg timestamp="20130409 15:06:56.441" html="yes" level="INFO">File '&lt;a href="file:///Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests/*.xml"&gt;/Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests/*.xml&lt;/a&gt;' does not exist</msg>
<msg timestamp="20130409 15:06:56.442" html="yes" level="INFO">File '&lt;a href="file:///Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests/*.html"&gt;/Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests/*.html&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20130409 15:06:56.442" starttime="20130409 15:06:56.440"></status>
</kw>
<kw type="kw" name="${cmd} = BuiltIn.Catenate" timeout="">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>${runner}</arg>
<arg>--monitorcolors OFF</arg>
<arg>--outputdir ${OUTDIR}</arg>
<arg>--output ${OUTFILE}</arg>
<arg>--report NONE</arg>
<arg>--log NONE</arg>
<arg>${options}</arg>
<arg>${data string}</arg>
<arg>1&gt;${STDOUTFILE}</arg>
<arg>2&gt;${STDERRFILE}</arg>
</arguments>
<msg timestamp="20130409 15:06:56.443" level="INFO">${cmd} = python /Users/asyrjasalo/eficode/robot/robotframework/src/robot/run.py --monitorcolors OFF --outputdir /Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests --ou...</msg>
<status status="PASS" endtime="20130409 15:06:56.443" starttime="20130409 15:06:56.442"></status>
</kw>
<kw type="kw" name="${rc} = OperatingSystem.Run And Return Rc" timeout="">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>${cmd}</arg>
</arguments>
<msg timestamp="20130409 15:06:56.444" level="INFO">Running command 'python /Users/asyrjasalo/eficode/robot/robotframework/src/robot/run.py --monitorcolors OFF --outputdir /Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests --output /Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests/output.xml --report NONE --log NONE --MonitorMarkers OFF --runmode dryrun --variable interpreter:python --pythonpath /Users/asyrjasalo/eficode/robot/robotframework/atest/resources/../testresources/testlibs --pythonpath /Users/asyrjasalo/eficode/robot/robotframework/atest/resources/../testresources/listeners /Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/dryrun.txt /Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/more_tests.txt 1&gt;/Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests/stdout.txt 2&gt;/Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests/stderr.txt'</msg>
<msg timestamp="20130409 15:06:56.775" level="INFO">${rc} = 10</msg>
<status status="PASS" endtime="20130409 15:06:56.775" starttime="20130409 15:06:56.444"></status>
</kw>
<kw type="kw" name="BuiltIn.Log" timeout="">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>&lt;a href="file://${OUTDIR}"&gt;${OUTDIR}&lt;/a&gt;</arg>
<arg>HTML</arg>
</arguments>
<msg timestamp="20130409 15:06:56.776" html="yes" level="INFO">&lt;a href="file:///Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests"&gt;/Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests&lt;/a&gt;</msg>
<status status="PASS" endtime="20130409 15:06:56.776" starttime="20130409 15:06:56.776"></status>
</kw>
<kw type="kw" name="BuiltIn.Log" timeout="">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>&lt;a href="file://${OUTFILE}"&gt;${OUTFILE}&lt;/a&gt;</arg>
<arg>HTML</arg>
</arguments>
<msg timestamp="20130409 15:06:56.777" html="yes" level="INFO">&lt;a href="file:///Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests/output.xml"&gt;/Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests/output.xml&lt;/a&gt;</msg>
<status status="PASS" endtime="20130409 15:06:56.777" starttime="20130409 15:06:56.776"></status>
</kw>
<kw type="kw" name="BuiltIn.Log" timeout="">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>&lt;a href="file://${STDOUTFILE}"&gt;${STDOUTFILE}&lt;/a&gt;</arg>
<arg>HTML</arg>
</arguments>
<msg timestamp="20130409 15:06:56.777" html="yes" level="INFO">&lt;a href="file:///Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests/stdout.txt"&gt;/Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests/stdout.txt&lt;/a&gt;</msg>
<status status="PASS" endtime="20130409 15:06:56.778" starttime="20130409 15:06:56.777"></status>
</kw>
<kw type="kw" name="BuiltIn.Log" timeout="">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>&lt;a href="file://${STDERRFILE}"&gt;${STDERRFILE}&lt;/a&gt;</arg>
<arg>HTML</arg>
</arguments>
<msg timestamp="20130409 15:06:56.778" html="yes" level="INFO">&lt;a href="file:///Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests/stderr.txt"&gt;/Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests/stderr.txt&lt;/a&gt;</msg>
<status status="PASS" endtime="20130409 15:06:56.778" starttime="20130409 15:06:56.778"></status>
</kw>
<kw type="kw" name="BuiltIn.Log" timeout="">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>&lt;a href="file://${SYSLOGFILE}"&gt;${SYSLOGFILE}&lt;/a&gt;</arg>
<arg>HTML</arg>
</arguments>
<msg timestamp="20130409 15:06:56.779" html="yes" level="INFO">&lt;a href="file:///Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests/syslog.txt"&gt;/Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests/syslog.txt&lt;/a&gt;</msg>
<status status="PASS" endtime="20130409 15:06:56.779" starttime="20130409 15:06:56.779"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:56.779" starttime="20130409 15:06:56.439"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:56.779" starttime="20130409 15:06:56.421"></status>
</kw>
<kw type="kw" name="TestCheckerLibrary.Process Output" timeout="">
<doc></doc>
<arguments>
<arg>${OUTFILE}</arg>
</arguments>
<msg timestamp="20130409 15:06:56.791" level="INFO">${SUITE} = Dryrun &amp; More Tests</msg>
<msg timestamp="20130409 15:06:56.792" level="INFO">${STATISTICS} = &lt;robot.model.statistics.Statistics object at 0x105118dd0&gt;</msg>
<msg timestamp="20130409 15:06:56.792" level="INFO">${ERRORS} = &lt;robot.result.executionerrors.ExecutionErrors object at 0x105118d90&gt;</msg>
<msg timestamp="20130409 15:06:56.792" level="INFO">Processing output '/Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests/output.xml'</msg>
<status status="PASS" endtime="20130409 15:06:56.792" starttime="20130409 15:06:56.780"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:56.792" starttime="20130409 15:06:56.420"></status>
</kw>
<test id="s1-s1-t1" timeout="" name="Passing keywords">
<kw type="kw" name="${tc} = atest_resource.Check Test Case" timeout="">
<doc></doc>
<arguments>
<arg>${TESTNAME}</arg>
</arguments>
<kw type="kw" name="${test} = TestCheckerLibrary.Get Test From Suite" timeout="">
<doc></doc>
<arguments>
<arg>${SUITE}</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20130409 15:06:56.796" level="INFO">${test} = Passing keywords</msg>
<status status="PASS" endtime="20130409 15:06:56.795" starttime="20130409 15:06:56.795"></status>
</kw>
<kw type="kw" name="TestCheckerLibrary.Check Test Status" timeout="">
<doc>Verifies that test's status and message are as expected.</doc>
<arguments>
<arg>${test}</arg>
<arg>${status}</arg>
<arg>${message}</arg>
</arguments>
<status status="PASS" endtime="20130409 15:06:56.796" starttime="20130409 15:06:56.796"></status>
</kw>
<msg timestamp="20130409 15:06:56.796" level="INFO">${tc} = Passing keywords</msg>
<status status="PASS" endtime="20130409 15:06:56.796" starttime="20130409 15:06:56.794"></status>
</kw>
<kw type="kw" name="Should have correct number of keywords" timeout="">
<doc></doc>
<arguments>
<arg>${tc}</arg>
<arg>3</arg>
</arguments>
<kw type="kw" name="BuiltIn.Log" timeout="">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${test or uk.kws}</arg>
</arguments>
<msg timestamp="20130409 15:06:56.798" level="INFO">[&lt;TestCheckerLibrary.NoSlotsKeyword object at 0x1050dbc30&gt;, &lt;TestCheckerLibrary.NoSlotsKeyword object at 0x1050dbd70&gt;, &lt;TestCheckerLibrary.NoSlotsKeyword object at 0x1050dbe10&gt;]</msg>
<status status="PASS" endtime="20130409 15:06:56.798" starttime="20130409 15:06:56.798"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal As Integers" timeout="">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${test or uk.kw_count}</arg>
<arg>${exp number of kws}</arg>
</arguments>
<msg timestamp="20130409 15:06:56.799" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20130409 15:06:56.799" starttime="20130409 15:06:56.799"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:56.799" starttime="20130409 15:06:56.797"></status>
</kw>
<kw type="kw" name="Name and status should be" timeout="">
<doc></doc>
<arguments>
<arg>${tc.kws[0]}</arg>
<arg>BuiltIn.Log</arg>
<arg>NOT_RUN</arg>
</arguments>
<kw type="kw" name="BuiltIn.Should Be Equal" timeout="">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${kw.name}</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20130409 15:06:56.801" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20130409 15:06:56.801" starttime="20130409 15:06:56.801"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal" timeout="">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${kw.status}</arg>
<arg>${status}</arg>
</arguments>
<msg timestamp="20130409 15:06:56.802" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20130409 15:06:56.802" starttime="20130409 15:06:56.801"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:56.802" starttime="20130409 15:06:56.799"></status>
</kw>
<kw type="kw" name="Name and status should be" timeout="">
<doc></doc>
<arguments>
<arg>${tc.kws[1]}</arg>
<arg>\${contents} = OperatingSystem.List Directory</arg>
<arg>NOT_RUN</arg>
</arguments>
<kw type="kw" name="BuiltIn.Should Be Equal" timeout="">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${kw.name}</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20130409 15:06:56.804" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20130409 15:06:56.804" starttime="20130409 15:06:56.803"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal" timeout="">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${kw.status}</arg>
<arg>${status}</arg>
</arguments>
<msg timestamp="20130409 15:06:56.805" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20130409 15:06:56.805" starttime="20130409 15:06:56.804"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:56.805" starttime="20130409 15:06:56.802"></status>
</kw>
<kw type="kw" name="Name and status should be" timeout="">
<doc></doc>
<arguments>
<arg>${tc.kws[2]}</arg>
<arg>resource.Simple UK</arg>
<arg>PASS</arg>
</arguments>
<kw type="kw" name="BuiltIn.Should Be Equal" timeout="">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${kw.name}</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20130409 15:06:56.807" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20130409 15:06:56.807" starttime="20130409 15:06:56.806"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal" timeout="">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${kw.status}</arg>
<arg>${status}</arg>
</arguments>
<msg timestamp="20130409 15:06:56.807" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20130409 15:06:56.807" starttime="20130409 15:06:56.807"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:56.808" starttime="20130409 15:06:56.805"></status>
</kw>
<kw type="kw" name="Name and status should be" timeout="">
<doc></doc>
<arguments>
<arg>${tc.kws[2].kws[0]}</arg>
<arg>BuiltIn.Log</arg>
<arg>NOT_RUN</arg>
</arguments>
<kw type="kw" name="BuiltIn.Should Be Equal" timeout="">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${kw.name}</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20130409 15:06:56.809" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20130409 15:06:56.809" starttime="20130409 15:06:56.809"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal" timeout="">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${kw.status}</arg>
<arg>${status}</arg>
</arguments>
<msg timestamp="20130409 15:06:56.810" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20130409 15:06:56.810" starttime="20130409 15:06:56.810"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:56.810" starttime="20130409 15:06:56.808"></status>
</kw>
<doc></doc>
<tags>
<tag>jybot</tag>
<tag>pybot</tag>
<tag>regression</tag>
</tags>
<status status="PASS" endtime="20130409 15:06:56.811" critical="yes" starttime="20130409 15:06:56.793"></status>
</test>
<test id="s1-s1-t2" timeout="" name="Keywords with embedded arguments">
<kw type="kw" name="${tc} = atest_resource.Check Test Case" timeout="">
<doc></doc>
<arguments>
<arg>${TESTNAME}</arg>
</arguments>
<kw type="kw" name="${test} = TestCheckerLibrary.Get Test From Suite" timeout="">
<doc></doc>
<arguments>
<arg>${SUITE}</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20130409 15:06:56.814" level="INFO">${test} = Keywords with embedded arguments</msg>
<status status="PASS" endtime="20130409 15:06:56.814" starttime="20130409 15:06:56.813"></status>
</kw>
<kw type="kw" name="TestCheckerLibrary.Check Test Status" timeout="">
<doc>Verifies that test's status and message are as expected.</doc>
<arguments>
<arg>${test}</arg>
<arg>${status}</arg>
<arg>${message}</arg>
</arguments>
<status status="PASS" endtime="20130409 15:06:56.815" starttime="20130409 15:06:56.814"></status>
</kw>
<msg timestamp="20130409 15:06:56.815" level="INFO">${tc} = Keywords with embedded arguments</msg>
<status status="PASS" endtime="20130409 15:06:56.815" starttime="20130409 15:06:56.812"></status>
</kw>
<kw type="kw" name="Should have correct number of keywords" timeout="">
<doc></doc>
<arguments>
<arg>${tc}</arg>
<arg>2</arg>
</arguments>
<kw type="kw" name="BuiltIn.Log" timeout="">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${test or uk.kws}</arg>
</arguments>
<msg timestamp="20130409 15:06:56.816" level="INFO">[&lt;TestCheckerLibrary.NoSlotsKeyword object at 0x1050dbf50&gt;, &lt;TestCheckerLibrary.NoSlotsKeyword object at 0x1051330f0&gt;]</msg>
<status status="PASS" endtime="20130409 15:06:56.816" starttime="20130409 15:06:56.816"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal As Integers" timeout="">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${test or uk.kw_count}</arg>
<arg>${exp number of kws}</arg>
</arguments>
<msg timestamp="20130409 15:06:56.817" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20130409 15:06:56.817" starttime="20130409 15:06:56.817"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:56.817" starttime="20130409 15:06:56.815"></status>
</kw>
<kw type="kw" name="Name and status should be" timeout="">
<doc></doc>
<arguments>
<arg>${tc.kws[0]}</arg>
<arg>Embedded arguments here</arg>
<arg>PASS</arg>
</arguments>
<kw type="kw" name="BuiltIn.Should Be Equal" timeout="">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${kw.name}</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20130409 15:06:56.819" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20130409 15:06:56.819" starttime="20130409 15:06:56.819"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal" timeout="">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${kw.status}</arg>
<arg>${status}</arg>
</arguments>
<msg timestamp="20130409 15:06:56.820" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20130409 15:06:56.820" starttime="20130409 15:06:56.819"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:56.820" starttime="20130409 15:06:56.817"></status>
</kw>
<kw type="kw" name="Name and status should be" timeout="">
<doc></doc>
<arguments>
<arg>${tc.kws[0].kws[0]}</arg>
<arg>BuiltIn.No Operation</arg>
<arg>NOT_RUN</arg>
</arguments>
<kw type="kw" name="BuiltIn.Should Be Equal" timeout="">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${kw.name}</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20130409 15:06:56.822" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20130409 15:06:56.822" starttime="20130409 15:06:56.821"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal" timeout="">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${kw.status}</arg>
<arg>${status}</arg>
</arguments>
<msg timestamp="20130409 15:06:56.823" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20130409 15:06:56.823" starttime="20130409 15:06:56.822"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:56.823" starttime="20130409 15:06:56.820"></status>
</kw>
<kw type="kw" name="Name and status should be" timeout="">
<doc></doc>
<arguments>
<arg>${tc.kws[1]}</arg>
<arg>Embedded args rock here</arg>
<arg>PASS</arg>
</arguments>
<kw type="kw" name="BuiltIn.Should Be Equal" timeout="">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${kw.name}</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20130409 15:06:56.825" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20130409 15:06:56.825" starttime="20130409 15:06:56.824"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal" timeout="">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${kw.status}</arg>
<arg>${status}</arg>
</arguments>
<msg timestamp="20130409 15:06:56.825" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20130409 15:06:56.825" starttime="20130409 15:06:56.825"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:56.826" starttime="20130409 15:06:56.823"></status>
</kw>
<kw type="kw" name="Name and status should be" timeout="">
<doc></doc>
<arguments>
<arg>${tc.kws[1].kws[0]}</arg>
<arg>BuiltIn.No Operation</arg>
<arg>NOT_RUN</arg>
</arguments>
<kw type="kw" name="BuiltIn.Should Be Equal" timeout="">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${kw.name}</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20130409 15:06:56.828" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20130409 15:06:56.828" starttime="20130409 15:06:56.827"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal" timeout="">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${kw.status}</arg>
<arg>${status}</arg>
</arguments>
<msg timestamp="20130409 15:06:56.829" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20130409 15:06:56.829" starttime="20130409 15:06:56.828"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:56.829" starttime="20130409 15:06:56.826"></status>
</kw>
<doc></doc>
<tags>
<tag>jybot</tag>
<tag>pybot</tag>
<tag>regression</tag>
</tags>
<status status="PASS" endtime="20130409 15:06:56.829" critical="yes" starttime="20130409 15:06:56.811"></status>
</test>
<test id="s1-s1-t3" timeout="" name="Keywords that would fail">
<kw type="kw" name="${tc} = atest_resource.Check Test Case" timeout="">
<doc></doc>
<arguments>
<arg>${TESTNAME}</arg>
</arguments>
<kw type="kw" name="${test} = TestCheckerLibrary.Get Test From Suite" timeout="">
<doc></doc>
<arguments>
<arg>${SUITE}</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20130409 15:06:56.835" level="INFO">${test} = Keywords that would fail</msg>
<status status="PASS" endtime="20130409 15:06:56.835" starttime="20130409 15:06:56.834"></status>
</kw>
<kw type="kw" name="TestCheckerLibrary.Check Test Status" timeout="">
<doc>Verifies that test's status and message are as expected.</doc>
<arguments>
<arg>${test}</arg>
<arg>${status}</arg>
<arg>${message}</arg>
</arguments>
<status status="PASS" endtime="20130409 15:06:56.836" starttime="20130409 15:06:56.836"></status>
</kw>
<msg timestamp="20130409 15:06:56.837" level="INFO">${tc} = Keywords that would fail</msg>
<status status="PASS" endtime="20130409 15:06:56.837" starttime="20130409 15:06:56.832"></status>
</kw>
<kw type="kw" name="Should have correct number of keywords" timeout="">
<doc></doc>
<arguments>
<arg>${tc}</arg>
<arg>3</arg>
</arguments>
<kw type="kw" name="BuiltIn.Log" timeout="">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${test or uk.kws}</arg>
</arguments>
<msg timestamp="20130409 15:06:56.840" level="INFO">[&lt;TestCheckerLibrary.NoSlotsKeyword object at 0x105133230&gt;, &lt;TestCheckerLibrary.NoSlotsKeyword object at 0x1051332d0&gt;, &lt;TestCheckerLibrary.NoSlotsKeyword object at 0x1051334b0&gt;]</msg>
<status status="PASS" endtime="20130409 15:06:56.840" starttime="20130409 15:06:56.839"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal As Integers" timeout="">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${test or uk.kw_count}</arg>
<arg>${exp number of kws}</arg>
</arguments>
<msg timestamp="20130409 15:06:56.842" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20130409 15:06:56.842" starttime="20130409 15:06:56.841"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:56.842" starttime="20130409 15:06:56.837"></status>
</kw>
<kw type="kw" name="Name and status should be" timeout="">
<doc></doc>
<arguments>
<arg>${tc.kws[0]}</arg>
<arg>BuiltIn.Fail</arg>
<arg>NOT_RUN</arg>
</arguments>
<kw type="kw" name="BuiltIn.Should Be Equal" timeout="">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${kw.name}</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20130409 15:06:56.845" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20130409 15:06:56.845" starttime="20130409 15:06:56.844"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal" timeout="">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${kw.status}</arg>
<arg>${status}</arg>
</arguments>
<msg timestamp="20130409 15:06:56.846" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20130409 15:06:56.846" starttime="20130409 15:06:56.845"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:56.847" starttime="20130409 15:06:56.842"></status>
</kw>
<kw type="kw" name="Name and status should be" timeout="">
<doc></doc>
<arguments>
<arg>${tc.kws[1]}</arg>
<arg>resource.Fail In UK</arg>
<arg>PASS</arg>
</arguments>
<kw type="kw" name="BuiltIn.Should Be Equal" timeout="">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${kw.name}</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20130409 15:06:56.849" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20130409 15:06:56.849" starttime="20130409 15:06:56.848"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal" timeout="">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${kw.status}</arg>
<arg>${status}</arg>
</arguments>
<msg timestamp="20130409 15:06:56.850" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20130409 15:06:56.850" starttime="20130409 15:06:56.849"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:56.850" starttime="20130409 15:06:56.847"></status>
</kw>
<kw type="kw" name="Should have correct number of keywords" timeout="">
<doc></doc>
<arguments>
<arg>${tc.kws[1]}</arg>
<arg>2</arg>
</arguments>
<kw type="kw" name="BuiltIn.Log" timeout="">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${test or uk.kws}</arg>
</arguments>
<msg timestamp="20130409 15:06:56.852" level="INFO">[BuiltIn.Fail, BuiltIn.Fail]</msg>
<status status="PASS" endtime="20130409 15:06:56.852" starttime="20130409 15:06:56.852"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal As Integers" timeout="">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${test or uk.kw_count}</arg>
<arg>${exp number of kws}</arg>
</arguments>
<msg timestamp="20130409 15:06:56.853" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20130409 15:06:56.853" starttime="20130409 15:06:56.853"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:56.853" starttime="20130409 15:06:56.850"></status>
</kw>
<kw type="kw" name="Name and status should be" timeout="">
<doc></doc>
<arguments>
<arg>${tc.kws[1].kws[0]}</arg>
<arg>BuiltIn.Fail</arg>
<arg>NOT_RUN</arg>
</arguments>
<kw type="kw" name="BuiltIn.Should Be Equal" timeout="">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${kw.name}</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20130409 15:06:56.855" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20130409 15:06:56.855" starttime="20130409 15:06:56.855"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal" timeout="">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${kw.status}</arg>
<arg>${status}</arg>
</arguments>
<msg timestamp="20130409 15:06:56.856" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20130409 15:06:56.856" starttime="20130409 15:06:56.856"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:56.856" starttime="20130409 15:06:56.854"></status>
</kw>
<kw type="kw" name="Name and status should be" timeout="">
<doc></doc>
<arguments>
<arg>${tc.kws[1].kws[1]}</arg>
<arg>BuiltIn.Fail</arg>
<arg>NOT_RUN</arg>
</arguments>
<kw type="kw" name="BuiltIn.Should Be Equal" timeout="">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${kw.name}</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20130409 15:06:56.858" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20130409 15:06:56.858" starttime="20130409 15:06:56.858"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal" timeout="">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${kw.status}</arg>
<arg>${status}</arg>
</arguments>
<msg timestamp="20130409 15:06:56.859" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20130409 15:06:56.859" starttime="20130409 15:06:56.858"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:56.859" starttime="20130409 15:06:56.856"></status>
</kw>
<doc></doc>
<tags>
<tag>jybot</tag>
<tag>pybot</tag>
<tag>regression</tag>
</tags>
<status status="PASS" endtime="20130409 15:06:56.859" critical="yes" starttime="20130409 15:06:56.830"></status>
</test>
<test id="s1-s1-t4" timeout="" name="Scalar variables are not checked in keyword arguments">
<kw type="kw" name="${tc} = atest_resource.Check Test Case" timeout="">
<doc></doc>
<arguments>
<arg>${TESTNAME}</arg>
</arguments>
<kw type="kw" name="${test} = TestCheckerLibrary.Get Test From Suite" timeout="">
<doc></doc>
<arguments>
<arg>${SUITE}</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20130409 15:06:56.863" level="INFO">${test} = Scalar variables are not checked in keyword arguments</msg>
<status status="PASS" endtime="20130409 15:06:56.863" starttime="20130409 15:06:56.862"></status>
</kw>
<kw type="kw" name="TestCheckerLibrary.Check Test Status" timeout="">
<doc>Verifies that test's status and message are as expected.</doc>
<arguments>
<arg>${test}</arg>
<arg>${status}</arg>
<arg>${message}</arg>
</arguments>
<status status="PASS" endtime="20130409 15:06:56.864" starttime="20130409 15:06:56.863"></status>
</kw>
<msg timestamp="20130409 15:06:56.864" level="INFO">${tc} = Scalar variables are not checked in keyword arguments</msg>
<status status="PASS" endtime="20130409 15:06:56.864" starttime="20130409 15:06:56.861"></status>
</kw>
<kw type="kw" name="Name and status should be" timeout="">
<doc></doc>
<arguments>
<arg>${tc.kws[0]}</arg>
<arg>BuiltIn.Log</arg>
<arg>NOT_RUN</arg>
</arguments>
<kw type="kw" name="BuiltIn.Should Be Equal" timeout="">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${kw.name}</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20130409 15:06:56.866" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20130409 15:06:56.866" starttime="20130409 15:06:56.866"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal" timeout="">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${kw.status}</arg>
<arg>${status}</arg>
</arguments>
<msg timestamp="20130409 15:06:56.867" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20130409 15:06:56.867" starttime="20130409 15:06:56.866"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:56.867" starttime="20130409 15:06:56.864"></status>
</kw>
<kw type="kw" name="Name and status should be" timeout="">
<doc></doc>
<arguments>
<arg>${tc.kws[1]}</arg>
<arg>BuiltIn.Log</arg>
<arg>NOT_RUN</arg>
</arguments>
<kw type="kw" name="BuiltIn.Should Be Equal" timeout="">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${kw.name}</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20130409 15:06:56.869" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20130409 15:06:56.869" starttime="20130409 15:06:56.869"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal" timeout="">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${kw.status}</arg>
<arg>${status}</arg>
</arguments>
<msg timestamp="20130409 15:06:56.870" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20130409 15:06:56.870" starttime="20130409 15:06:56.870"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:56.870" starttime="20130409 15:06:56.867"></status>
</kw>
<doc>Variables are too often set somehow dynamically that we cannot expect them to always exist.</doc>
<tags>
<tag>jybot</tag>
<tag>pybot</tag>
<tag>regression</tag>
</tags>
<status status="PASS" endtime="20130409 15:06:56.870" critical="yes" starttime="20130409 15:06:56.860"></status>
</test>
<test id="s1-s1-t5" timeout="" name="List variables are not checked in keyword arguments">
<kw type="kw" name="atest_resource.Check Test Case" timeout="">
<doc></doc>
<arguments>
<arg>${TESTNAME}</arg>
</arguments>
<kw type="kw" name="${test} = TestCheckerLibrary.Get Test From Suite" timeout="">
<doc></doc>
<arguments>
<arg>${SUITE}</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20130409 15:06:56.874" level="INFO">${test} = List variables are not checked in keyword arguments</msg>
<status status="PASS" endtime="20130409 15:06:56.874" starttime="20130409 15:06:56.873"></status>
</kw>
<kw type="kw" name="TestCheckerLibrary.Check Test Status" timeout="">
<doc>Verifies that test's status and message are as expected.</doc>
<arguments>
<arg>${test}</arg>
<arg>${status}</arg>
<arg>${message}</arg>
</arguments>
<status status="PASS" endtime="20130409 15:06:56.874" starttime="20130409 15:06:56.874"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:56.875" starttime="20130409 15:06:56.872"></status>
</kw>
<doc>See the doc of the previous test</doc>
<tags>
<tag>jybot</tag>
<tag>pybot</tag>
<tag>regression</tag>
</tags>
<status status="PASS" endtime="20130409 15:06:56.875" critical="yes" starttime="20130409 15:06:56.871"></status>
</test>
<test id="s1-s1-t6" timeout="" name="Variables are not checked in when arguments are embedded">
<kw type="kw" name="${tc} = atest_resource.Check Test Case" timeout="">
<doc></doc>
<arguments>
<arg>${TESTNAME}</arg>
</arguments>
<kw type="kw" name="${test} = TestCheckerLibrary.Get Test From Suite" timeout="">
<doc></doc>
<arguments>
<arg>${SUITE}</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20130409 15:06:56.878" level="INFO">${test} = Variables are not checked in when arguments are embedded</msg>
<status status="PASS" endtime="20130409 15:06:56.878" starttime="20130409 15:06:56.877"></status>
</kw>
<kw type="kw" name="TestCheckerLibrary.Check Test Status" timeout="">
<doc>Verifies that test's status and message are as expected.</doc>
<arguments>
<arg>${test}</arg>
<arg>${status}</arg>
<arg>${message}</arg>
</arguments>
<status status="PASS" endtime="20130409 15:06:56.879" starttime="20130409 15:06:56.879"></status>
</kw>
<msg timestamp="20130409 15:06:56.879" level="INFO">${tc} = Variables are not checked in when arguments are embedded</msg>
<status status="PASS" endtime="20130409 15:06:56.879" starttime="20130409 15:06:56.876"></status>
</kw>
<kw type="kw" name="Name and status should be" timeout="">
<doc></doc>
<arguments>
<arg>${tc.kws[0]}</arg>
<arg>Embedded \${TESTNAME} here</arg>
<arg>PASS</arg>
</arguments>
<kw type="kw" name="BuiltIn.Should Be Equal" timeout="">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${kw.name}</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20130409 15:06:56.882" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20130409 15:06:56.882" starttime="20130409 15:06:56.881"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal" timeout="">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${kw.status}</arg>
<arg>${status}</arg>
</arguments>
<msg timestamp="20130409 15:06:56.883" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20130409 15:06:56.883" starttime="20130409 15:06:56.882"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:56.883" starttime="20130409 15:06:56.880"></status>
</kw>
<kw type="kw" name="Name and status should be" timeout="">
<doc></doc>
<arguments>
<arg>${tc.kws[0].kws[0]}</arg>
<arg>BuiltIn.No Operation</arg>
<arg>NOT_RUN</arg>
</arguments>
<kw type="kw" name="BuiltIn.Should Be Equal" timeout="">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${kw.name}</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20130409 15:06:56.886" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20130409 15:06:56.886" starttime="20130409 15:06:56.885"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal" timeout="">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${kw.status}</arg>
<arg>${status}</arg>
</arguments>
<msg timestamp="20130409 15:06:56.887" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20130409 15:06:56.887" starttime="20130409 15:06:56.886"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:56.887" starttime="20130409 15:06:56.883"></status>
</kw>
<kw type="kw" name="Name and status should be" timeout="">
<doc></doc>
<arguments>
<arg>${tc.kws[1]}</arg>
<arg>Embedded \${nonex} here</arg>
<arg>PASS</arg>
</arguments>
<kw type="kw" name="BuiltIn.Should Be Equal" timeout="">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${kw.name}</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20130409 15:06:56.889" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20130409 15:06:56.889" starttime="20130409 15:06:56.889"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal" timeout="">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${kw.status}</arg>
<arg>${status}</arg>
</arguments>
<msg timestamp="20130409 15:06:56.890" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20130409 15:06:56.890" starttime="20130409 15:06:56.889"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:56.890" starttime="20130409 15:06:56.887"></status>
</kw>
<kw type="kw" name="Name and status should be" timeout="">
<doc></doc>
<arguments>
<arg>${tc.kws[1].kws[0]}</arg>
<arg>BuiltIn.No Operation</arg>
<arg>NOT_RUN</arg>
</arguments>
<kw type="kw" name="BuiltIn.Should Be Equal" timeout="">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${kw.name}</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20130409 15:06:56.892" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20130409 15:06:56.892" starttime="20130409 15:06:56.892"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal" timeout="">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${kw.status}</arg>
<arg>${status}</arg>
</arguments>
<msg timestamp="20130409 15:06:56.893" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20130409 15:06:56.894" starttime="20130409 15:06:56.893"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:56.894" starttime="20130409 15:06:56.890"></status>
</kw>
<doc>See the doc of the previous test</doc>
<tags>
<tag>jybot</tag>
<tag>pybot</tag>
<tag>regression</tag>
</tags>
<status status="PASS" endtime="20130409 15:06:56.894" critical="yes" starttime="20130409 15:06:56.875"></status>
</test>
<test id="s1-s1-t7" timeout="" name="User keyword return value">
<kw type="kw" name="atest_resource.Check Test Case" timeout="">
<doc></doc>
<arguments>
<arg>${TESTNAME}</arg>
</arguments>
<kw type="kw" name="${test} = TestCheckerLibrary.Get Test From Suite" timeout="">
<doc></doc>
<arguments>
<arg>${SUITE}</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20130409 15:06:56.898" level="INFO">${test} = User keyword return value</msg>
<status status="PASS" endtime="20130409 15:06:56.898" starttime="20130409 15:06:56.897"></status>
</kw>
<kw type="kw" name="TestCheckerLibrary.Check Test Status" timeout="">
<doc>Verifies that test's status and message are as expected.</doc>
<arguments>
<arg>${test}</arg>
<arg>${status}</arg>
<arg>${message}</arg>
</arguments>
<status status="PASS" endtime="20130409 15:06:56.898" starttime="20130409 15:06:56.898"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:56.898" starttime="20130409 15:06:56.896"></status>
</kw>
<doc></doc>
<tags>
<tag>jybot</tag>
<tag>pybot</tag>
<tag>regression</tag>
</tags>
<status status="PASS" endtime="20130409 15:06:56.899" critical="yes" starttime="20130409 15:06:56.894"></status>
</test>
<test id="s1-s1-t8" timeout="" name="Test Setup and Teardown">
<kw type="kw" name="${tc} = atest_resource.Check Test Case" timeout="">
<doc></doc>
<arguments>
<arg>${TESTNAME}</arg>
</arguments>
<kw type="kw" name="${test} = TestCheckerLibrary.Get Test From Suite" timeout="">
<doc></doc>
<arguments>
<arg>${SUITE}</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20130409 15:06:56.902" level="INFO">${test} = Test Setup And Teardown</msg>
<status status="PASS" endtime="20130409 15:06:56.902" starttime="20130409 15:06:56.901"></status>
</kw>
<kw type="kw" name="TestCheckerLibrary.Check Test Status" timeout="">
<doc>Verifies that test's status and message are as expected.</doc>
<arguments>
<arg>${test}</arg>
<arg>${status}</arg>
<arg>${message}</arg>
</arguments>
<status status="PASS" endtime="20130409 15:06:56.903" starttime="20130409 15:06:56.903"></status>
</kw>
<msg timestamp="20130409 15:06:56.903" level="INFO">${tc} = Test Setup And Teardown</msg>
<status status="PASS" endtime="20130409 15:06:56.903" starttime="20130409 15:06:56.900"></status>
</kw>
<kw type="kw" name="Should have correct number of keywords" timeout="">
<doc></doc>
<arguments>
<arg>${tc}</arg>
<arg>1</arg>
</arguments>
<kw type="kw" name="BuiltIn.Log" timeout="">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${test or uk.kws}</arg>
</arguments>
<msg timestamp="20130409 15:06:56.905" level="INFO">[&lt;TestCheckerLibrary.NoSlotsKeyword object at 0x105133eb0&gt;]</msg>
<status status="PASS" endtime="20130409 15:06:56.905" starttime="20130409 15:06:56.905"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal As Integers" timeout="">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${test or uk.kw_count}</arg>
<arg>${exp number of kws}</arg>
</arguments>
<msg timestamp="20130409 15:06:56.906" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20130409 15:06:56.906" starttime="20130409 15:06:56.905"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:56.906" starttime="20130409 15:06:56.904"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal" timeout="">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${tc.setup.name}</arg>
<arg>BuiltIn.Log</arg>
</arguments>
<msg timestamp="20130409 15:06:56.907" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20130409 15:06:56.907" starttime="20130409 15:06:56.907"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal" timeout="">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${tc.teardown.name}</arg>
<arg>Does not exist</arg>
</arguments>
<msg timestamp="20130409 15:06:56.908" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20130409 15:06:56.908" starttime="20130409 15:06:56.908"></status>
</kw>
<doc></doc>
<tags>
<tag>jybot</tag>
<tag>pybot</tag>
<tag>regression</tag>
</tags>
<status status="PASS" endtime="20130409 15:06:56.908" critical="yes" starttime="20130409 15:06:56.899"></status>
</test>
<test id="s1-s1-t9" timeout="" name="Keyword Teardown">
<kw type="kw" name="${tc} = atest_resource.Check Test Case" timeout="">
<doc></doc>
<arguments>
<arg>${TESTNAME}</arg>
</arguments>
<kw type="kw" name="${test} = TestCheckerLibrary.Get Test From Suite" timeout="">
<doc></doc>
<arguments>
<arg>${SUITE}</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20130409 15:06:56.911" level="INFO">${test} = Keyword Teardown</msg>
<status status="PASS" endtime="20130409 15:06:56.911" starttime="20130409 15:06:56.911"></status>
</kw>
<kw type="kw" name="TestCheckerLibrary.Check Test Status" timeout="">
<doc>Verifies that test's status and message are as expected.</doc>
<arguments>
<arg>${test}</arg>
<arg>${status}</arg>
<arg>${message}</arg>
</arguments>
<status status="PASS" endtime="20130409 15:06:56.912" starttime="20130409 15:06:56.912"></status>
</kw>
<msg timestamp="20130409 15:06:56.912" level="INFO">${tc} = Keyword Teardown</msg>
<status status="PASS" endtime="20130409 15:06:56.912" starttime="20130409 15:06:56.910"></status>
</kw>
<kw type="kw" name="Should have correct number of keywords" timeout="">
<doc></doc>
<arguments>
<arg>${tc}</arg>
<arg>1</arg>
</arguments>
<kw type="kw" name="BuiltIn.Log" timeout="">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${test or uk.kws}</arg>
</arguments>
<msg timestamp="20130409 15:06:56.914" level="INFO">[&lt;TestCheckerLibrary.NoSlotsKeyword object at 0x1051360f0&gt;]</msg>
<status status="PASS" endtime="20130409 15:06:56.914" starttime="20130409 15:06:56.913"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal As Integers" timeout="">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${test or uk.kw_count}</arg>
<arg>${exp number of kws}</arg>
</arguments>
<msg timestamp="20130409 15:06:56.915" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20130409 15:06:56.915" starttime="20130409 15:06:56.914"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:56.915" starttime="20130409 15:06:56.913"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal" timeout="">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${tc.kws[0].kws[1].name}</arg>
<arg>Does not exist</arg>
</arguments>
<msg timestamp="20130409 15:06:56.916" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20130409 15:06:56.916" starttime="20130409 15:06:56.915"></status>
</kw>
<doc></doc>
<tags>
<tag>jybot</tag>
<tag>pybot</tag>
<tag>regression</tag>
</tags>
<status status="PASS" endtime="20130409 15:06:56.916" critical="yes" starttime="20130409 15:06:56.909"></status>
</test>
<test id="s1-s1-t10" timeout="" name="For Loops">
<kw type="kw" name="${tc} = atest_resource.Check Test Case" timeout="">
<doc></doc>
<arguments>
<arg>${TESTNAME}</arg>
</arguments>
<kw type="kw" name="${test} = TestCheckerLibrary.Get Test From Suite" timeout="">
<doc></doc>
<arguments>
<arg>${SUITE}</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20130409 15:06:56.919" level="INFO">${test} = For Loops</msg>
<status status="PASS" endtime="20130409 15:06:56.919" starttime="20130409 15:06:56.918"></status>
</kw>
<kw type="kw" name="TestCheckerLibrary.Check Test Status" timeout="">
<doc>Verifies that test's status and message are as expected.</doc>
<arguments>
<arg>${test}</arg>
<arg>${status}</arg>
<arg>${message}</arg>
</arguments>
<status status="PASS" endtime="20130409 15:06:56.920" starttime="20130409 15:06:56.920"></status>
</kw>
<msg timestamp="20130409 15:06:56.920" level="INFO">${tc} = For Loops</msg>
<status status="PASS" endtime="20130409 15:06:56.920" starttime="20130409 15:06:56.917"></status>
</kw>
<kw type="kw" name="Should have correct number of keywords" timeout="">
<doc></doc>
<arguments>
<arg>${tc}</arg>
<arg>3</arg>
</arguments>
<kw type="kw" name="BuiltIn.Log" timeout="">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${test or uk.kws}</arg>
</arguments>
<msg timestamp="20130409 15:06:56.922" level="INFO">[&lt;TestCheckerLibrary.NoSlotsKeyword object at 0x1051362d0&gt;, &lt;TestCheckerLibrary.NoSlotsKeyword object at 0x1051365f0&gt;, &lt;TestCheckerLibrary.NoSlotsKeyword object at 0x1051369b0&gt;]</msg>
<status status="PASS" endtime="20130409 15:06:56.922" starttime="20130409 15:06:56.922"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal As Integers" timeout="">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${test or uk.kw_count}</arg>
<arg>${exp number of kws}</arg>
</arguments>
<msg timestamp="20130409 15:06:56.923" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20130409 15:06:56.924" starttime="20130409 15:06:56.923"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:56.924" starttime="20130409 15:06:56.921"></status>
</kw>
<kw type="kw" name="Should have correct number of keywords" timeout="">
<doc></doc>
<arguments>
<arg>${tc.kws[0]}</arg>
<arg>1</arg>
</arguments>
<kw type="kw" name="BuiltIn.Log" timeout="">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${test or uk.kws}</arg>
</arguments>
<msg timestamp="20130409 15:06:56.926" level="INFO">[${i} = ${i}]</msg>
<status status="PASS" endtime="20130409 15:06:56.926" starttime="20130409 15:06:56.925"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal As Integers" timeout="">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${test or uk.kw_count}</arg>
<arg>${exp number of kws}</arg>
</arguments>
<msg timestamp="20130409 15:06:56.927" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20130409 15:06:56.927" starttime="20130409 15:06:56.927"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:56.928" starttime="20130409 15:06:56.924"></status>
</kw>
<kw type="kw" name="Should have correct number of keywords" timeout="">
<doc></doc>
<arguments>
<arg>${tc.kws[0].kws[0]}</arg>
<arg>2</arg>
</arguments>
<kw type="kw" name="BuiltIn.Log" timeout="">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${test or uk.kws}</arg>
</arguments>
<msg timestamp="20130409 15:06:56.930" level="INFO">[BuiltIn.Log, resource.Simple UK]</msg>
<status status="PASS" endtime="20130409 15:06:56.930" starttime="20130409 15:06:56.929"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal As Integers" timeout="">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${test or uk.kw_count}</arg>
<arg>${exp number of kws}</arg>
</arguments>
<msg timestamp="20130409 15:06:56.930" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20130409 15:06:56.931" starttime="20130409 15:06:56.930"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:56.931" starttime="20130409 15:06:56.928"></status>
</kw>
<kw type="kw" name="Should have correct number of keywords" timeout="">
<doc></doc>
<arguments>
<arg>${tc.kws[1]}</arg>
<arg>3</arg>
</arguments>
<kw type="kw" name="BuiltIn.Log" timeout="">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${test or uk.kws}</arg>
</arguments>
<msg timestamp="20130409 15:06:56.933" level="INFO">[@{list} = BuiltIn.Create List, ${i} | ${j} | ${k} IN [ @{list} ], BuiltIn.Fail]</msg>
<status status="PASS" endtime="20130409 15:06:56.933" starttime="20130409 15:06:56.932"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal As Integers" timeout="">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${test or uk.kw_count}</arg>
<arg>${exp number of kws}</arg>
</arguments>
<msg timestamp="20130409 15:06:56.934" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20130409 15:06:56.934" starttime="20130409 15:06:56.933"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:56.934" starttime="20130409 15:06:56.931"></status>
</kw>
<kw type="kw" name="Should have correct number of keywords" timeout="">
<doc></doc>
<arguments>
<arg>${tc.kws[1].kws[1]}</arg>
<arg>1</arg>
</arguments>
<kw type="kw" name="BuiltIn.Log" timeout="">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${test or uk.kws}</arg>
</arguments>
<msg timestamp="20130409 15:06:56.936" level="INFO">[${i} = ${i}, ${j} = ${j}, ${k} = ${k}]</msg>
<status status="PASS" endtime="20130409 15:06:56.936" starttime="20130409 15:06:56.935"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal As Integers" timeout="">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${test or uk.kw_count}</arg>
<arg>${exp number of kws}</arg>
</arguments>
<msg timestamp="20130409 15:06:56.937" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20130409 15:06:56.937" starttime="20130409 15:06:56.936"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:56.937" starttime="20130409 15:06:56.934"></status>
</kw>
<doc></doc>
<tags>
<tag>jybot</tag>
<tag>pybot</tag>
<tag>regression</tag>
</tags>
<status status="PASS" endtime="20130409 15:06:56.937" critical="yes" starttime="20130409 15:06:56.916"></status>
</test>
<test id="s1-s1-t11" timeout="" name="Non-existing keyword name">
<kw type="kw" name="atest_resource.Check Test Case" timeout="">
<doc></doc>
<arguments>
<arg>${TESTNAME}</arg>
</arguments>
<kw type="kw" name="${test} = TestCheckerLibrary.Get Test From Suite" timeout="">
<doc></doc>
<arguments>
<arg>${SUITE}</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20130409 15:06:56.940" level="INFO">${test} = Non-existing keyword name</msg>
<status status="PASS" endtime="20130409 15:06:56.940" starttime="20130409 15:06:56.939"></status>
</kw>
<kw type="kw" name="TestCheckerLibrary.Check Test Status" timeout="">
<doc>Verifies that test's status and message are as expected.</doc>
<arguments>
<arg>${test}</arg>
<arg>${status}</arg>
<arg>${message}</arg>
</arguments>
<status status="PASS" endtime="20130409 15:06:56.941" starttime="20130409 15:06:56.940"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:56.941" starttime="20130409 15:06:56.938"></status>
</kw>
<doc></doc>
<tags>
<tag>jybot</tag>
<tag>pybot</tag>
<tag>regression</tag>
</tags>
<status status="PASS" endtime="20130409 15:06:56.941" critical="yes" starttime="20130409 15:06:56.937"></status>
</test>
<test id="s1-s1-t12" timeout="" name="Too few arguments">
<kw type="kw" name="atest_resource.Check Test Case" timeout="">
<doc></doc>
<arguments>
<arg>${TESTNAME}</arg>
</arguments>
<kw type="kw" name="${test} = TestCheckerLibrary.Get Test From Suite" timeout="">
<doc></doc>
<arguments>
<arg>${SUITE}</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20130409 15:06:56.944" level="INFO">${test} = Too few arguments</msg>
<status status="PASS" endtime="20130409 15:06:56.944" starttime="20130409 15:06:56.944"></status>
</kw>
<kw type="kw" name="TestCheckerLibrary.Check Test Status" timeout="">
<doc>Verifies that test's status and message are as expected.</doc>
<arguments>
<arg>${test}</arg>
<arg>${status}</arg>
<arg>${message}</arg>
</arguments>
<status status="PASS" endtime="20130409 15:06:56.945" starttime="20130409 15:06:56.945"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:56.945" starttime="20130409 15:06:56.943"></status>
</kw>
<doc></doc>
<tags>
<tag>jybot</tag>
<tag>pybot</tag>
<tag>regression</tag>
</tags>
<status status="PASS" endtime="20130409 15:06:56.945" critical="yes" starttime="20130409 15:06:56.942"></status>
</test>
<test id="s1-s1-t13" timeout="" name="Too few arguments for UK">
<kw type="kw" name="atest_resource.Check Test Case" timeout="">
<doc></doc>
<arguments>
<arg>${TESTNAME}</arg>
</arguments>
<kw type="kw" name="${test} = TestCheckerLibrary.Get Test From Suite" timeout="">
<doc></doc>
<arguments>
<arg>${SUITE}</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20130409 15:06:56.949" level="INFO">${test} = Too few arguments for UK</msg>
<status status="PASS" endtime="20130409 15:06:56.949" starttime="20130409 15:06:56.948"></status>
</kw>
<kw type="kw" name="TestCheckerLibrary.Check Test Status" timeout="">
<doc>Verifies that test's status and message are as expected.</doc>
<arguments>
<arg>${test}</arg>
<arg>${status}</arg>
<arg>${message}</arg>
</arguments>
<status status="PASS" endtime="20130409 15:06:56.949" starttime="20130409 15:06:56.949"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:56.949" starttime="20130409 15:06:56.947"></status>
</kw>
<doc></doc>
<tags>
<tag>jybot</tag>
<tag>pybot</tag>
<tag>regression</tag>
</tags>
<status status="PASS" endtime="20130409 15:06:56.950" critical="yes" starttime="20130409 15:06:56.946"></status>
</test>
<test id="s1-s1-t14" timeout="" name="Too many arguments">
<kw type="kw" name="atest_resource.Check Test Case" timeout="">
<doc></doc>
<arguments>
<arg>${TESTNAME}</arg>
</arguments>
<kw type="kw" name="${test} = TestCheckerLibrary.Get Test From Suite" timeout="">
<doc></doc>
<arguments>
<arg>${SUITE}</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20130409 15:06:56.953" level="INFO">${test} = Too many arguments</msg>
<status status="PASS" endtime="20130409 15:06:56.953" starttime="20130409 15:06:56.952"></status>
</kw>
<kw type="kw" name="TestCheckerLibrary.Check Test Status" timeout="">
<doc>Verifies that test's status and message are as expected.</doc>
<arguments>
<arg>${test}</arg>
<arg>${status}</arg>
<arg>${message}</arg>
</arguments>
<status status="PASS" endtime="20130409 15:06:56.953" starttime="20130409 15:06:56.953"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:56.953" starttime="20130409 15:06:56.951"></status>
</kw>
<doc></doc>
<tags>
<tag>jybot</tag>
<tag>pybot</tag>
<tag>regression</tag>
</tags>
<status status="PASS" endtime="20130409 15:06:56.954" critical="yes" starttime="20130409 15:06:56.950"></status>
</test>
<test id="s1-s1-t15" timeout="" name="Invalid syntax in UK">
<kw type="kw" name="atest_resource.Check Test Case" timeout="">
<doc></doc>
<arguments>
<arg>${TESTNAME}</arg>
</arguments>
<kw type="kw" name="${test} = TestCheckerLibrary.Get Test From Suite" timeout="">
<doc></doc>
<arguments>
<arg>${SUITE}</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20130409 15:06:56.957" level="INFO">${test} = Invalid syntax in UK</msg>
<status status="PASS" endtime="20130409 15:06:56.957" starttime="20130409 15:06:56.956"></status>
</kw>
<kw type="kw" name="TestCheckerLibrary.Check Test Status" timeout="">
<doc>Verifies that test's status and message are as expected.</doc>
<arguments>
<arg>${test}</arg>
<arg>${status}</arg>
<arg>${message}</arg>
</arguments>
<status status="PASS" endtime="20130409 15:06:56.958" starttime="20130409 15:06:56.957"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:56.958" starttime="20130409 15:06:56.955"></status>
</kw>
<doc></doc>
<tags>
<tag>jybot</tag>
<tag>pybot</tag>
<tag>regression</tag>
</tags>
<status status="PASS" endtime="20130409 15:06:56.958" critical="yes" starttime="20130409 15:06:56.954"></status>
</test>
<test id="s1-s1-t16" timeout="" name="Multiple Failures">
<kw type="kw" name="atest_resource.Check Test Case" timeout="">
<doc></doc>
<arguments>
<arg>${TESTNAME}</arg>
</arguments>
<kw type="kw" name="${test} = TestCheckerLibrary.Get Test From Suite" timeout="">
<doc></doc>
<arguments>
<arg>${SUITE}</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20130409 15:06:56.961" level="INFO">${test} = Multiple Failures</msg>
<status status="PASS" endtime="20130409 15:06:56.961" starttime="20130409 15:06:56.961"></status>
</kw>
<kw type="kw" name="TestCheckerLibrary.Check Test Status" timeout="">
<doc>Verifies that test's status and message are as expected.</doc>
<arguments>
<arg>${test}</arg>
<arg>${status}</arg>
<arg>${message}</arg>
</arguments>
<status status="PASS" endtime="20130409 15:06:56.962" starttime="20130409 15:06:56.962"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:56.962" starttime="20130409 15:06:56.959"></status>
</kw>
<doc></doc>
<tags>
<tag>jybot</tag>
<tag>pybot</tag>
<tag>regression</tag>
</tags>
<status status="PASS" endtime="20130409 15:06:56.963" critical="yes" starttime="20130409 15:06:56.958"></status>
</test>
<test id="s1-s1-t17" timeout="" name="Invalid imports">
<kw type="kw" name="atest_resource.Check Stderr Contains" timeout="">
<doc></doc>
<arguments>
<arg>Importing test library 'DoesNotExist' failed: ImportError: No module named DoesNotExist</arg>
</arguments>
<kw type="kw" name="atest_resource.Check File Contains" timeout="">
<doc></doc>
<arguments>
<arg>${STDERR_FILE}</arg>
<arg>@{expected}</arg>
</arguments>
<kw type="kw" name="${exp} = BuiltIn.Catenate" timeout="">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>@{expected}</arg>
</arguments>
<msg timestamp="20130409 15:06:56.967" level="INFO">${exp} = Importing test library 'DoesNotExist' failed: ImportError: No module named DoesNotExist</msg>
<status status="PASS" endtime="20130409 15:06:56.967" starttime="20130409 15:06:56.967"></status>
</kw>
<kw type="kw" name="${file} = atest_resource.Get Output File" timeout="">
<doc>Output encoding avare helper</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<kw type="kw" name="${encoding} = BuiltIn.Evaluate" timeout="">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>__import__('robot').utils.encoding.OUTPUT_ENCODING</arg>
</arguments>
<msg timestamp="20130409 15:06:56.969" level="INFO">${encoding} = UTF-8</msg>
<status status="PASS" endtime="20130409 15:06:56.969" starttime="20130409 15:06:56.969"></status>
</kw>
<kw type="kw" name="${encoding} = BuiltIn.Set Variable If" timeout="">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>r'${path}' in [r'${STDERR FILE}',r'${STDOUT FILE}']</arg>
<arg>${encoding}</arg>
<arg>UTF-8</arg>
</arguments>
<msg timestamp="20130409 15:06:56.970" level="INFO">${encoding} = UTF-8</msg>
<status status="PASS" endtime="20130409 15:06:56.970" starttime="20130409 15:06:56.970"></status>
</kw>
<kw type="kw" name="${file} = OperatingSystem.Log File" timeout="">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${path}</arg>
<arg>${encoding}</arg>
</arguments>
<msg timestamp="20130409 15:06:56.971" html="yes" level="INFO">Getting file '&lt;a href="file:///Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests/stderr.txt"&gt;/Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests/stderr.txt&lt;/a&gt;'</msg>
<msg timestamp="20130409 15:06:56.971" level="INFO">[ ERROR ] Error in file '/Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/dryrun.txt' in table 'Settings': Importing test library 'DoesNotExist' failed: ImportError: No module named DoesNotExist
Traceback (most recent call last):
  None
PYTHONPATH:
  /Users/asyrjasalo/eficode/robot/robotframework/atest/testresources/testlibs
  /Users/asyrjasalo/eficode/robot/robotframework/atest/testresources/listeners
  /Users/asyrjasalo/eficode/robot/robotframework/src/robot/libraries
  /Users/asyrjasalo/eficode/robot/robotframework/src
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/pip-1.3.1-py2.7.egg
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/distribute-0.6.36-py2.7.egg
  /usr/local/lib/python2.7/site-packages/pip-1.3.1-py2.7.egg
  /usr/local/lib/python2.7/site-packages/distribute-0.6.36-py2.7.egg
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python27.zip
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-darwin
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-mac
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-mac/lib-scriptpackages
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-tk
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-old
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-dynload
  /Library/Python/2.7/site-packages
  /usr/local/lib/wxPython-unicode-2.8.12.1/lib/python2.7
  /usr/local/lib/python2.7/site-packages
  .
  /Users/asyrjasalo/eficode/robot/robotframework/atest
[ ERROR ] Error in file '/Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/dryrun.txt' in table 'Settings': Variable file 'wrong_path.py' does not exist.
[ ERROR ] Error in file '/Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/dryrun.txt' in table 'Settings': Resource file 'NonExisting.tsv' does not exist.
</msg>
<msg timestamp="20130409 15:06:56.972" level="INFO">${file} = [ ERROR ] Error in file '/Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/dryrun.txt' in table 'Settings': Importing test library 'DoesNotExist' failed: ImportError: No module ...</msg>
<status status="PASS" endtime="20130409 15:06:56.972" starttime="20130409 15:06:56.971"></status>
</kw>
<msg timestamp="20130409 15:06:56.972" level="INFO">${file} = [ ERROR ] Error in file '/Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/dryrun.txt' in table 'Settings': Importing test library 'DoesNotExist' failed: ImportError: No module ...</msg>
<status status="PASS" endtime="20130409 15:06:56.972" starttime="20130409 15:06:56.967"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Contain" timeout="">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${file}</arg>
<arg>${exp}</arg>
</arguments>
<status status="PASS" endtime="20130409 15:06:56.973" starttime="20130409 15:06:56.972"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:56.973" starttime="20130409 15:06:56.965"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:56.973" starttime="20130409 15:06:56.964"></status>
</kw>
<kw type="kw" name="atest_resource.Check Stderr Contains" timeout="">
<doc></doc>
<arguments>
<arg>Variable file 'wrong_path.py' does not exist</arg>
</arguments>
<kw type="kw" name="atest_resource.Check File Contains" timeout="">
<doc></doc>
<arguments>
<arg>${STDERR_FILE}</arg>
<arg>@{expected}</arg>
</arguments>
<kw type="kw" name="${exp} = BuiltIn.Catenate" timeout="">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>@{expected}</arg>
</arguments>
<msg timestamp="20130409 15:06:56.975" level="INFO">${exp} = Variable file 'wrong_path.py' does not exist</msg>
<status status="PASS" endtime="20130409 15:06:56.975" starttime="20130409 15:06:56.975"></status>
</kw>
<kw type="kw" name="${file} = atest_resource.Get Output File" timeout="">
<doc>Output encoding avare helper</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<kw type="kw" name="${encoding} = BuiltIn.Evaluate" timeout="">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>__import__('robot').utils.encoding.OUTPUT_ENCODING</arg>
</arguments>
<msg timestamp="20130409 15:06:56.978" level="INFO">${encoding} = UTF-8</msg>
<status status="PASS" endtime="20130409 15:06:56.977" starttime="20130409 15:06:56.977"></status>
</kw>
<kw type="kw" name="${encoding} = BuiltIn.Set Variable If" timeout="">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>r'${path}' in [r'${STDERR FILE}',r'${STDOUT FILE}']</arg>
<arg>${encoding}</arg>
<arg>UTF-8</arg>
</arguments>
<msg timestamp="20130409 15:06:56.979" level="INFO">${encoding} = UTF-8</msg>
<status status="PASS" endtime="20130409 15:06:56.979" starttime="20130409 15:06:56.978"></status>
</kw>
<kw type="kw" name="${file} = OperatingSystem.Log File" timeout="">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${path}</arg>
<arg>${encoding}</arg>
</arguments>
<msg timestamp="20130409 15:06:56.979" html="yes" level="INFO">Getting file '&lt;a href="file:///Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests/stderr.txt"&gt;/Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests/stderr.txt&lt;/a&gt;'</msg>
<msg timestamp="20130409 15:06:56.979" level="INFO">[ ERROR ] Error in file '/Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/dryrun.txt' in table 'Settings': Importing test library 'DoesNotExist' failed: ImportError: No module named DoesNotExist
Traceback (most recent call last):
  None
PYTHONPATH:
  /Users/asyrjasalo/eficode/robot/robotframework/atest/testresources/testlibs
  /Users/asyrjasalo/eficode/robot/robotframework/atest/testresources/listeners
  /Users/asyrjasalo/eficode/robot/robotframework/src/robot/libraries
  /Users/asyrjasalo/eficode/robot/robotframework/src
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/pip-1.3.1-py2.7.egg
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/distribute-0.6.36-py2.7.egg
  /usr/local/lib/python2.7/site-packages/pip-1.3.1-py2.7.egg
  /usr/local/lib/python2.7/site-packages/distribute-0.6.36-py2.7.egg
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python27.zip
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-darwin
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-mac
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-mac/lib-scriptpackages
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-tk
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-old
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-dynload
  /Library/Python/2.7/site-packages
  /usr/local/lib/wxPython-unicode-2.8.12.1/lib/python2.7
  /usr/local/lib/python2.7/site-packages
  .
  /Users/asyrjasalo/eficode/robot/robotframework/atest
[ ERROR ] Error in file '/Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/dryrun.txt' in table 'Settings': Variable file 'wrong_path.py' does not exist.
[ ERROR ] Error in file '/Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/dryrun.txt' in table 'Settings': Resource file 'NonExisting.tsv' does not exist.
</msg>
<msg timestamp="20130409 15:06:56.980" level="INFO">${file} = [ ERROR ] Error in file '/Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/dryrun.txt' in table 'Settings': Importing test library 'DoesNotExist' failed: ImportError: No module ...</msg>
<status status="PASS" endtime="20130409 15:06:56.980" starttime="20130409 15:06:56.979"></status>
</kw>
<msg timestamp="20130409 15:06:56.980" level="INFO">${file} = [ ERROR ] Error in file '/Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/dryrun.txt' in table 'Settings': Importing test library 'DoesNotExist' failed: ImportError: No module ...</msg>
<status status="PASS" endtime="20130409 15:06:56.980" starttime="20130409 15:06:56.976"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Contain" timeout="">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${file}</arg>
<arg>${exp}</arg>
</arguments>
<status status="PASS" endtime="20130409 15:06:56.981" starttime="20130409 15:06:56.980"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:56.981" starttime="20130409 15:06:56.974"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:56.981" starttime="20130409 15:06:56.973"></status>
</kw>
<kw type="kw" name="atest_resource.Check Stderr Contains" timeout="">
<doc></doc>
<arguments>
<arg>Resource file 'NonExisting.tsv' does not exist</arg>
</arguments>
<kw type="kw" name="atest_resource.Check File Contains" timeout="">
<doc></doc>
<arguments>
<arg>${STDERR_FILE}</arg>
<arg>@{expected}</arg>
</arguments>
<kw type="kw" name="${exp} = BuiltIn.Catenate" timeout="">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>@{expected}</arg>
</arguments>
<msg timestamp="20130409 15:06:56.984" level="INFO">${exp} = Resource file 'NonExisting.tsv' does not exist</msg>
<status status="PASS" endtime="20130409 15:06:56.984" starttime="20130409 15:06:56.983"></status>
</kw>
<kw type="kw" name="${file} = atest_resource.Get Output File" timeout="">
<doc>Output encoding avare helper</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<kw type="kw" name="${encoding} = BuiltIn.Evaluate" timeout="">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>__import__('robot').utils.encoding.OUTPUT_ENCODING</arg>
</arguments>
<msg timestamp="20130409 15:06:56.985" level="INFO">${encoding} = UTF-8</msg>
<status status="PASS" endtime="20130409 15:06:56.985" starttime="20130409 15:06:56.985"></status>
</kw>
<kw type="kw" name="${encoding} = BuiltIn.Set Variable If" timeout="">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>r'${path}' in [r'${STDERR FILE}',r'${STDOUT FILE}']</arg>
<arg>${encoding}</arg>
<arg>UTF-8</arg>
</arguments>
<msg timestamp="20130409 15:06:56.986" level="INFO">${encoding} = UTF-8</msg>
<status status="PASS" endtime="20130409 15:06:56.986" starttime="20130409 15:06:56.985"></status>
</kw>
<kw type="kw" name="${file} = OperatingSystem.Log File" timeout="">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${path}</arg>
<arg>${encoding}</arg>
</arguments>
<msg timestamp="20130409 15:06:56.987" html="yes" level="INFO">Getting file '&lt;a href="file:///Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests/stderr.txt"&gt;/Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests/stderr.txt&lt;/a&gt;'</msg>
<msg timestamp="20130409 15:06:56.987" level="INFO">[ ERROR ] Error in file '/Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/dryrun.txt' in table 'Settings': Importing test library 'DoesNotExist' failed: ImportError: No module named DoesNotExist
Traceback (most recent call last):
  None
PYTHONPATH:
  /Users/asyrjasalo/eficode/robot/robotframework/atest/testresources/testlibs
  /Users/asyrjasalo/eficode/robot/robotframework/atest/testresources/listeners
  /Users/asyrjasalo/eficode/robot/robotframework/src/robot/libraries
  /Users/asyrjasalo/eficode/robot/robotframework/src
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/pip-1.3.1-py2.7.egg
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/distribute-0.6.36-py2.7.egg
  /usr/local/lib/python2.7/site-packages/pip-1.3.1-py2.7.egg
  /usr/local/lib/python2.7/site-packages/distribute-0.6.36-py2.7.egg
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python27.zip
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-darwin
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-mac
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-mac/lib-scriptpackages
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-tk
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-old
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-dynload
  /Library/Python/2.7/site-packages
  /usr/local/lib/wxPython-unicode-2.8.12.1/lib/python2.7
  /usr/local/lib/python2.7/site-packages
  .
  /Users/asyrjasalo/eficode/robot/robotframework/atest
[ ERROR ] Error in file '/Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/dryrun.txt' in table 'Settings': Variable file 'wrong_path.py' does not exist.
[ ERROR ] Error in file '/Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/dryrun.txt' in table 'Settings': Resource file 'NonExisting.tsv' does not exist.
</msg>
<msg timestamp="20130409 15:06:56.987" level="INFO">${file} = [ ERROR ] Error in file '/Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/dryrun.txt' in table 'Settings': Importing test library 'DoesNotExist' failed: ImportError: No module ...</msg>
<status status="PASS" endtime="20130409 15:06:56.987" starttime="20130409 15:06:56.986"></status>
</kw>
<msg timestamp="20130409 15:06:56.987" level="INFO">${file} = [ ERROR ] Error in file '/Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/dryrun.txt' in table 'Settings': Importing test library 'DoesNotExist' failed: ImportError: No module ...</msg>
<status status="PASS" endtime="20130409 15:06:56.987" starttime="20130409 15:06:56.984"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Contain" timeout="">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${file}</arg>
<arg>${exp}</arg>
</arguments>
<status status="PASS" endtime="20130409 15:06:56.988" starttime="20130409 15:06:56.987"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:56.988" starttime="20130409 15:06:56.982"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:56.988" starttime="20130409 15:06:56.981"></status>
</kw>
<doc></doc>
<tags>
<tag>jybot</tag>
<tag>pybot</tag>
<tag>regression</tag>
</tags>
<status status="PASS" endtime="20130409 15:06:56.988" critical="yes" starttime="20130409 15:06:56.963"></status>
</test>
<test id="s1-s1-t18" timeout="" name="Test from other suite">
<kw type="kw" name="atest_resource.Check Test Case" timeout="">
<doc></doc>
<arguments>
<arg>Some Other Test</arg>
</arguments>
<kw type="kw" name="${test} = TestCheckerLibrary.Get Test From Suite" timeout="">
<doc></doc>
<arguments>
<arg>${SUITE}</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20130409 15:06:56.991" level="INFO">${test} = Some other test</msg>
<status status="PASS" endtime="20130409 15:06:56.991" starttime="20130409 15:06:56.991"></status>
</kw>
<kw type="kw" name="TestCheckerLibrary.Check Test Status" timeout="">
<doc>Verifies that test's status and message are as expected.</doc>
<arguments>
<arg>${test}</arg>
<arg>${status}</arg>
<arg>${message}</arg>
</arguments>
<status status="PASS" endtime="20130409 15:06:56.992" starttime="20130409 15:06:56.991"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:56.992" starttime="20130409 15:06:56.989"></status>
</kw>
<doc></doc>
<tags>
<tag>jybot</tag>
<tag>pybot</tag>
<tag>regression</tag>
</tags>
<status status="PASS" endtime="20130409 15:06:56.992" critical="yes" starttime="20130409 15:06:56.988"></status>
</test>
<test id="s1-s1-t19" timeout="" name="Import Library Keyword is Called">
<kw type="kw" name="atest_resource.Check Test Case" timeout="">
<doc></doc>
<arguments>
<arg>${TESTNAME}</arg>
</arguments>
<kw type="kw" name="${test} = TestCheckerLibrary.Get Test From Suite" timeout="">
<doc></doc>
<arguments>
<arg>${SUITE}</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20130409 15:06:56.996" level="INFO">${test} = Import Library Keyword is Called</msg>
<status status="PASS" endtime="20130409 15:06:56.996" starttime="20130409 15:06:56.995"></status>
</kw>
<kw type="kw" name="TestCheckerLibrary.Check Test Status" timeout="">
<doc>Verifies that test's status and message are as expected.</doc>
<arguments>
<arg>${test}</arg>
<arg>${status}</arg>
<arg>${message}</arg>
</arguments>
<status status="PASS" endtime="20130409 15:06:56.997" starttime="20130409 15:06:56.996"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:56.997" starttime="20130409 15:06:56.994"></status>
</kw>
<kw type="kw" name="atest_resource.Check Syslog Contains" timeout="">
<doc></doc>
<arguments>
<arg>Imported library 'String' with arguments [ ]</arg>
</arguments>
<kw type="kw" name="atest_resource.Check File Contains" timeout="">
<doc></doc>
<arguments>
<arg>${SYSLOG_FILE}</arg>
<arg>@{expected}</arg>
</arguments>
<kw type="kw" name="${exp} = BuiltIn.Catenate" timeout="">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>@{expected}</arg>
</arguments>
<msg timestamp="20130409 15:06:57.000" level="INFO">${exp} = Imported library 'String' with arguments [ ]</msg>
<status status="PASS" endtime="20130409 15:06:56.999" starttime="20130409 15:06:56.999"></status>
</kw>
<kw type="kw" name="${file} = atest_resource.Get Output File" timeout="">
<doc>Output encoding avare helper</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<kw type="kw" name="${encoding} = BuiltIn.Evaluate" timeout="">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>__import__('robot').utils.encoding.OUTPUT_ENCODING</arg>
</arguments>
<msg timestamp="20130409 15:06:57.002" level="INFO">${encoding} = UTF-8</msg>
<status status="PASS" endtime="20130409 15:06:57.001" starttime="20130409 15:06:57.001"></status>
</kw>
<kw type="kw" name="${encoding} = BuiltIn.Set Variable If" timeout="">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>r'${path}' in [r'${STDERR FILE}',r'${STDOUT FILE}']</arg>
<arg>${encoding}</arg>
<arg>UTF-8</arg>
</arguments>
<msg timestamp="20130409 15:06:57.003" level="INFO">${encoding} = UTF-8</msg>
<status status="PASS" endtime="20130409 15:06:57.003" starttime="20130409 15:06:57.002"></status>
</kw>
<kw type="kw" name="${file} = OperatingSystem.Log File" timeout="">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${path}</arg>
<arg>${encoding}</arg>
</arguments>
<msg timestamp="20130409 15:06:57.004" html="yes" level="INFO">Getting file '&lt;a href="file:///Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests/syslog.txt"&gt;/Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests/syslog.txt&lt;/a&gt;'</msg>
<msg timestamp="20130409 15:06:57.005" level="INFO">20130409 15:06:56.618 | INFO  | Robot Framework trunk 20130226 (Python 2.7.4 on darwin)
20130409 15:06:56.619 | INFO  | Arguments: /Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/dryrun.txt,/Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/more_tests.txt
20130409 15:06:56.619 | INFO  | Settings:
Critical: None
DebugFile: NONE
Doc: None
Exclude: []
Include: []
Listeners: []
Log: NONE
LogLevel: INFO
LogTitle: None
Metadata: []
MonitorColors: OFF
MonitorMarkers: OFF
MonitorWidth: 78
Name: None
NoStatusRC: False
NonCritical: None
Output: /Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests/output.xml
OutputDir: /Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests
RemoveKeywords: []
Report: NONE
ReportBackground: ('#99FF66', '#99FF66', '#FF3333')
ReportTitle: None
RunEmptySuite: False
RunMode: [u'dryrun']
SetTag: []
SplitLog: False
StdErr: None
StdOut: None
SuiteNames: []
SuiteStatLevel: -1
TagDoc: []
TagStatCombine: []
TagStatExclude: []
TagStatInclude: []
TagStatLink: []
TestNames: []
TimestampOutputs: False
VariableFiles: []
Variables: [u'interpreter:python']
VisibleLogLevel: INFO
WarnOnSkipped: False
XUnitFile: NONE
20130409 15:06:56.621 | INFO  | Parsing file '/Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/dryrun.txt'.
20130409 15:06:56.631 | INFO  | Parsing file '/Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/more_tests.txt'.
20130409 15:06:56.635 | INFO  | No debug file
20130409 15:06:56.635 | INFO  | Initializing namespace for test suite 'Dryrun &amp; More Tests'
20130409 15:06:56.637 | INFO  | Imported test library class 'BuiltIn' from '/Users/asyrjasalo/eficode/robot/robotframework/src/robot/libraries/BuiltIn.pyc'.
20130409 15:06:56.654 | INFO  | Imported library 'BuiltIn' with arguments [ ] (version trunk 20130226, class type, global scope, 88 keywords)
20130409 15:06:56.655 | INFO  | Imported test library class 'DeprecatedBuiltIn' from '/Users/asyrjasalo/eficode/robot/robotframework/src/robot/libraries/DeprecatedBuiltIn.pyc'.
20130409 15:06:56.663 | INFO  | Imported library 'DeprecatedBuiltIn' with arguments [ ] (version &lt;unknown&gt;, class type, global scope, 52 keywords)
20130409 15:06:56.663 | INFO  | Imported test library class 'Reserved' from '/Users/asyrjasalo/eficode/robot/robotframework/src/robot/libraries/Reserved.pyc'.
20130409 15:06:56.665 | INFO  | Imported library 'Reserved' with arguments [ ] (version &lt;unknown&gt;, dynamic type, global scope, 10 keywords)
20130409 15:06:56.665 | INFO  | Imported test library module 'Easter' from '/Users/asyrjasalo/eficode/robot/robotframework/src/robot/libraries/Easter.pyc'.
20130409 15:06:56.665 | INFO  | Imported library 'Easter' with arguments [ ] (version &lt;unknown&gt;, module type, global scope, 1 keywords)
20130409 15:06:56.666 | INFO  | Started test suite 'Dryrun &amp; More Tests'
20130409 15:06:56.666 | INFO  | Initializing namespace for test suite 'Dryrun &amp; More Tests.Dryrun'
20130409 15:06:56.667 | INFO  | Imported test library class 'BuiltIn' from '/Users/asyrjasalo/eficode/robot/robotframework/src/robot/libraries/BuiltIn.pyc'.
20130409 15:06:56.667 | INFO  | Found test library 'BuiltIn' with arguments [ ] from cache
20130409 15:06:56.667 | INFO  | Imported test library class 'DeprecatedBuiltIn' from '/Users/asyrjasalo/eficode/robot/robotframework/src/robot/libraries/DeprecatedBuiltIn.pyc'.
20130409 15:06:56.667 | INFO  | Found test library 'DeprecatedBuiltIn' with arguments [ ] from cache
20130409 15:06:56.667 | INFO  | Imported test library class 'Reserved' from '/Users/asyrjasalo/eficode/robot/robotframework/src/robot/libraries/Reserved.pyc'.
20130409 15:06:56.668 | INFO  | Found test library 'Reserved' with arguments [ ] from cache
20130409 15:06:56.668 | INFO  | Imported test library module 'Easter' from '/Users/asyrjasalo/eficode/robot/robotframework/src/robot/libraries/Easter.pyc'.
20130409 15:06:56.668 | INFO  | Found test library 'Easter' with arguments [ ] from cache
20130409 15:06:56.673 | INFO  | Imported test library class 'OperatingSystem' from '/Users/asyrjasalo/eficode/robot/robotframework/src/robot/libraries/OperatingSystem.pyc'.
20130409 15:06:56.682 | INFO  | Imported library 'OperatingSystem' with arguments [ ] (version trunk 20130226, class type, global scope, 57 keywords)
20130409 15:06:56.683 | INFO  | Imported test library class 'DeprecatedOperatingSystem' from '/Users/asyrjasalo/eficode/robot/robotframework/src/robot/libraries/DeprecatedOperatingSystem.pyc'.
20130409 15:06:56.686 | INFO  | Imported library 'DeprecatedOperatingSystem' with arguments [ ] (version &lt;unknown&gt;, class type, global scope, 24 keywords)
20130409 15:06:56.687 | INFO  | Importing variable file '/Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/vars.py' with args []
20130409 15:06:56.687 | INFO  | Imported variable file module 'vars' from '/Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/vars.py'.
20130409 15:06:56.687 | INFO  | Parsing file '/Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/resource.txt'.
20130409 15:06:56.689 | INFO  | Imported resource file '/Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/resource.txt' (4 keywords).
20130409 15:06:56.693 | ERROR | Error in file '/Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/dryrun.txt' in table 'Settings': Importing test library 'DoesNotExist' failed: ImportError: No module named DoesNotExist
Traceback (most recent call last):
  None
PYTHONPATH:
  /Users/asyrjasalo/eficode/robot/robotframework/atest/testresources/testlibs
  /Users/asyrjasalo/eficode/robot/robotframework/atest/testresources/listeners
  /Users/asyrjasalo/eficode/robot/robotframework/src/robot/libraries
  /Users/asyrjasalo/eficode/robot/robotframework/src
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/pip-1.3.1-py2.7.egg
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/distribute-0.6.36-py2.7.egg
  /usr/local/lib/python2.7/site-packages/pip-1.3.1-py2.7.egg
  /usr/local/lib/python2.7/site-packages/distribute-0.6.36-py2.7.egg
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python27.zip
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-darwin
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-mac
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-mac/lib-scriptpackages
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-tk
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-old
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-dynload
  /Library/Python/2.7/site-packages
  /usr/local/lib/wxPython-unicode-2.8.12.1/lib/python2.7
  /usr/local/lib/python2.7/site-packages
  .
  /Users/asyrjasalo/eficode/robot/robotframework/atest
20130409 15:06:56.694 | ERROR | Error in file '/Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/dryrun.txt' in table 'Settings': Variable file 'wrong_path.py' does not exist.
20130409 15:06:56.695 | ERROR | Error in file '/Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/dryrun.txt' in table 'Settings': Resource file 'NonExisting.tsv' does not exist.
20130409 15:06:56.696 | INFO  | Started test suite 'Dryrun'
20130409 15:06:56.696 | INFO  | Started test case 'Passing keywords'
20130409 15:06:56.698 | INFO  | Ended test case 'Passing keywords'
20130409 15:06:56.699 | INFO  | Started test case 'Keywords with embedded arguments'
20130409 15:06:56.701 | INFO  | Ended test case 'Keywords with embedded arguments'
20130409 15:06:56.702 | INFO  | Started test case 'Keywords that would fail'
20130409 15:06:56.704 | INFO  | Ended test case 'Keywords that would fail'
20130409 15:06:56.705 | INFO  | Started test case 'Scalar variables are not checked in keyword arguments'
20130409 15:06:56.706 | INFO  | Ended test case 'Scalar variables are not checked in keyword arguments'
20130409 15:06:56.707 | INFO  | Started test case 'List variables are not checked in keyword arguments'
20130409 15:06:56.710 | INFO  | Ended test case 'List variables are not checked in keyword arguments'
20130409 15:06:56.711 | INFO  | Started test case 'Variables are not checked in when arguments are embedded'
20130409 15:06:56.713 | INFO  | Ended test case 'Variables are not checked in when arguments are embedded'
20130409 15:06:56.714 | INFO  | Started test case 'User keyword return value'
20130409 15:06:56.715 | INFO  | Ended test case 'User keyword return value'
20130409 15:06:56.716 | INFO  | Started test case 'Test Setup And Teardown'
20130409 15:06:56.717 | INFO  | Ended test case 'Test Setup And Teardown'
20130409 15:06:56.718 | INFO  | Started test case 'Keyword Teardown'
20130409 15:06:56.720 | INFO  | Ended test case 'Keyword Teardown'
20130409 15:06:56.721 | INFO  | Started test case 'For Loops'
20130409 15:06:56.726 | INFO  | Ended test case 'For Loops'
20130409 15:06:56.727 | INFO  | Started test case 'Non-existing keyword name'
20130409 15:06:56.728 | INFO  | Ended test case 'Non-existing keyword name'
20130409 15:06:56.728 | INFO  | Started test case 'Too few arguments'
20130409 15:06:56.729 | INFO  | Ended test case 'Too few arguments'
20130409 15:06:56.730 | INFO  | Started test case 'Too few arguments for UK'
20130409 15:06:56.731 | INFO  | Ended test case 'Too few arguments for UK'
20130409 15:06:56.732 | INFO  | Started test case 'Too many arguments'
20130409 15:06:56.733 | INFO  | Ended test case 'Too many arguments'
20130409 15:06:56.733 | INFO  | Started test case 'Invalid syntax in UK'
20130409 15:06:56.734 | INFO  | Ended test case 'Invalid syntax in UK'
20130409 15:06:56.735 | INFO  | Started test case 'Multiple Failures'
20130409 15:06:56.739 | INFO  | Ended test case 'Multiple Failures'
20130409 15:06:56.739 | INFO  | Started test case 'Import Library Keyword is Called'
20130409 15:06:56.740 | INFO  | Imported test library class 'String' from '/Users/asyrjasalo/eficode/robot/robotframework/src/robot/libraries/String.pyc'.
20130409 15:06:56.745 | INFO  | Imported library 'String' with arguments [ ] (version trunk 20130226, class type, global scope, 24 keywords)
20130409 15:06:56.746 | INFO  | Imported test library class 'ParameterLibrary' from '/Users/asyrjasalo/eficode/robot/robotframework/atest/testresources/testlibs/ParameterLibrary.pyc'.
20130409 15:06:56.747 | INFO  | Adding keyword 'host' to library 'ParameterLibrary' failed: Not a method or function
20130409 15:06:56.747 | INFO  | Adding keyword 'port' to library 'ParameterLibrary' failed: Not a method or function
20130409 15:06:56.747 | INFO  | Imported library 'ParameterLibrary' with arguments [ value | 42 ] (version &lt;unknown&gt;, class type, testcase scope, 1 keywords)
20130409 15:06:56.748 | INFO  | Ended test case 'Import Library Keyword is Called'
20130409 15:06:56.748 | INFO  | Ended test suite 'Dryrun'
20130409 15:06:56.749 | INFO  | Initializing namespace for test suite 'Dryrun &amp; More Tests.More Tests'
20130409 15:06:56.749 | INFO  | Imported test library class 'BuiltIn' from '/Users/asyrjasalo/eficode/robot/robotframework/src/robot/libraries/BuiltIn.pyc'.
20130409 15:06:56.750 | INFO  | Found test library 'BuiltIn' with arguments [ ] from cache
20130409 15:06:56.750 | INFO  | Imported test library class 'DeprecatedBuiltIn' from '/Users/asyrjasalo/eficode/robot/robotframework/src/robot/libraries/DeprecatedBuiltIn.pyc'.
20130409 15:06:56.750 | INFO  | Found test library 'DeprecatedBuiltIn' with arguments [ ] from cache
20130409 15:06:56.750 | INFO  | Imported test library class 'Reserved' from '/Users/asyrjasalo/eficode/robot/robotframework/src/robot/libraries/Reserved.pyc'.
20130409 15:06:56.750 | INFO  | Found test library 'Reserved' with arguments [ ] from cache
20130409 15:06:56.750 | INFO  | Imported test library module 'Easter' from '/Users/asyrjasalo/eficode/robot/robotframework/src/robot/libraries/Easter.pyc'.
20130409 15:06:56.751 | INFO  | Found test library 'Easter' with arguments [ ] from cache
20130409 15:06:56.751 | INFO  | Found resource file '/Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/resource.txt' from cache
20130409 15:06:56.752 | INFO  | Started test suite 'More Tests'
20130409 15:06:56.752 | INFO  | Started test case 'Some other test'
20130409 15:06:56.754 | INFO  | Ended test case 'Some other test'
20130409 15:06:56.755 | INFO  | Ended test suite 'More Tests'
20130409 15:06:56.755 | INFO  | Ended test suite 'Dryrun &amp; More Tests'
20130409 15:06:56.756 | INFO  | Tests execution ended. Statistics:
18 critical tests, 8 passed, 10 failed
18 tests total, 8 passed, 10 failed
20130409 15:06:56.757 | INFO  | Output: /Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests/output.xml
</msg>
<msg timestamp="20130409 15:06:57.006" level="INFO">${file} = 20130409 15:06:56.618 | INFO  | Robot Framework trunk 20130226 (Python 2.7.4 on darwin)
20130409 15:06:56.619 | INFO  | Arguments: /Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dry...</msg>
<status status="PASS" endtime="20130409 15:06:57.005" starttime="20130409 15:06:57.003"></status>
</kw>
<msg timestamp="20130409 15:06:57.007" level="INFO">${file} = 20130409 15:06:56.618 | INFO  | Robot Framework trunk 20130226 (Python 2.7.4 on darwin)
20130409 15:06:56.619 | INFO  | Arguments: /Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dry...</msg>
<status status="PASS" endtime="20130409 15:06:57.006" starttime="20130409 15:06:57.000"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Contain" timeout="">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${file}</arg>
<arg>${exp}</arg>
</arguments>
<status status="PASS" endtime="20130409 15:06:57.008" starttime="20130409 15:06:57.007"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:57.008" starttime="20130409 15:06:56.998"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:57.009" starttime="20130409 15:06:56.997"></status>
</kw>
<kw type="kw" name="atest_resource.Check Syslog Contains" timeout="">
<doc></doc>
<arguments>
<arg>Imported library 'ParameterLibrary' with arguments [ value | 42 ]</arg>
</arguments>
<kw type="kw" name="atest_resource.Check File Contains" timeout="">
<doc></doc>
<arguments>
<arg>${SYSLOG_FILE}</arg>
<arg>@{expected}</arg>
</arguments>
<kw type="kw" name="${exp} = BuiltIn.Catenate" timeout="">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>@{expected}</arg>
</arguments>
<msg timestamp="20130409 15:06:57.015" level="INFO">${exp} = Imported library 'ParameterLibrary' with arguments [ value | 42 ]</msg>
<status status="PASS" endtime="20130409 15:06:57.015" starttime="20130409 15:06:57.014"></status>
</kw>
<kw type="kw" name="${file} = atest_resource.Get Output File" timeout="">
<doc>Output encoding avare helper</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<kw type="kw" name="${encoding} = BuiltIn.Evaluate" timeout="">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>__import__('robot').utils.encoding.OUTPUT_ENCODING</arg>
</arguments>
<msg timestamp="20130409 15:06:57.018" level="INFO">${encoding} = UTF-8</msg>
<status status="PASS" endtime="20130409 15:06:57.018" starttime="20130409 15:06:57.017"></status>
</kw>
<kw type="kw" name="${encoding} = BuiltIn.Set Variable If" timeout="">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>r'${path}' in [r'${STDERR FILE}',r'${STDOUT FILE}']</arg>
<arg>${encoding}</arg>
<arg>UTF-8</arg>
</arguments>
<msg timestamp="20130409 15:06:57.020" level="INFO">${encoding} = UTF-8</msg>
<status status="PASS" endtime="20130409 15:06:57.020" starttime="20130409 15:06:57.018"></status>
</kw>
<kw type="kw" name="${file} = OperatingSystem.Log File" timeout="">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${path}</arg>
<arg>${encoding}</arg>
</arguments>
<msg timestamp="20130409 15:06:57.021" html="yes" level="INFO">Getting file '&lt;a href="file:///Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests/syslog.txt"&gt;/Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests/syslog.txt&lt;/a&gt;'</msg>
<msg timestamp="20130409 15:06:57.022" level="INFO">20130409 15:06:56.618 | INFO  | Robot Framework trunk 20130226 (Python 2.7.4 on darwin)
20130409 15:06:56.619 | INFO  | Arguments: /Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/dryrun.txt,/Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/more_tests.txt
20130409 15:06:56.619 | INFO  | Settings:
Critical: None
DebugFile: NONE
Doc: None
Exclude: []
Include: []
Listeners: []
Log: NONE
LogLevel: INFO
LogTitle: None
Metadata: []
MonitorColors: OFF
MonitorMarkers: OFF
MonitorWidth: 78
Name: None
NoStatusRC: False
NonCritical: None
Output: /Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests/output.xml
OutputDir: /Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests
RemoveKeywords: []
Report: NONE
ReportBackground: ('#99FF66', '#99FF66', '#FF3333')
ReportTitle: None
RunEmptySuite: False
RunMode: [u'dryrun']
SetTag: []
SplitLog: False
StdErr: None
StdOut: None
SuiteNames: []
SuiteStatLevel: -1
TagDoc: []
TagStatCombine: []
TagStatExclude: []
TagStatInclude: []
TagStatLink: []
TestNames: []
TimestampOutputs: False
VariableFiles: []
Variables: [u'interpreter:python']
VisibleLogLevel: INFO
WarnOnSkipped: False
XUnitFile: NONE
20130409 15:06:56.621 | INFO  | Parsing file '/Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/dryrun.txt'.
20130409 15:06:56.631 | INFO  | Parsing file '/Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/more_tests.txt'.
20130409 15:06:56.635 | INFO  | No debug file
20130409 15:06:56.635 | INFO  | Initializing namespace for test suite 'Dryrun &amp; More Tests'
20130409 15:06:56.637 | INFO  | Imported test library class 'BuiltIn' from '/Users/asyrjasalo/eficode/robot/robotframework/src/robot/libraries/BuiltIn.pyc'.
20130409 15:06:56.654 | INFO  | Imported library 'BuiltIn' with arguments [ ] (version trunk 20130226, class type, global scope, 88 keywords)
20130409 15:06:56.655 | INFO  | Imported test library class 'DeprecatedBuiltIn' from '/Users/asyrjasalo/eficode/robot/robotframework/src/robot/libraries/DeprecatedBuiltIn.pyc'.
20130409 15:06:56.663 | INFO  | Imported library 'DeprecatedBuiltIn' with arguments [ ] (version &lt;unknown&gt;, class type, global scope, 52 keywords)
20130409 15:06:56.663 | INFO  | Imported test library class 'Reserved' from '/Users/asyrjasalo/eficode/robot/robotframework/src/robot/libraries/Reserved.pyc'.
20130409 15:06:56.665 | INFO  | Imported library 'Reserved' with arguments [ ] (version &lt;unknown&gt;, dynamic type, global scope, 10 keywords)
20130409 15:06:56.665 | INFO  | Imported test library module 'Easter' from '/Users/asyrjasalo/eficode/robot/robotframework/src/robot/libraries/Easter.pyc'.
20130409 15:06:56.665 | INFO  | Imported library 'Easter' with arguments [ ] (version &lt;unknown&gt;, module type, global scope, 1 keywords)
20130409 15:06:56.666 | INFO  | Started test suite 'Dryrun &amp; More Tests'
20130409 15:06:56.666 | INFO  | Initializing namespace for test suite 'Dryrun &amp; More Tests.Dryrun'
20130409 15:06:56.667 | INFO  | Imported test library class 'BuiltIn' from '/Users/asyrjasalo/eficode/robot/robotframework/src/robot/libraries/BuiltIn.pyc'.
20130409 15:06:56.667 | INFO  | Found test library 'BuiltIn' with arguments [ ] from cache
20130409 15:06:56.667 | INFO  | Imported test library class 'DeprecatedBuiltIn' from '/Users/asyrjasalo/eficode/robot/robotframework/src/robot/libraries/DeprecatedBuiltIn.pyc'.
20130409 15:06:56.667 | INFO  | Found test library 'DeprecatedBuiltIn' with arguments [ ] from cache
20130409 15:06:56.667 | INFO  | Imported test library class 'Reserved' from '/Users/asyrjasalo/eficode/robot/robotframework/src/robot/libraries/Reserved.pyc'.
20130409 15:06:56.668 | INFO  | Found test library 'Reserved' with arguments [ ] from cache
20130409 15:06:56.668 | INFO  | Imported test library module 'Easter' from '/Users/asyrjasalo/eficode/robot/robotframework/src/robot/libraries/Easter.pyc'.
20130409 15:06:56.668 | INFO  | Found test library 'Easter' with arguments [ ] from cache
20130409 15:06:56.673 | INFO  | Imported test library class 'OperatingSystem' from '/Users/asyrjasalo/eficode/robot/robotframework/src/robot/libraries/OperatingSystem.pyc'.
20130409 15:06:56.682 | INFO  | Imported library 'OperatingSystem' with arguments [ ] (version trunk 20130226, class type, global scope, 57 keywords)
20130409 15:06:56.683 | INFO  | Imported test library class 'DeprecatedOperatingSystem' from '/Users/asyrjasalo/eficode/robot/robotframework/src/robot/libraries/DeprecatedOperatingSystem.pyc'.
20130409 15:06:56.686 | INFO  | Imported library 'DeprecatedOperatingSystem' with arguments [ ] (version &lt;unknown&gt;, class type, global scope, 24 keywords)
20130409 15:06:56.687 | INFO  | Importing variable file '/Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/vars.py' with args []
20130409 15:06:56.687 | INFO  | Imported variable file module 'vars' from '/Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/vars.py'.
20130409 15:06:56.687 | INFO  | Parsing file '/Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/resource.txt'.
20130409 15:06:56.689 | INFO  | Imported resource file '/Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/resource.txt' (4 keywords).
20130409 15:06:56.693 | ERROR | Error in file '/Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/dryrun.txt' in table 'Settings': Importing test library 'DoesNotExist' failed: ImportError: No module named DoesNotExist
Traceback (most recent call last):
  None
PYTHONPATH:
  /Users/asyrjasalo/eficode/robot/robotframework/atest/testresources/testlibs
  /Users/asyrjasalo/eficode/robot/robotframework/atest/testresources/listeners
  /Users/asyrjasalo/eficode/robot/robotframework/src/robot/libraries
  /Users/asyrjasalo/eficode/robot/robotframework/src
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/pip-1.3.1-py2.7.egg
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/distribute-0.6.36-py2.7.egg
  /usr/local/lib/python2.7/site-packages/pip-1.3.1-py2.7.egg
  /usr/local/lib/python2.7/site-packages/distribute-0.6.36-py2.7.egg
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python27.zip
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-darwin
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-mac
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-mac/lib-scriptpackages
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-tk
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-old
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-dynload
  /Library/Python/2.7/site-packages
  /usr/local/lib/wxPython-unicode-2.8.12.1/lib/python2.7
  /usr/local/lib/python2.7/site-packages
  .
  /Users/asyrjasalo/eficode/robot/robotframework/atest
20130409 15:06:56.694 | ERROR | Error in file '/Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/dryrun.txt' in table 'Settings': Variable file 'wrong_path.py' does not exist.
20130409 15:06:56.695 | ERROR | Error in file '/Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/dryrun.txt' in table 'Settings': Resource file 'NonExisting.tsv' does not exist.
20130409 15:06:56.696 | INFO  | Started test suite 'Dryrun'
20130409 15:06:56.696 | INFO  | Started test case 'Passing keywords'
20130409 15:06:56.698 | INFO  | Ended test case 'Passing keywords'
20130409 15:06:56.699 | INFO  | Started test case 'Keywords with embedded arguments'
20130409 15:06:56.701 | INFO  | Ended test case 'Keywords with embedded arguments'
20130409 15:06:56.702 | INFO  | Started test case 'Keywords that would fail'
20130409 15:06:56.704 | INFO  | Ended test case 'Keywords that would fail'
20130409 15:06:56.705 | INFO  | Started test case 'Scalar variables are not checked in keyword arguments'
20130409 15:06:56.706 | INFO  | Ended test case 'Scalar variables are not checked in keyword arguments'
20130409 15:06:56.707 | INFO  | Started test case 'List variables are not checked in keyword arguments'
20130409 15:06:56.710 | INFO  | Ended test case 'List variables are not checked in keyword arguments'
20130409 15:06:56.711 | INFO  | Started test case 'Variables are not checked in when arguments are embedded'
20130409 15:06:56.713 | INFO  | Ended test case 'Variables are not checked in when arguments are embedded'
20130409 15:06:56.714 | INFO  | Started test case 'User keyword return value'
20130409 15:06:56.715 | INFO  | Ended test case 'User keyword return value'
20130409 15:06:56.716 | INFO  | Started test case 'Test Setup And Teardown'
20130409 15:06:56.717 | INFO  | Ended test case 'Test Setup And Teardown'
20130409 15:06:56.718 | INFO  | Started test case 'Keyword Teardown'
20130409 15:06:56.720 | INFO  | Ended test case 'Keyword Teardown'
20130409 15:06:56.721 | INFO  | Started test case 'For Loops'
20130409 15:06:56.726 | INFO  | Ended test case 'For Loops'
20130409 15:06:56.727 | INFO  | Started test case 'Non-existing keyword name'
20130409 15:06:56.728 | INFO  | Ended test case 'Non-existing keyword name'
20130409 15:06:56.728 | INFO  | Started test case 'Too few arguments'
20130409 15:06:56.729 | INFO  | Ended test case 'Too few arguments'
20130409 15:06:56.730 | INFO  | Started test case 'Too few arguments for UK'
20130409 15:06:56.731 | INFO  | Ended test case 'Too few arguments for UK'
20130409 15:06:56.732 | INFO  | Started test case 'Too many arguments'
20130409 15:06:56.733 | INFO  | Ended test case 'Too many arguments'
20130409 15:06:56.733 | INFO  | Started test case 'Invalid syntax in UK'
20130409 15:06:56.734 | INFO  | Ended test case 'Invalid syntax in UK'
20130409 15:06:56.735 | INFO  | Started test case 'Multiple Failures'
20130409 15:06:56.739 | INFO  | Ended test case 'Multiple Failures'
20130409 15:06:56.739 | INFO  | Started test case 'Import Library Keyword is Called'
20130409 15:06:56.740 | INFO  | Imported test library class 'String' from '/Users/asyrjasalo/eficode/robot/robotframework/src/robot/libraries/String.pyc'.
20130409 15:06:56.745 | INFO  | Imported library 'String' with arguments [ ] (version trunk 20130226, class type, global scope, 24 keywords)
20130409 15:06:56.746 | INFO  | Imported test library class 'ParameterLibrary' from '/Users/asyrjasalo/eficode/robot/robotframework/atest/testresources/testlibs/ParameterLibrary.pyc'.
20130409 15:06:56.747 | INFO  | Adding keyword 'host' to library 'ParameterLibrary' failed: Not a method or function
20130409 15:06:56.747 | INFO  | Adding keyword 'port' to library 'ParameterLibrary' failed: Not a method or function
20130409 15:06:56.747 | INFO  | Imported library 'ParameterLibrary' with arguments [ value | 42 ] (version &lt;unknown&gt;, class type, testcase scope, 1 keywords)
20130409 15:06:56.748 | INFO  | Ended test case 'Import Library Keyword is Called'
20130409 15:06:56.748 | INFO  | Ended test suite 'Dryrun'
20130409 15:06:56.749 | INFO  | Initializing namespace for test suite 'Dryrun &amp; More Tests.More Tests'
20130409 15:06:56.749 | INFO  | Imported test library class 'BuiltIn' from '/Users/asyrjasalo/eficode/robot/robotframework/src/robot/libraries/BuiltIn.pyc'.
20130409 15:06:56.750 | INFO  | Found test library 'BuiltIn' with arguments [ ] from cache
20130409 15:06:56.750 | INFO  | Imported test library class 'DeprecatedBuiltIn' from '/Users/asyrjasalo/eficode/robot/robotframework/src/robot/libraries/DeprecatedBuiltIn.pyc'.
20130409 15:06:56.750 | INFO  | Found test library 'DeprecatedBuiltIn' with arguments [ ] from cache
20130409 15:06:56.750 | INFO  | Imported test library class 'Reserved' from '/Users/asyrjasalo/eficode/robot/robotframework/src/robot/libraries/Reserved.pyc'.
20130409 15:06:56.750 | INFO  | Found test library 'Reserved' with arguments [ ] from cache
20130409 15:06:56.750 | INFO  | Imported test library module 'Easter' from '/Users/asyrjasalo/eficode/robot/robotframework/src/robot/libraries/Easter.pyc'.
20130409 15:06:56.751 | INFO  | Found test library 'Easter' with arguments [ ] from cache
20130409 15:06:56.751 | INFO  | Found resource file '/Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/resource.txt' from cache
20130409 15:06:56.752 | INFO  | Started test suite 'More Tests'
20130409 15:06:56.752 | INFO  | Started test case 'Some other test'
20130409 15:06:56.754 | INFO  | Ended test case 'Some other test'
20130409 15:06:56.755 | INFO  | Ended test suite 'More Tests'
20130409 15:06:56.755 | INFO  | Ended test suite 'Dryrun &amp; More Tests'
20130409 15:06:56.756 | INFO  | Tests execution ended. Statistics:
18 critical tests, 8 passed, 10 failed
18 tests total, 8 passed, 10 failed
20130409 15:06:56.757 | INFO  | Output: /Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests/output.xml
</msg>
<msg timestamp="20130409 15:06:57.023" level="INFO">${file} = 20130409 15:06:56.618 | INFO  | Robot Framework trunk 20130226 (Python 2.7.4 on darwin)
20130409 15:06:56.619 | INFO  | Arguments: /Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dry...</msg>
<status status="PASS" endtime="20130409 15:06:57.023" starttime="20130409 15:06:57.021"></status>
</kw>
<msg timestamp="20130409 15:06:57.024" level="INFO">${file} = 20130409 15:06:56.618 | INFO  | Robot Framework trunk 20130226 (Python 2.7.4 on darwin)
20130409 15:06:56.619 | INFO  | Arguments: /Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dry...</msg>
<status status="PASS" endtime="20130409 15:06:57.023" starttime="20130409 15:06:57.015"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Contain" timeout="">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${file}</arg>
<arg>${exp}</arg>
</arguments>
<status status="PASS" endtime="20130409 15:06:57.025" starttime="20130409 15:06:57.024"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:57.025" starttime="20130409 15:06:57.012"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:57.025" starttime="20130409 15:06:57.010"></status>
</kw>
<doc></doc>
<tags>
<tag>jybot</tag>
<tag>pybot</tag>
<tag>regression</tag>
</tags>
<status status="PASS" endtime="20130409 15:06:57.026" critical="yes" starttime="20130409 15:06:56.993"></status>
</test>
<doc></doc>
<metadata>
</metadata>
<status status="PASS" endtime="20130409 15:06:57.026" starttime="20130409 15:06:56.339"></status>
</suite>
<suite source="/Users/asyrjasalo/eficode/robot/robotframework/atest/robot/cli/dryrun/run_keyword_variants.txt" id="s1-s2" name="Run Keyword Variants">
<kw type="setup" name="atest_resource.Run Tests" timeout="">
<doc></doc>
<arguments>
<arg>--runmode dryrun</arg>
<arg>cli/dryrun/run_keyword_variants.txt</arg>
</arguments>
<kw type="kw" name="atest_resource.Run Tests Helper" timeout="">
<doc></doc>
<arguments>
<arg>${options}</arg>
<arg>@{data list}</arg>
</arguments>
<kw type="kw" name="${data string} = atest_resource.Set Variables And Get Datasources" timeout="">
<doc></doc>
<arguments>
<arg>@{data list}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Suite Variable" timeout="">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>$SUITE</arg>
<arg>${NONE}</arg>
</arguments>
<msg timestamp="20130409 15:06:57.044" level="INFO">${SUITE} = None</msg>
<status status="PASS" endtime="20130409 15:06:57.044" starttime="20130409 15:06:57.043"></status>
</kw>
<kw type="kw" name="${name} = TestHelper.Get Output Name" timeout="">
<doc></doc>
<arguments>
<arg>@{data list}</arg>
</arguments>
<msg timestamp="20130409 15:06:57.045" level="INFO">${name} = run_keyword_variants</msg>
<status status="PASS" endtime="20130409 15:06:57.045" starttime="20130409 15:06:57.044"></status>
</kw>
<kw type="kw" name="atest_resource.Set Variables" timeout="">
<doc></doc>
<arguments>
<arg>${name}</arg>
</arguments>
<kw type="kw" name="${OUTDIR} = OperatingSystem.Join Path" timeout="">
<doc>Joins the given path part(s) to the given base path.</doc>
<arguments>
<arg>${OUTPUTDIR}</arg>
<arg>output</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20130409 15:06:57.047" level="INFO">${OUTDIR} = /Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants</msg>
<status status="PASS" endtime="20130409 15:06:57.047" starttime="20130409 15:06:57.046"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Global Variable" timeout="">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>$OUTDIR</arg>
<arg>${OUTDIR.encode('ascii', 'ignore').replace('?', '_') .replace('*', '_')}</arg>
</arguments>
<msg timestamp="20130409 15:06:57.048" level="INFO">${OUTDIR} = /Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants</msg>
<status status="PASS" endtime="20130409 15:06:57.048" starttime="20130409 15:06:57.047"></status>
</kw>
<kw type="kw" name="OperatingSystem.Create Directory" timeout="">
<doc>Creates the specified directory.</doc>
<arguments>
<arg>${OUTDIR}</arg>
</arguments>
<msg timestamp="20130409 15:06:57.049" html="yes" level="INFO">Created directory '&lt;a href="file:///Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants"&gt;/Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants&lt;/a&gt;'</msg>
<status status="PASS" endtime="20130409 15:06:57.049" starttime="20130409 15:06:57.048"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Suite Variable" timeout="">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>$OUTFILE</arg>
<arg>${OUTDIR}${/}output.xml</arg>
</arguments>
<msg timestamp="20130409 15:06:57.050" level="INFO">${OUTFILE} = /Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants/output.xml</msg>
<status status="PASS" endtime="20130409 15:06:57.050" starttime="20130409 15:06:57.049"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Suite Variable" timeout="">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>$STDOUT_FILE</arg>
<arg>${OUTDIR}${/}stdout.txt</arg>
</arguments>
<msg timestamp="20130409 15:06:57.051" level="INFO">${STDOUT_FILE} = /Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants/stdout.txt</msg>
<status status="PASS" endtime="20130409 15:06:57.051" starttime="20130409 15:06:57.050"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Suite Variable" timeout="">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>$STDERR_FILE</arg>
<arg>${OUTDIR}${/}stderr.txt</arg>
</arguments>
<msg timestamp="20130409 15:06:57.052" level="INFO">${STDERR_FILE} = /Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants/stderr.txt</msg>
<status status="PASS" endtime="20130409 15:06:57.052" starttime="20130409 15:06:57.051"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Suite Variable" timeout="">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>$SYSLOG_FILE</arg>
<arg>${OUTDIR}${/}syslog.txt</arg>
</arguments>
<msg timestamp="20130409 15:06:57.052" level="INFO">${SYSLOG_FILE} = /Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants/syslog.txt</msg>
<status status="PASS" endtime="20130409 15:06:57.053" starttime="20130409 15:06:57.052"></status>
</kw>
<kw type="kw" name="OperatingSystem.Set Environment Variable" timeout="">
<doc>Sets an environment variable to a specified value.</doc>
<arguments>
<arg>ROBOT_SYSLOG_FILE</arg>
<arg>${SYSLOG_FILE}</arg>
</arguments>
<msg timestamp="20130409 15:06:57.053" level="INFO">Environment variable 'ROBOT_SYSLOG_FILE' set to value '/Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants/syslog.txt'</msg>
<status status="PASS" endtime="20130409 15:06:57.053" starttime="20130409 15:06:57.053"></status>
</kw>
<kw type="kw" name="atest_resource.Set Runners" timeout="">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${robot} = OperatingSystem.Join Path" timeout="">
<doc>Joins the given path part(s) to the given base path.</doc>
<arguments>
<arg>${ROBOTPATH}</arg>
<arg>run.py</arg>
</arguments>
<msg timestamp="20130409 15:06:57.055" level="INFO">${robot} = /Users/asyrjasalo/eficode/robot/robotframework/src/robot/run.py</msg>
<status status="PASS" endtime="20130409 15:06:57.055" starttime="20130409 15:06:57.055"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Suite Variable" timeout="">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>$ROBOT</arg>
<arg>${INTERPRETER} ${robot}</arg>
</arguments>
<msg timestamp="20130409 15:06:57.056" level="INFO">${ROBOT} = python /Users/asyrjasalo/eficode/robot/robotframework/src/robot/run.py</msg>
<status status="PASS" endtime="20130409 15:06:57.056" starttime="20130409 15:06:57.055"></status>
</kw>
<kw type="kw" name="${rebot} = OperatingSystem.Join Path" timeout="">
<doc>Joins the given path part(s) to the given base path.</doc>
<arguments>
<arg>${ROBOTPATH}</arg>
<arg>rebot.py</arg>
</arguments>
<msg timestamp="20130409 15:06:57.056" level="INFO">${rebot} = /Users/asyrjasalo/eficode/robot/robotframework/src/robot/rebot.py</msg>
<status status="PASS" endtime="20130409 15:06:57.056" starttime="20130409 15:06:57.056"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Suite Variable" timeout="">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>$REBOT</arg>
<arg>${INTERPRETER} ${rebot}</arg>
</arguments>
<msg timestamp="20130409 15:06:57.057" level="INFO">${REBOT} = python /Users/asyrjasalo/eficode/robot/robotframework/src/robot/rebot.py</msg>
<status status="PASS" endtime="20130409 15:06:57.057" starttime="20130409 15:06:57.057"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:57.057" starttime="20130409 15:06:57.054"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:57.057" starttime="20130409 15:06:57.045"></status>
</kw>
<kw type="kw" name="@{data list} = OperatingSystem.Join Paths" timeout="">
<doc>Joins given paths with base and returns resulted paths.</doc>
<arguments>
<arg>${DATADIR}</arg>
<arg>@{data list}</arg>
</arguments>
<msg timestamp="20130409 15:06:57.058" level="INFO">@{data list} = [ /Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/run_keyword_variants.txt ]</msg>
<status status="PASS" endtime="20130409 15:06:57.058" starttime="20130409 15:06:57.058"></status>
</kw>
<kw type="kw" name="${data string} = BuiltIn.Catenate" timeout="">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>@{data list}</arg>
</arguments>
<msg timestamp="20130409 15:06:57.059" level="INFO">${data string} = /Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/run_keyword_variants.txt</msg>
<status status="PASS" endtime="20130409 15:06:57.059" starttime="20130409 15:06:57.058"></status>
</kw>
<msg timestamp="20130409 15:06:57.059" level="INFO">${data string} = /Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/run_keyword_variants.txt</msg>
<status status="PASS" endtime="20130409 15:06:57.059" starttime="20130409 15:06:57.042"></status>
</kw>
<kw type="kw" name="${options} = BuiltIn.Catenate" timeout="">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>--MonitorMarkers OFF</arg>
<arg>${user options}</arg>
<arg>--variable interpreter:${INTERPRETER}</arg>
<arg>--pythonpath ${LIBPATH1}</arg>
<arg>--pythonpath ${LIBPATH2}</arg>
</arguments>
<msg timestamp="20130409 15:06:57.060" level="INFO">${options} = --MonitorMarkers OFF --runmode dryrun --variable interpreter:python --pythonpath /Users/asyrjasalo/eficode/robot/robotframework/atest/resources/../testresources/testlibs --pythonpath /Users/asyrjasalo...</msg>
<status status="PASS" endtime="20130409 15:06:57.060" starttime="20130409 15:06:57.060"></status>
</kw>
<kw type="kw" name="atest_resource.Run Helper" timeout="">
<doc></doc>
<arguments>
<arg>${ROBOT}</arg>
<arg>${options}</arg>
<arg>${data string}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Remove Files" timeout="">
<doc>Uses `Remove File` to remove multiple files one-by-one.</doc>
<arguments>
<arg>${OUTFILE}</arg>
<arg>${OUTDIR}/*.xml</arg>
<arg>${OUTDIR}/*.html</arg>
</arguments>
<msg timestamp="20130409 15:06:57.063" html="yes" level="INFO">File '&lt;a href="file:///Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants/output.xml"&gt;/Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants/output.xml&lt;/a&gt;' does not exist</msg>
<msg timestamp="20130409 15:06:57.063" html="yes" level="INFO">File '&lt;a href="file:///Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants/*.xml"&gt;/Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants/*.xml&lt;/a&gt;' does not exist</msg>
<msg timestamp="20130409 15:06:57.063" html="yes" level="INFO">File '&lt;a href="file:///Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants/*.html"&gt;/Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants/*.html&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20130409 15:06:57.063" starttime="20130409 15:06:57.062"></status>
</kw>
<kw type="kw" name="${cmd} = BuiltIn.Catenate" timeout="">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>${runner}</arg>
<arg>--monitorcolors OFF</arg>
<arg>--outputdir ${OUTDIR}</arg>
<arg>--output ${OUTFILE}</arg>
<arg>--report NONE</arg>
<arg>--log NONE</arg>
<arg>${options}</arg>
<arg>${data string}</arg>
<arg>1&gt;${STDOUTFILE}</arg>
<arg>2&gt;${STDERRFILE}</arg>
</arguments>
<msg timestamp="20130409 15:06:57.064" level="INFO">${cmd} = python /Users/asyrjasalo/eficode/robot/robotframework/src/robot/run.py --monitorcolors OFF --outputdir /Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants -...</msg>
<status status="PASS" endtime="20130409 15:06:57.064" starttime="20130409 15:06:57.064"></status>
</kw>
<kw type="kw" name="${rc} = OperatingSystem.Run And Return Rc" timeout="">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>${cmd}</arg>
</arguments>
<msg timestamp="20130409 15:06:57.065" level="INFO">Running command 'python /Users/asyrjasalo/eficode/robot/robotframework/src/robot/run.py --monitorcolors OFF --outputdir /Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants --output /Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants/output.xml --report NONE --log NONE --MonitorMarkers OFF --runmode dryrun --variable interpreter:python --pythonpath /Users/asyrjasalo/eficode/robot/robotframework/atest/resources/../testresources/testlibs --pythonpath /Users/asyrjasalo/eficode/robot/robotframework/atest/resources/../testresources/listeners /Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/run_keyword_variants.txt 1&gt;/Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants/stdout.txt 2&gt;/Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants/stderr.txt'</msg>
<msg timestamp="20130409 15:06:57.425" level="INFO">${rc} = 17</msg>
<status status="PASS" endtime="20130409 15:06:57.425" starttime="20130409 15:06:57.065"></status>
</kw>
<kw type="kw" name="BuiltIn.Log" timeout="">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>&lt;a href="file://${OUTDIR}"&gt;${OUTDIR}&lt;/a&gt;</arg>
<arg>HTML</arg>
</arguments>
<msg timestamp="20130409 15:06:57.426" html="yes" level="INFO">&lt;a href="file:///Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants"&gt;/Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants&lt;/a&gt;</msg>
<status status="PASS" endtime="20130409 15:06:57.426" starttime="20130409 15:06:57.426"></status>
</kw>
<kw type="kw" name="BuiltIn.Log" timeout="">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>&lt;a href="file://${OUTFILE}"&gt;${OUTFILE}&lt;/a&gt;</arg>
<arg>HTML</arg>
</arguments>
<msg timestamp="20130409 15:06:57.427" html="yes" level="INFO">&lt;a href="file:///Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants/output.xml"&gt;/Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants/output.xml&lt;/a&gt;</msg>
<status status="PASS" endtime="20130409 15:06:57.427" starttime="20130409 15:06:57.426"></status>
</kw>
<kw type="kw" name="BuiltIn.Log" timeout="">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>&lt;a href="file://${STDOUTFILE}"&gt;${STDOUTFILE}&lt;/a&gt;</arg>
<arg>HTML</arg>
</arguments>
<msg timestamp="20130409 15:06:57.427" html="yes" level="INFO">&lt;a href="file:///Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants/stdout.txt"&gt;/Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants/stdout.txt&lt;/a&gt;</msg>
<status status="PASS" endtime="20130409 15:06:57.427" starttime="20130409 15:06:57.427"></status>
</kw>
<kw type="kw" name="BuiltIn.Log" timeout="">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>&lt;a href="file://${STDERRFILE}"&gt;${STDERRFILE}&lt;/a&gt;</arg>
<arg>HTML</arg>
</arguments>
<msg timestamp="20130409 15:06:57.428" html="yes" level="INFO">&lt;a href="file:///Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants/stderr.txt"&gt;/Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants/stderr.txt&lt;/a&gt;</msg>
<status status="PASS" endtime="20130409 15:06:57.428" starttime="20130409 15:06:57.428"></status>
</kw>
<kw type="kw" name="BuiltIn.Log" timeout="">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>&lt;a href="file://${SYSLOGFILE}"&gt;${SYSLOGFILE}&lt;/a&gt;</arg>
<arg>HTML</arg>
</arguments>
<msg timestamp="20130409 15:06:57.429" html="yes" level="INFO">&lt;a href="file:///Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants/syslog.txt"&gt;/Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants/syslog.txt&lt;/a&gt;</msg>
<status status="PASS" endtime="20130409 15:06:57.429" starttime="20130409 15:06:57.428"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:57.429" starttime="20130409 15:06:57.061"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:57.429" starttime="20130409 15:06:57.041"></status>
</kw>
<kw type="kw" name="TestCheckerLibrary.Process Output" timeout="">
<doc></doc>
<arguments>
<arg>${OUTFILE}</arg>
</arguments>
<msg timestamp="20130409 15:06:57.447" level="INFO">${SUITE} = Run Keyword Variants</msg>
<msg timestamp="20130409 15:06:57.448" level="INFO">${STATISTICS} = &lt;robot.model.statistics.Statistics object at 0x105156650&gt;</msg>
<msg timestamp="20130409 15:06:57.448" level="INFO">${ERRORS} = &lt;robot.result.executionerrors.ExecutionErrors object at 0x105151a50&gt;</msg>
<msg timestamp="20130409 15:06:57.448" level="INFO">Processing output '/Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants/output.xml'</msg>
<status status="PASS" endtime="20130409 15:06:57.448" starttime="20130409 15:06:57.429"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:57.449" starttime="20130409 15:06:57.040"></status>
</kw>
<test id="s1-s2-t1" timeout="" name="Run Keyword With Keyword with Invalid Number of Arguments">
<kw type="kw" name="atest_resource.Check Test Case" timeout="">
<doc></doc>
<arguments>
<arg>${TESTNAME}</arg>
</arguments>
<kw type="kw" name="${test} = TestCheckerLibrary.Get Test From Suite" timeout="">
<doc></doc>
<arguments>
<arg>${SUITE}</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20130409 15:06:57.452" level="INFO">${test} = Run Keyword With Keyword with Invalid Number of Arguments</msg>
<status status="PASS" endtime="20130409 15:06:57.452" starttime="20130409 15:06:57.451"></status>
</kw>
<kw type="kw" name="TestCheckerLibrary.Check Test Status" timeout="">
<doc>Verifies that test's status and message are as expected.</doc>
<arguments>
<arg>${test}</arg>
<arg>${status}</arg>
<arg>${message}</arg>
</arguments>
<status status="PASS" endtime="20130409 15:06:57.453" starttime="20130409 15:06:57.452"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:57.453" starttime="20130409 15:06:57.450"></status>
</kw>
<doc></doc>
<tags>
<tag>jybot</tag>
<tag>pybot</tag>
<tag>regression</tag>
</tags>
<status status="PASS" endtime="20130409 15:06:57.453" critical="yes" starttime="20130409 15:06:57.449"></status>
</test>
<test id="s1-s2-t2" timeout="" name="Run Keyword With Missing Keyword">
<kw type="kw" name="atest_resource.Check Test Case" timeout="">
<doc></doc>
<arguments>
<arg>${TESTNAME}</arg>
</arguments>
<kw type="kw" name="${test} = TestCheckerLibrary.Get Test From Suite" timeout="">
<doc></doc>
<arguments>
<arg>${SUITE}</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20130409 15:06:57.457" level="INFO">${test} = Run Keyword With Missing Keyword</msg>
<status status="PASS" endtime="20130409 15:06:57.456" starttime="20130409 15:06:57.456"></status>
</kw>
<kw type="kw" name="TestCheckerLibrary.Check Test Status" timeout="">
<doc>Verifies that test's status and message are as expected.</doc>
<arguments>
<arg>${test}</arg>
<arg>${status}</arg>
<arg>${message}</arg>
</arguments>
<status status="PASS" endtime="20130409 15:06:57.457" starttime="20130409 15:06:57.457"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:57.457" starttime="20130409 15:06:57.454"></status>
</kw>
<doc></doc>
<tags>
<tag>jybot</tag>
<tag>pybot</tag>
<tag>regression</tag>
</tags>
<status status="PASS" endtime="20130409 15:06:57.458" critical="yes" starttime="20130409 15:06:57.453"></status>
</test>
<test id="s1-s2-t3" timeout="" name="Run Keyword With Variable In Keyword Name">
<kw type="kw" name="atest_resource.Check Test Case" timeout="">
<doc></doc>
<arguments>
<arg>${TESTNAME}</arg>
</arguments>
<kw type="kw" name="${test} = TestCheckerLibrary.Get Test From Suite" timeout="">
<doc></doc>
<arguments>
<arg>${SUITE}</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20130409 15:06:57.461" level="INFO">${test} = Run Keyword With Variable In Keyword Name</msg>
<status status="PASS" endtime="20130409 15:06:57.461" starttime="20130409 15:06:57.460"></status>
</kw>
<kw type="kw" name="TestCheckerLibrary.Check Test Status" timeout="">
<doc>Verifies that test's status and message are as expected.</doc>
<arguments>
<arg>${test}</arg>
<arg>${status}</arg>
<arg>${message}</arg>
</arguments>
<status status="PASS" endtime="20130409 15:06:57.462" starttime="20130409 15:06:57.461"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:57.462" starttime="20130409 15:06:57.459"></status>
</kw>
<doc></doc>
<tags>
<tag>jybot</tag>
<tag>pybot</tag>
<tag>regression</tag>
</tags>
<status status="PASS" endtime="20130409 15:06:57.462" critical="yes" starttime="20130409 15:06:57.458"></status>
</test>
<test id="s1-s2-t4" timeout="" name="Run Keyword With UK">
<kw type="kw" name="atest_resource.Check Test Case" timeout="">
<doc></doc>
<arguments>
<arg>${TESTNAME}</arg>
</arguments>
<kw type="kw" name="${test} = TestCheckerLibrary.Get Test From Suite" timeout="">
<doc></doc>
<arguments>
<arg>${SUITE}</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20130409 15:06:57.466" level="INFO">${test} = Run Keyword With UK</msg>
<status status="PASS" endtime="20130409 15:06:57.466" starttime="20130409 15:06:57.465"></status>
</kw>
<kw type="kw" name="TestCheckerLibrary.Check Test Status" timeout="">
<doc>Verifies that test's status and message are as expected.</doc>
<arguments>
<arg>${test}</arg>
<arg>${status}</arg>
<arg>${message}</arg>
</arguments>
<status status="PASS" endtime="20130409 15:06:57.466" starttime="20130409 15:06:57.466"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:57.467" starttime="20130409 15:06:57.464"></status>
</kw>
<doc></doc>
<tags>
<tag>jybot</tag>
<tag>pybot</tag>
<tag>regression</tag>
</tags>
<status status="PASS" endtime="20130409 15:06:57.467" critical="yes" starttime="20130409 15:06:57.463"></status>
</test>
<test id="s1-s2-t5" timeout="" name="Run Keyword With Failing UK">
<kw type="kw" name="atest_resource.Check Test Case" timeout="">
<doc></doc>
<arguments>
<arg>${TESTNAME}</arg>
</arguments>
<kw type="kw" name="${test} = TestCheckerLibrary.Get Test From Suite" timeout="">
<doc></doc>
<arguments>
<arg>${SUITE}</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20130409 15:06:57.470" level="INFO">${test} = Run Keyword With Failing UK</msg>
<status status="PASS" endtime="20130409 15:06:57.470" starttime="20130409 15:06:57.469"></status>
</kw>
<kw type="kw" name="TestCheckerLibrary.Check Test Status" timeout="">
<doc>Verifies that test's status and message are as expected.</doc>
<arguments>
<arg>${test}</arg>
<arg>${status}</arg>
<arg>${message}</arg>
</arguments>
<status status="PASS" endtime="20130409 15:06:57.471" starttime="20130409 15:06:57.470"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:57.471" starttime="20130409 15:06:57.468"></status>
</kw>
<doc></doc>
<tags>
<tag>jybot</tag>
<tag>pybot</tag>
<tag>regression</tag>
</tags>
<status status="PASS" endtime="20130409 15:06:57.471" critical="yes" starttime="20130409 15:06:57.467"></status>
</test>
<test id="s1-s2-t6" timeout="" name="Comment">
<kw type="kw" name="atest_resource.Check Test Case" timeout="">
<doc></doc>
<arguments>
<arg>${TESTNAME}</arg>
</arguments>
<kw type="kw" name="${test} = TestCheckerLibrary.Get Test From Suite" timeout="">
<doc></doc>
<arguments>
<arg>${SUITE}</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20130409 15:06:57.474" level="INFO">${test} = Comment</msg>
<status status="PASS" endtime="20130409 15:06:57.474" starttime="20130409 15:06:57.473"></status>
</kw>
<kw type="kw" name="TestCheckerLibrary.Check Test Status" timeout="">
<doc>Verifies that test's status and message are as expected.</doc>
<arguments>
<arg>${test}</arg>
<arg>${status}</arg>
<arg>${message}</arg>
</arguments>
<status status="PASS" endtime="20130409 15:06:57.475" starttime="20130409 15:06:57.475"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:57.475" starttime="20130409 15:06:57.472"></status>
</kw>
<doc></doc>
<tags>
<tag>jybot</tag>
<tag>pybot</tag>
<tag>regression</tag>
</tags>
<status status="PASS" endtime="20130409 15:06:57.475" critical="yes" starttime="20130409 15:06:57.471"></status>
</test>
<test id="s1-s2-t7" timeout="" name="Set Test/Suite/Global Variable">
<kw type="kw" name="atest_resource.Check Test Case" timeout="">
<doc></doc>
<arguments>
<arg>${TESTNAME}</arg>
</arguments>
<kw type="kw" name="${test} = TestCheckerLibrary.Get Test From Suite" timeout="">
<doc></doc>
<arguments>
<arg>${SUITE}</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20130409 15:06:57.479" level="INFO">${test} = Set Test/Suite/Global Variable</msg>
<status status="PASS" endtime="20130409 15:06:57.478" starttime="20130409 15:06:57.478"></status>
</kw>
<kw type="kw" name="TestCheckerLibrary.Check Test Status" timeout="">
<doc>Verifies that test's status and message are as expected.</doc>
<arguments>
<arg>${test}</arg>
<arg>${status}</arg>
<arg>${message}</arg>
</arguments>
<status status="PASS" endtime="20130409 15:06:57.479" starttime="20130409 15:06:57.479"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:57.480" starttime="20130409 15:06:57.476"></status>
</kw>
<doc></doc>
<tags>
<tag>jybot</tag>
<tag>pybot</tag>
<tag>regression</tag>
</tags>
<status status="PASS" endtime="20130409 15:06:57.480" critical="yes" starttime="20130409 15:06:57.476"></status>
</test>
<test id="s1-s2-t8" timeout="" name="Variable Should (Not) Exist">
<kw type="kw" name="atest_resource.Check Test Case" timeout="">
<doc></doc>
<arguments>
<arg>${TESTNAME}</arg>
</arguments>
<kw type="kw" name="${test} = TestCheckerLibrary.Get Test From Suite" timeout="">
<doc></doc>
<arguments>
<arg>${SUITE}</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20130409 15:06:57.484" level="INFO">${test} = Variable Should (Not) Exist</msg>
<status status="PASS" endtime="20130409 15:06:57.484" starttime="20130409 15:06:57.483"></status>
</kw>
<kw type="kw" name="TestCheckerLibrary.Check Test Status" timeout="">
<doc>Verifies that test's status and message are as expected.</doc>
<arguments>
<arg>${test}</arg>
<arg>${status}</arg>
<arg>${message}</arg>
</arguments>
<status status="PASS" endtime="20130409 15:06:57.486" starttime="20130409 15:06:57.485"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:57.486" starttime="20130409 15:06:57.481"></status>
</kw>
<doc></doc>
<tags>
<tag>jybot</tag>
<tag>pybot</tag>
<tag>regression</tag>
</tags>
<status status="PASS" endtime="20130409 15:06:57.486" critical="yes" starttime="20130409 15:06:57.480"></status>
</test>
<test id="s1-s2-t9" timeout="" name="Get Variable Value">
<kw type="kw" name="atest_resource.Check Test Case" timeout="">
<doc></doc>
<arguments>
<arg>${TESTNAME}</arg>
</arguments>
<kw type="kw" name="${test} = TestCheckerLibrary.Get Test From Suite" timeout="">
<doc></doc>
<arguments>
<arg>${SUITE}</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20130409 15:06:57.493" level="INFO">${test} = Get Variable Value</msg>
<status status="PASS" endtime="20130409 15:06:57.492" starttime="20130409 15:06:57.491"></status>
</kw>
<kw type="kw" name="TestCheckerLibrary.Check Test Status" timeout="">
<doc>Verifies that test's status and message are as expected.</doc>
<arguments>
<arg>${test}</arg>
<arg>${status}</arg>
<arg>${message}</arg>
</arguments>
<status status="PASS" endtime="20130409 15:06:57.494" starttime="20130409 15:06:57.493"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:57.494" starttime="20130409 15:06:57.488"></status>
</kw>
<doc></doc>
<tags>
<tag>jybot</tag>
<tag>pybot</tag>
<tag>regression</tag>
</tags>
<status status="PASS" endtime="20130409 15:06:57.495" critical="yes" starttime="20130409 15:06:57.487"></status>
</test>
<test id="s1-s2-t10" timeout="" name="Set Variable If">
<kw type="kw" name="atest_resource.Check Test Case" timeout="">
<doc></doc>
<arguments>
<arg>${TESTNAME}</arg>
</arguments>
<kw type="kw" name="${test} = TestCheckerLibrary.Get Test From Suite" timeout="">
<doc></doc>
<arguments>
<arg>${SUITE}</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20130409 15:06:57.499" level="INFO">${test} = Set Variable If</msg>
<status status="PASS" endtime="20130409 15:06:57.499" starttime="20130409 15:06:57.498"></status>
</kw>
<kw type="kw" name="TestCheckerLibrary.Check Test Status" timeout="">
<doc>Verifies that test's status and message are as expected.</doc>
<arguments>
<arg>${test}</arg>
<arg>${status}</arg>
<arg>${message}</arg>
</arguments>
<status status="PASS" endtime="20130409 15:06:57.500" starttime="20130409 15:06:57.499"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:57.500" starttime="20130409 15:06:57.496"></status>
</kw>
<doc></doc>
<tags>
<tag>jybot</tag>
<tag>pybot</tag>
<tag>regression</tag>
</tags>
<status status="PASS" endtime="20130409 15:06:57.500" critical="yes" starttime="20130409 15:06:57.495"></status>
</test>
<test id="s1-s2-t11" timeout="" name="Run Keywords When All Keywords Pass">
<kw type="kw" name="atest_resource.Check Test Case" timeout="">
<doc></doc>
<arguments>
<arg>${TESTNAME}</arg>
</arguments>
<kw type="kw" name="${test} = TestCheckerLibrary.Get Test From Suite" timeout="">
<doc></doc>
<arguments>
<arg>${SUITE}</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20130409 15:06:57.504" level="INFO">${test} = Run Keywords When All Keywords Pass</msg>
<status status="PASS" endtime="20130409 15:06:57.504" starttime="20130409 15:06:57.503"></status>
</kw>
<kw type="kw" name="TestCheckerLibrary.Check Test Status" timeout="">
<doc>Verifies that test's status and message are as expected.</doc>
<arguments>
<arg>${test}</arg>
<arg>${status}</arg>
<arg>${message}</arg>
</arguments>
<status status="PASS" endtime="20130409 15:06:57.504" starttime="20130409 15:06:57.504"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:57.505" starttime="20130409 15:06:57.502"></status>
</kw>
<doc></doc>
<tags>
<tag>jybot</tag>
<tag>pybot</tag>
<tag>regression</tag>
</tags>
<status status="PASS" endtime="20130409 15:06:57.505" critical="yes" starttime="20130409 15:06:57.501"></status>
</test>
<test id="s1-s2-t12" timeout="" name="Run Keywords When One Keyword Fails">
<kw type="kw" name="atest_resource.Check Test Case" timeout="">
<doc></doc>
<arguments>
<arg>${TESTNAME}</arg>
</arguments>
<kw type="kw" name="${test} = TestCheckerLibrary.Get Test From Suite" timeout="">
<doc></doc>
<arguments>
<arg>${SUITE}</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20130409 15:06:57.508" level="INFO">${test} = Run Keywords When One Keyword Fails</msg>
<status status="PASS" endtime="20130409 15:06:57.508" starttime="20130409 15:06:57.507"></status>
</kw>
<kw type="kw" name="TestCheckerLibrary.Check Test Status" timeout="">
<doc>Verifies that test's status and message are as expected.</doc>
<arguments>
<arg>${test}</arg>
<arg>${status}</arg>
<arg>${message}</arg>
</arguments>
<status status="PASS" endtime="20130409 15:06:57.509" starttime="20130409 15:06:57.509"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:57.509" starttime="20130409 15:06:57.506"></status>
</kw>
<doc></doc>
<tags>
<tag>jybot</tag>
<tag>pybot</tag>
<tag>regression</tag>
</tags>
<status status="PASS" endtime="20130409 15:06:57.509" critical="yes" starttime="20130409 15:06:57.505"></status>
</test>
<test id="s1-s2-t13" timeout="" name="Run Keywords When Multiple Keyword Fails">
<kw type="kw" name="atest_resource.Check Test Case" timeout="">
<doc></doc>
<arguments>
<arg>${TESTNAME}</arg>
</arguments>
<kw type="kw" name="${test} = TestCheckerLibrary.Get Test From Suite" timeout="">
<doc></doc>
<arguments>
<arg>${SUITE}</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20130409 15:06:57.513" level="INFO">${test} = Run Keywords When Multiple Keyword Fails</msg>
<status status="PASS" endtime="20130409 15:06:57.512" starttime="20130409 15:06:57.512"></status>
</kw>
<kw type="kw" name="TestCheckerLibrary.Check Test Status" timeout="">
<doc>Verifies that test's status and message are as expected.</doc>
<arguments>
<arg>${test}</arg>
<arg>${status}</arg>
<arg>${message}</arg>
</arguments>
<status status="PASS" endtime="20130409 15:06:57.513" starttime="20130409 15:06:57.513"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:57.513" starttime="20130409 15:06:57.511"></status>
</kw>
<doc></doc>
<tags>
<tag>jybot</tag>
<tag>pybot</tag>
<tag>regression</tag>
</tags>
<status status="PASS" endtime="20130409 15:06:57.514" critical="yes" starttime="20130409 15:06:57.510"></status>
</test>
<test id="s1-s2-t14" timeout="" name="Run Keywords With Arguments When All Keywords Pass">
<kw type="kw" name="atest_resource.Test Should Have Correct Keywords" timeout="">
<doc></doc>
<arguments>
<arg>BuiltIn.Log Many</arg>
<arg>BuiltIn.No Operation</arg>
</arguments>
<kw type="kw" name="${tc} = atest_resource.Check Test Case" timeout="">
<doc></doc>
<arguments>
<arg>${TESTNAME}</arg>
</arguments>
<kw type="kw" name="${test} = TestCheckerLibrary.Get Test From Suite" timeout="">
<doc></doc>
<arguments>
<arg>${SUITE}</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20130409 15:06:57.518" level="INFO">${test} = Run Keywords With Arguments When All Keywords Pass</msg>
<status status="PASS" endtime="20130409 15:06:57.518" starttime="20130409 15:06:57.517"></status>
</kw>
<kw type="kw" name="TestCheckerLibrary.Check Test Status" timeout="">
<doc>Verifies that test's status and message are as expected.</doc>
<arguments>
<arg>${test}</arg>
<arg>${status}</arg>
<arg>${message}</arg>
</arguments>
<status status="PASS" endtime="20130409 15:06:57.519" starttime="20130409 15:06:57.518"></status>
</kw>
<msg timestamp="20130409 15:06:57.519" level="INFO">${tc} = Run Keywords With Arguments When All Keywords Pass</msg>
<status status="PASS" endtime="20130409 15:06:57.519" starttime="20130409 15:06:57.516"></status>
</kw>
<kw type="kw" name="TestCheckerLibrary.Should Contain Keywords" timeout="">
<doc></doc>
<arguments>
<arg>${tc.kws[0]}</arg>
<arg>@{expected}</arg>
</arguments>
<status status="PASS" endtime="20130409 15:06:57.520" starttime="20130409 15:06:57.519"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:57.520" starttime="20130409 15:06:57.515"></status>
</kw>
<doc></doc>
<tags>
<tag>jybot</tag>
<tag>pybot</tag>
<tag>regression</tag>
</tags>
<status status="PASS" endtime="20130409 15:06:57.520" critical="yes" starttime="20130409 15:06:57.514"></status>
</test>
<test id="s1-s2-t15" timeout="" name="Run Keywords With Arguments When One Keyword Fails">
<kw type="kw" name="atest_resource.Test Should Have Correct Keywords" timeout="">
<doc></doc>
<arguments>
<arg>BuiltIn.Log</arg>
<arg>BuiltIn.Log</arg>
</arguments>
<kw type="kw" name="${tc} = atest_resource.Check Test Case" timeout="">
<doc></doc>
<arguments>
<arg>${TESTNAME}</arg>
</arguments>
<kw type="kw" name="${test} = TestCheckerLibrary.Get Test From Suite" timeout="">
<doc></doc>
<arguments>
<arg>${SUITE}</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20130409 15:06:57.524" level="INFO">${test} = Run Keywords With Arguments When One Keyword Fails</msg>
<status status="PASS" endtime="20130409 15:06:57.524" starttime="20130409 15:06:57.524"></status>
</kw>
<kw type="kw" name="TestCheckerLibrary.Check Test Status" timeout="">
<doc>Verifies that test's status and message are as expected.</doc>
<arguments>
<arg>${test}</arg>
<arg>${status}</arg>
<arg>${message}</arg>
</arguments>
<status status="PASS" endtime="20130409 15:06:57.525" starttime="20130409 15:06:57.525"></status>
</kw>
<msg timestamp="20130409 15:06:57.525" level="INFO">${tc} = Run Keywords With Arguments When One Keyword Fails</msg>
<status status="PASS" endtime="20130409 15:06:57.525" starttime="20130409 15:06:57.522"></status>
</kw>
<kw type="kw" name="TestCheckerLibrary.Should Contain Keywords" timeout="">
<doc></doc>
<arguments>
<arg>${tc.kws[0]}</arg>
<arg>@{expected}</arg>
</arguments>
<status status="PASS" endtime="20130409 15:06:57.526" starttime="20130409 15:06:57.526"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:57.526" starttime="20130409 15:06:57.522"></status>
</kw>
<doc></doc>
<tags>
<tag>jybot</tag>
<tag>pybot</tag>
<tag>regression</tag>
</tags>
<status status="PASS" endtime="20130409 15:06:57.526" critical="yes" starttime="20130409 15:06:57.520"></status>
</test>
<test id="s1-s2-t16" timeout="" name="Run Keywords With Arguments When Multiple Keyword Fails">
<kw type="kw" name="atest_resource.Test Should Have Correct Keywords" timeout="">
<doc></doc>
<arguments>
<arg>BuiltIn.Log</arg>
<arg>no kw</arg>
</arguments>
<kw type="kw" name="${tc} = atest_resource.Check Test Case" timeout="">
<doc></doc>
<arguments>
<arg>${TESTNAME}</arg>
</arguments>
<kw type="kw" name="${test} = TestCheckerLibrary.Get Test From Suite" timeout="">
<doc></doc>
<arguments>
<arg>${SUITE}</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20130409 15:06:57.533" level="INFO">${test} = Run Keywords With Arguments When Multiple Keyword Fails</msg>
<status status="PASS" endtime="20130409 15:06:57.533" starttime="20130409 15:06:57.532"></status>
</kw>
<kw type="kw" name="TestCheckerLibrary.Check Test Status" timeout="">
<doc>Verifies that test's status and message are as expected.</doc>
<arguments>
<arg>${test}</arg>
<arg>${status}</arg>
<arg>${message}</arg>
</arguments>
<status status="PASS" endtime="20130409 15:06:57.535" starttime="20130409 15:06:57.534"></status>
</kw>
<msg timestamp="20130409 15:06:57.536" level="INFO">${tc} = Run Keywords With Arguments When Multiple Keyword Fails</msg>
<status status="PASS" endtime="20130409 15:06:57.535" starttime="20130409 15:06:57.529"></status>
</kw>
<kw type="kw" name="TestCheckerLibrary.Should Contain Keywords" timeout="">
<doc></doc>
<arguments>
<arg>${tc.kws[0]}</arg>
<arg>@{expected}</arg>
</arguments>
<status status="PASS" endtime="20130409 15:06:57.537" starttime="20130409 15:06:57.536"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:57.537" starttime="20130409 15:06:57.528"></status>
</kw>
<doc></doc>
<tags>
<tag>jybot</tag>
<tag>pybot</tag>
<tag>regression</tag>
</tags>
<status status="PASS" endtime="20130409 15:06:57.538" critical="yes" starttime="20130409 15:06:57.527"></status>
</test>
<test id="s1-s2-t17" timeout="" name="Run Keywords With Arguments With Variables">
<kw type="kw" name="atest_resource.Test Should Have Correct Keywords" timeout="">
<doc></doc>
<arguments>
<arg>BuiltIn.Log</arg>
</arguments>
<kw type="kw" name="${tc} = atest_resource.Check Test Case" timeout="">
<doc></doc>
<arguments>
<arg>${TESTNAME}</arg>
</arguments>
<kw type="kw" name="${test} = TestCheckerLibrary.Get Test From Suite" timeout="">
<doc></doc>
<arguments>
<arg>${SUITE}</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20130409 15:06:57.543" level="INFO">${test} = Run Keywords With Arguments With Variables</msg>
<status status="PASS" endtime="20130409 15:06:57.543" starttime="20130409 15:06:57.542"></status>
</kw>
<kw type="kw" name="TestCheckerLibrary.Check Test Status" timeout="">
<doc>Verifies that test's status and message are as expected.</doc>
<arguments>
<arg>${test}</arg>
<arg>${status}</arg>
<arg>${message}</arg>
</arguments>
<status status="PASS" endtime="20130409 15:06:57.544" starttime="20130409 15:06:57.544"></status>
</kw>
<msg timestamp="20130409 15:06:57.544" level="INFO">${tc} = Run Keywords With Arguments With Variables</msg>
<status status="PASS" endtime="20130409 15:06:57.544" starttime="20130409 15:06:57.541"></status>
</kw>
<kw type="kw" name="TestCheckerLibrary.Should Contain Keywords" timeout="">
<doc></doc>
<arguments>
<arg>${tc.kws[0]}</arg>
<arg>@{expected}</arg>
</arguments>
<status status="PASS" endtime="20130409 15:06:57.547" starttime="20130409 15:06:57.545"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:57.548" starttime="20130409 15:06:57.540"></status>
</kw>
<doc></doc>
<tags>
<tag>jybot</tag>
<tag>pybot</tag>
<tag>regression</tag>
</tags>
<status status="PASS" endtime="20130409 15:06:57.548" critical="yes" starttime="20130409 15:06:57.538"></status>
</test>
<test id="s1-s2-t18" timeout="" name="Run Keyword in For Loop Pass">
<kw type="kw" name="atest_resource.Check Test Case" timeout="">
<doc></doc>
<arguments>
<arg>${TESTNAME}</arg>
</arguments>
<kw type="kw" name="${test} = TestCheckerLibrary.Get Test From Suite" timeout="">
<doc></doc>
<arguments>
<arg>${SUITE}</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20130409 15:06:57.551" level="INFO">${test} = Run Keyword in For Loop Pass</msg>
<status status="PASS" endtime="20130409 15:06:57.551" starttime="20130409 15:06:57.551"></status>
</kw>
<kw type="kw" name="TestCheckerLibrary.Check Test Status" timeout="">
<doc>Verifies that test's status and message are as expected.</doc>
<arguments>
<arg>${test}</arg>
<arg>${status}</arg>
<arg>${message}</arg>
</arguments>
<status status="PASS" endtime="20130409 15:06:57.552" starttime="20130409 15:06:57.552"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:57.552" starttime="20130409 15:06:57.549"></status>
</kw>
<doc></doc>
<tags>
<tag>jybot</tag>
<tag>pybot</tag>
<tag>regression</tag>
</tags>
<status status="PASS" endtime="20130409 15:06:57.553" critical="yes" starttime="20130409 15:06:57.548"></status>
</test>
<test id="s1-s2-t19" timeout="" name="Run Keyword in For Loop Fail">
<kw type="kw" name="atest_resource.Check Test Case" timeout="">
<doc></doc>
<arguments>
<arg>${TESTNAME}</arg>
</arguments>
<kw type="kw" name="${test} = TestCheckerLibrary.Get Test From Suite" timeout="">
<doc></doc>
<arguments>
<arg>${SUITE}</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20130409 15:06:57.556" level="INFO">${test} = Run Keyword in For Loop Fail</msg>
<status status="PASS" endtime="20130409 15:06:57.556" starttime="20130409 15:06:57.555"></status>
</kw>
<kw type="kw" name="TestCheckerLibrary.Check Test Status" timeout="">
<doc>Verifies that test's status and message are as expected.</doc>
<arguments>
<arg>${test}</arg>
<arg>${status}</arg>
<arg>${message}</arg>
</arguments>
<status status="PASS" endtime="20130409 15:06:57.557" starttime="20130409 15:06:57.556"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:57.557" starttime="20130409 15:06:57.554"></status>
</kw>
<doc></doc>
<tags>
<tag>jybot</tag>
<tag>pybot</tag>
<tag>regression</tag>
</tags>
<status status="PASS" endtime="20130409 15:06:57.557" critical="yes" starttime="20130409 15:06:57.553"></status>
</test>
<test id="s1-s2-t20" timeout="" name="Wait Until Keyword Succeeds Pass">
<kw type="kw" name="atest_resource.Check Test Case" timeout="">
<doc></doc>
<arguments>
<arg>${TESTNAME}</arg>
</arguments>
<kw type="kw" name="${test} = TestCheckerLibrary.Get Test From Suite" timeout="">
<doc></doc>
<arguments>
<arg>${SUITE}</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20130409 15:06:57.561" level="INFO">${test} = Wait Until Keyword Succeeds Pass</msg>
<status status="PASS" endtime="20130409 15:06:57.561" starttime="20130409 15:06:57.560"></status>
</kw>
<kw type="kw" name="TestCheckerLibrary.Check Test Status" timeout="">
<doc>Verifies that test's status and message are as expected.</doc>
<arguments>
<arg>${test}</arg>
<arg>${status}</arg>
<arg>${message}</arg>
</arguments>
<status status="PASS" endtime="20130409 15:06:57.562" starttime="20130409 15:06:57.561"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:57.562" starttime="20130409 15:06:57.559"></status>
</kw>
<doc></doc>
<tags>
<tag>jybot</tag>
<tag>pybot</tag>
<tag>regression</tag>
</tags>
<status status="PASS" endtime="20130409 15:06:57.562" critical="yes" starttime="20130409 15:06:57.558"></status>
</test>
<test id="s1-s2-t21" timeout="" name="Wait Until Keyword Succeeds Fail">
<kw type="kw" name="atest_resource.Check Test Case" timeout="">
<doc></doc>
<arguments>
<arg>${TESTNAME}</arg>
</arguments>
<kw type="kw" name="${test} = TestCheckerLibrary.Get Test From Suite" timeout="">
<doc></doc>
<arguments>
<arg>${SUITE}</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20130409 15:06:57.565" level="INFO">${test} = Wait Until Keyword Succeeds Fail</msg>
<status status="PASS" endtime="20130409 15:06:57.565" starttime="20130409 15:06:57.564"></status>
</kw>
<kw type="kw" name="TestCheckerLibrary.Check Test Status" timeout="">
<doc>Verifies that test's status and message are as expected.</doc>
<arguments>
<arg>${test}</arg>
<arg>${status}</arg>
<arg>${message}</arg>
</arguments>
<status status="PASS" endtime="20130409 15:06:57.566" starttime="20130409 15:06:57.565"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:57.566" starttime="20130409 15:06:57.563"></status>
</kw>
<doc></doc>
<tags>
<tag>jybot</tag>
<tag>pybot</tag>
<tag>regression</tag>
</tags>
<status status="PASS" endtime="20130409 15:06:57.566" critical="yes" starttime="20130409 15:06:57.562"></status>
</test>
<test id="s1-s2-t22" timeout="" name="Run Keyword If Pass">
<kw type="kw" name="atest_resource.Check Test Case" timeout="">
<doc></doc>
<arguments>
<arg>${TESTNAME}</arg>
</arguments>
<kw type="kw" name="${test} = TestCheckerLibrary.Get Test From Suite" timeout="">
<doc></doc>
<arguments>
<arg>${SUITE}</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20130409 15:06:57.569" level="INFO">${test} = Run Keyword If Pass</msg>
<status status="PASS" endtime="20130409 15:06:57.569" starttime="20130409 15:06:57.568"></status>
</kw>
<kw type="kw" name="TestCheckerLibrary.Check Test Status" timeout="">
<doc>Verifies that test's status and message are as expected.</doc>
<arguments>
<arg>${test}</arg>
<arg>${status}</arg>
<arg>${message}</arg>
</arguments>
<status status="PASS" endtime="20130409 15:06:57.570" starttime="20130409 15:06:57.570"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:57.570" starttime="20130409 15:06:57.567"></status>
</kw>
<doc></doc>
<tags>
<tag>jybot</tag>
<tag>pybot</tag>
<tag>regression</tag>
</tags>
<status status="PASS" endtime="20130409 15:06:57.570" critical="yes" starttime="20130409 15:06:57.566"></status>
</test>
<test id="s1-s2-t23" timeout="" name="Run Keyword If Fail">
<kw type="kw" name="atest_resource.Check Test Case" timeout="">
<doc></doc>
<arguments>
<arg>${TESTNAME}</arg>
</arguments>
<kw type="kw" name="${test} = TestCheckerLibrary.Get Test From Suite" timeout="">
<doc></doc>
<arguments>
<arg>${SUITE}</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20130409 15:06:57.574" level="INFO">${test} = Run Keyword If Fail</msg>
<status status="PASS" endtime="20130409 15:06:57.574" starttime="20130409 15:06:57.573"></status>
</kw>
<kw type="kw" name="TestCheckerLibrary.Check Test Status" timeout="">
<doc>Verifies that test's status and message are as expected.</doc>
<arguments>
<arg>${test}</arg>
<arg>${status}</arg>
<arg>${message}</arg>
</arguments>
<status status="PASS" endtime="20130409 15:06:57.575" starttime="20130409 15:06:57.574"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:57.575" starttime="20130409 15:06:57.572"></status>
</kw>
<doc></doc>
<tags>
<tag>jybot</tag>
<tag>pybot</tag>
<tag>regression</tag>
</tags>
<status status="PASS" endtime="20130409 15:06:57.575" critical="yes" starttime="20130409 15:06:57.571"></status>
</test>
<test id="s1-s2-t24" timeout="" name="Run Keyword If with ELSE">
<kw type="kw" name="atest_resource.Check Test Case" timeout="">
<doc></doc>
<arguments>
<arg>${TESTNAME}</arg>
</arguments>
<kw type="kw" name="${test} = TestCheckerLibrary.Get Test From Suite" timeout="">
<doc></doc>
<arguments>
<arg>${SUITE}</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20130409 15:06:57.582" level="INFO">${test} = Run Keyword If with ELSE</msg>
<status status="PASS" endtime="20130409 15:06:57.582" starttime="20130409 15:06:57.580"></status>
</kw>
<kw type="kw" name="TestCheckerLibrary.Check Test Status" timeout="">
<doc>Verifies that test's status and message are as expected.</doc>
<arguments>
<arg>${test}</arg>
<arg>${status}</arg>
<arg>${message}</arg>
</arguments>
<status status="PASS" endtime="20130409 15:06:57.583" starttime="20130409 15:06:57.583"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:57.583" starttime="20130409 15:06:57.578"></status>
</kw>
<doc></doc>
<tags>
<tag>jybot</tag>
<tag>pybot</tag>
<tag>regression</tag>
</tags>
<status status="PASS" endtime="20130409 15:06:57.584" critical="yes" starttime="20130409 15:06:57.576"></status>
</test>
<test id="s1-s2-t25" timeout="" name="Run Keyword If with ELSE IF">
<kw type="kw" name="atest_resource.Check Test Case" timeout="">
<doc></doc>
<arguments>
<arg>${TESTNAME}</arg>
</arguments>
<kw type="kw" name="${test} = TestCheckerLibrary.Get Test From Suite" timeout="">
<doc></doc>
<arguments>
<arg>${SUITE}</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20130409 15:06:57.587" level="INFO">${test} = Run Keyword If with ELSE IF</msg>
<status status="PASS" endtime="20130409 15:06:57.587" starttime="20130409 15:06:57.586"></status>
</kw>
<kw type="kw" name="TestCheckerLibrary.Check Test Status" timeout="">
<doc>Verifies that test's status and message are as expected.</doc>
<arguments>
<arg>${test}</arg>
<arg>${status}</arg>
<arg>${message}</arg>
</arguments>
<status status="PASS" endtime="20130409 15:06:57.588" starttime="20130409 15:06:57.588"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:57.588" starttime="20130409 15:06:57.585"></status>
</kw>
<doc></doc>
<tags>
<tag>jybot</tag>
<tag>pybot</tag>
<tag>regression</tag>
</tags>
<status status="PASS" endtime="20130409 15:06:57.588" critical="yes" starttime="20130409 15:06:57.584"></status>
</test>
<test id="s1-s2-t26" timeout="" name="Run Keyword If with ELSE IF and ELSE">
<kw type="kw" name="atest_resource.Check Test Case" timeout="">
<doc></doc>
<arguments>
<arg>${TESTNAME}</arg>
</arguments>
<kw type="kw" name="${test} = TestCheckerLibrary.Get Test From Suite" timeout="">
<doc></doc>
<arguments>
<arg>${SUITE}</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20130409 15:06:57.592" level="INFO">${test} = Run Keyword If with ELSE IF and ELSE</msg>
<status status="PASS" endtime="20130409 15:06:57.591" starttime="20130409 15:06:57.591"></status>
</kw>
<kw type="kw" name="TestCheckerLibrary.Check Test Status" timeout="">
<doc>Verifies that test's status and message are as expected.</doc>
<arguments>
<arg>${test}</arg>
<arg>${status}</arg>
<arg>${message}</arg>
</arguments>
<status status="PASS" endtime="20130409 15:06:57.592" starttime="20130409 15:06:57.592"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:57.592" starttime="20130409 15:06:57.590"></status>
</kw>
<doc></doc>
<tags>
<tag>jybot</tag>
<tag>pybot</tag>
<tag>regression</tag>
</tags>
<status status="PASS" endtime="20130409 15:06:57.593" critical="yes" starttime="20130409 15:06:57.588"></status>
</test>
<test id="s1-s2-t27" timeout="" name="Run Keyword If with ELSE IF and ELSE without keywords">
<kw type="kw" name="atest_resource.Check Test Case" timeout="">
<doc></doc>
<arguments>
<arg>${TESTNAME}</arg>
</arguments>
<kw type="kw" name="${test} = TestCheckerLibrary.Get Test From Suite" timeout="">
<doc></doc>
<arguments>
<arg>${SUITE}</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20130409 15:06:57.597" level="INFO">${test} = Run Keyword If with ELSE IF and ELSE without keywords</msg>
<status status="PASS" endtime="20130409 15:06:57.597" starttime="20130409 15:06:57.596"></status>
</kw>
<kw type="kw" name="TestCheckerLibrary.Check Test Status" timeout="">
<doc>Verifies that test's status and message are as expected.</doc>
<arguments>
<arg>${test}</arg>
<arg>${status}</arg>
<arg>${message}</arg>
</arguments>
<status status="PASS" endtime="20130409 15:06:57.598" starttime="20130409 15:06:57.597"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:57.598" starttime="20130409 15:06:57.594"></status>
</kw>
<doc></doc>
<tags>
<tag>jybot</tag>
<tag>pybot</tag>
<tag>regression</tag>
</tags>
<status status="PASS" endtime="20130409 15:06:57.598" critical="yes" starttime="20130409 15:06:57.593"></status>
</test>
<test id="s1-s2-t28" timeout="" name="Run Keyword If with escaped or non-caps ELSE IF and ELSE">
<kw type="kw" name="atest_resource.Check Test Case" timeout="">
<doc></doc>
<arguments>
<arg>${TESTNAME}</arg>
</arguments>
<kw type="kw" name="${test} = TestCheckerLibrary.Get Test From Suite" timeout="">
<doc></doc>
<arguments>
<arg>${SUITE}</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20130409 15:06:57.604" level="INFO">${test} = Run Keyword If with escaped or non-caps ELSE IF and ELSE</msg>
<status status="PASS" endtime="20130409 15:06:57.603" starttime="20130409 15:06:57.602"></status>
</kw>
<kw type="kw" name="TestCheckerLibrary.Check Test Status" timeout="">
<doc>Verifies that test's status and message are as expected.</doc>
<arguments>
<arg>${test}</arg>
<arg>${status}</arg>
<arg>${message}</arg>
</arguments>
<status status="PASS" endtime="20130409 15:06:57.604" starttime="20130409 15:06:57.604"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:57.604" starttime="20130409 15:06:57.600"></status>
</kw>
<doc></doc>
<tags>
<tag>jybot</tag>
<tag>pybot</tag>
<tag>regression</tag>
</tags>
<status status="PASS" endtime="20130409 15:06:57.605" critical="yes" starttime="20130409 15:06:57.599"></status>
</test>
<test id="s1-s2-t29" timeout="" name="Run Keyword If with list variable in ELSE IF and ELSE">
<kw type="kw" name="atest_resource.Check Test Case" timeout="">
<doc></doc>
<arguments>
<arg>${TESTNAME}</arg>
</arguments>
<kw type="kw" name="${test} = TestCheckerLibrary.Get Test From Suite" timeout="">
<doc></doc>
<arguments>
<arg>${SUITE}</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20130409 15:06:57.609" level="INFO">${test} = Run Keyword If with list variable in ELSE IF and ELSE</msg>
<status status="PASS" endtime="20130409 15:06:57.609" starttime="20130409 15:06:57.608"></status>
</kw>
<kw type="kw" name="TestCheckerLibrary.Check Test Status" timeout="">
<doc>Verifies that test's status and message are as expected.</doc>
<arguments>
<arg>${test}</arg>
<arg>${status}</arg>
<arg>${message}</arg>
</arguments>
<status status="PASS" endtime="20130409 15:06:57.609" starttime="20130409 15:06:57.609"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:57.610" starttime="20130409 15:06:57.607"></status>
</kw>
<doc></doc>
<tags>
<tag>jybot</tag>
<tag>pybot</tag>
<tag>regression</tag>
</tags>
<status status="PASS" endtime="20130409 15:06:57.610" critical="yes" starttime="20130409 15:06:57.605"></status>
</test>
<test id="s1-s2-t30" timeout="" name="Test Teardown Related Run Keyword Variants">
<kw type="kw" name="atest_resource.Check Test Case" timeout="">
<doc></doc>
<arguments>
<arg>${TESTNAME}</arg>
</arguments>
<kw type="kw" name="${test} = TestCheckerLibrary.Get Test From Suite" timeout="">
<doc></doc>
<arguments>
<arg>${SUITE}</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20130409 15:06:57.613" level="INFO">${test} = Test Teardown Related Run Keyword Variants</msg>
<status status="PASS" endtime="20130409 15:06:57.613" starttime="20130409 15:06:57.612"></status>
</kw>
<kw type="kw" name="TestCheckerLibrary.Check Test Status" timeout="">
<doc>Verifies that test's status and message are as expected.</doc>
<arguments>
<arg>${test}</arg>
<arg>${status}</arg>
<arg>${message}</arg>
</arguments>
<status status="PASS" endtime="20130409 15:06:57.614" starttime="20130409 15:06:57.614"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:57.614" starttime="20130409 15:06:57.611"></status>
</kw>
<doc></doc>
<tags>
<tag>jybot</tag>
<tag>pybot</tag>
<tag>regression</tag>
</tags>
<status status="PASS" endtime="20130409 15:06:57.614" critical="yes" starttime="20130409 15:06:57.610"></status>
</test>
<doc></doc>
<metadata>
</metadata>
<status status="PASS" endtime="20130409 15:06:57.615" starttime="20130409 15:06:57.027"></status>
</suite>
<suite source="/Users/asyrjasalo/eficode/robot/robotframework/atest/robot/cli/dryrun/run_keyword_variants_in_suite_teardown.txt" id="s1-s3" name="Run Keyword Variants In Suite Teardown">
<kw type="setup" name="atest_resource.Run Tests" timeout="">
<doc></doc>
<arguments>
<arg>--runmode dryrun</arg>
<arg>cli/dryrun/run_keyword_variants_in_suite_teardown.txt</arg>
</arguments>
<kw type="kw" name="atest_resource.Run Tests Helper" timeout="">
<doc></doc>
<arguments>
<arg>${options}</arg>
<arg>@{data list}</arg>
</arguments>
<kw type="kw" name="${data string} = atest_resource.Set Variables And Get Datasources" timeout="">
<doc></doc>
<arguments>
<arg>@{data list}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Suite Variable" timeout="">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>$SUITE</arg>
<arg>${NONE}</arg>
</arguments>
<msg timestamp="20130409 15:06:57.633" level="INFO">${SUITE} = None</msg>
<status status="PASS" endtime="20130409 15:06:57.633" starttime="20130409 15:06:57.633"></status>
</kw>
<kw type="kw" name="${name} = TestHelper.Get Output Name" timeout="">
<doc></doc>
<arguments>
<arg>@{data list}</arg>
</arguments>
<msg timestamp="20130409 15:06:57.634" level="INFO">${name} = run_keyword_variants_in_suite_teardown</msg>
<status status="PASS" endtime="20130409 15:06:57.634" starttime="20130409 15:06:57.633"></status>
</kw>
<kw type="kw" name="atest_resource.Set Variables" timeout="">
<doc></doc>
<arguments>
<arg>${name}</arg>
</arguments>
<kw type="kw" name="${OUTDIR} = OperatingSystem.Join Path" timeout="">
<doc>Joins the given path part(s) to the given base path.</doc>
<arguments>
<arg>${OUTPUTDIR}</arg>
<arg>output</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20130409 15:06:57.636" level="INFO">${OUTDIR} = /Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants_in_suite_teardown</msg>
<status status="PASS" endtime="20130409 15:06:57.635" starttime="20130409 15:06:57.635"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Global Variable" timeout="">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>$OUTDIR</arg>
<arg>${OUTDIR.encode('ascii', 'ignore').replace('?', '_') .replace('*', '_')}</arg>
</arguments>
<msg timestamp="20130409 15:06:57.637" level="INFO">${OUTDIR} = /Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants_in_suite_teardown</msg>
<status status="PASS" endtime="20130409 15:06:57.637" starttime="20130409 15:06:57.636"></status>
</kw>
<kw type="kw" name="OperatingSystem.Create Directory" timeout="">
<doc>Creates the specified directory.</doc>
<arguments>
<arg>${OUTDIR}</arg>
</arguments>
<msg timestamp="20130409 15:06:57.638" html="yes" level="INFO">Created directory '&lt;a href="file:///Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants_in_suite_teardown"&gt;/Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants_in_suite_teardown&lt;/a&gt;'</msg>
<status status="PASS" endtime="20130409 15:06:57.638" starttime="20130409 15:06:57.637"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Suite Variable" timeout="">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>$OUTFILE</arg>
<arg>${OUTDIR}${/}output.xml</arg>
</arguments>
<msg timestamp="20130409 15:06:57.638" level="INFO">${OUTFILE} = /Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants_in_suite_teardown/output.xml</msg>
<status status="PASS" endtime="20130409 15:06:57.638" starttime="20130409 15:06:57.638"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Suite Variable" timeout="">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>$STDOUT_FILE</arg>
<arg>${OUTDIR}${/}stdout.txt</arg>
</arguments>
<msg timestamp="20130409 15:06:57.639" level="INFO">${STDOUT_FILE} = /Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants_in_suite_teardown/stdout.txt</msg>
<status status="PASS" endtime="20130409 15:06:57.639" starttime="20130409 15:06:57.639"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Suite Variable" timeout="">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>$STDERR_FILE</arg>
<arg>${OUTDIR}${/}stderr.txt</arg>
</arguments>
<msg timestamp="20130409 15:06:57.640" level="INFO">${STDERR_FILE} = /Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants_in_suite_teardown/stderr.txt</msg>
<status status="PASS" endtime="20130409 15:06:57.640" starttime="20130409 15:06:57.639"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Suite Variable" timeout="">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>$SYSLOG_FILE</arg>
<arg>${OUTDIR}${/}syslog.txt</arg>
</arguments>
<msg timestamp="20130409 15:06:57.640" level="INFO">${SYSLOG_FILE} = /Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants_in_suite_teardown/syslog.txt</msg>
<status status="PASS" endtime="20130409 15:06:57.641" starttime="20130409 15:06:57.640"></status>
</kw>
<kw type="kw" name="OperatingSystem.Set Environment Variable" timeout="">
<doc>Sets an environment variable to a specified value.</doc>
<arguments>
<arg>ROBOT_SYSLOG_FILE</arg>
<arg>${SYSLOG_FILE}</arg>
</arguments>
<msg timestamp="20130409 15:06:57.641" level="INFO">Environment variable 'ROBOT_SYSLOG_FILE' set to value '/Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants_in_suite_teardown/syslog.txt'</msg>
<status status="PASS" endtime="20130409 15:06:57.641" starttime="20130409 15:06:57.641"></status>
</kw>
<kw type="kw" name="atest_resource.Set Runners" timeout="">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${robot} = OperatingSystem.Join Path" timeout="">
<doc>Joins the given path part(s) to the given base path.</doc>
<arguments>
<arg>${ROBOTPATH}</arg>
<arg>run.py</arg>
</arguments>
<msg timestamp="20130409 15:06:57.642" level="INFO">${robot} = /Users/asyrjasalo/eficode/robot/robotframework/src/robot/run.py</msg>
<status status="PASS" endtime="20130409 15:06:57.642" starttime="20130409 15:06:57.642"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Suite Variable" timeout="">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>$ROBOT</arg>
<arg>${INTERPRETER} ${robot}</arg>
</arguments>
<msg timestamp="20130409 15:06:57.643" level="INFO">${ROBOT} = python /Users/asyrjasalo/eficode/robot/robotframework/src/robot/run.py</msg>
<status status="PASS" endtime="20130409 15:06:57.643" starttime="20130409 15:06:57.643"></status>
</kw>
<kw type="kw" name="${rebot} = OperatingSystem.Join Path" timeout="">
<doc>Joins the given path part(s) to the given base path.</doc>
<arguments>
<arg>${ROBOTPATH}</arg>
<arg>rebot.py</arg>
</arguments>
<msg timestamp="20130409 15:06:57.644" level="INFO">${rebot} = /Users/asyrjasalo/eficode/robot/robotframework/src/robot/rebot.py</msg>
<status status="PASS" endtime="20130409 15:06:57.644" starttime="20130409 15:06:57.643"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Suite Variable" timeout="">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>$REBOT</arg>
<arg>${INTERPRETER} ${rebot}</arg>
</arguments>
<msg timestamp="20130409 15:06:57.644" level="INFO">${REBOT} = python /Users/asyrjasalo/eficode/robot/robotframework/src/robot/rebot.py</msg>
<status status="PASS" endtime="20130409 15:06:57.645" starttime="20130409 15:06:57.644"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:57.645" starttime="20130409 15:06:57.641"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:57.645" starttime="20130409 15:06:57.634"></status>
</kw>
<kw type="kw" name="@{data list} = OperatingSystem.Join Paths" timeout="">
<doc>Joins given paths with base and returns resulted paths.</doc>
<arguments>
<arg>${DATADIR}</arg>
<arg>@{data list}</arg>
</arguments>
<msg timestamp="20130409 15:06:57.645" level="INFO">@{data list} = [ /Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/run_keyword_variants_in_suite_teardown.txt ]</msg>
<status status="PASS" endtime="20130409 15:06:57.645" starttime="20130409 15:06:57.645"></status>
</kw>
<kw type="kw" name="${data string} = BuiltIn.Catenate" timeout="">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>@{data list}</arg>
</arguments>
<msg timestamp="20130409 15:06:57.646" level="INFO">${data string} = /Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/run_keyword_variants_in_suite_teardown.txt</msg>
<status status="PASS" endtime="20130409 15:06:57.646" starttime="20130409 15:06:57.646"></status>
</kw>
<msg timestamp="20130409 15:06:57.646" level="INFO">${data string} = /Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/run_keyword_variants_in_suite_teardown.txt</msg>
<status status="PASS" endtime="20130409 15:06:57.646" starttime="20130409 15:06:57.632"></status>
</kw>
<kw type="kw" name="${options} = BuiltIn.Catenate" timeout="">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>--MonitorMarkers OFF</arg>
<arg>${user options}</arg>
<arg>--variable interpreter:${INTERPRETER}</arg>
<arg>--pythonpath ${LIBPATH1}</arg>
<arg>--pythonpath ${LIBPATH2}</arg>
</arguments>
<msg timestamp="20130409 15:06:57.647" level="INFO">${options} = --MonitorMarkers OFF --runmode dryrun --variable interpreter:python --pythonpath /Users/asyrjasalo/eficode/robot/robotframework/atest/resources/../testresources/testlibs --pythonpath /Users/asyrjasalo...</msg>
<status status="PASS" endtime="20130409 15:06:57.647" starttime="20130409 15:06:57.646"></status>
</kw>
<kw type="kw" name="atest_resource.Run Helper" timeout="">
<doc></doc>
<arguments>
<arg>${ROBOT}</arg>
<arg>${options}</arg>
<arg>${data string}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Remove Files" timeout="">
<doc>Uses `Remove File` to remove multiple files one-by-one.</doc>
<arguments>
<arg>${OUTFILE}</arg>
<arg>${OUTDIR}/*.xml</arg>
<arg>${OUTDIR}/*.html</arg>
</arguments>
<msg timestamp="20130409 15:06:57.649" html="yes" level="INFO">File '&lt;a href="file:///Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants_in_suite_teardown/output.xml"&gt;/Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants_in_suite_teardown/output.xml&lt;/a&gt;' does not exist</msg>
<msg timestamp="20130409 15:06:57.650" html="yes" level="INFO">File '&lt;a href="file:///Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants_in_suite_teardown/*.xml"&gt;/Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants_in_suite_teardown/*.xml&lt;/a&gt;' does not exist</msg>
<msg timestamp="20130409 15:06:57.650" html="yes" level="INFO">File '&lt;a href="file:///Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants_in_suite_teardown/*.html"&gt;/Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants_in_suite_teardown/*.html&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20130409 15:06:57.650" starttime="20130409 15:06:57.648"></status>
</kw>
<kw type="kw" name="${cmd} = BuiltIn.Catenate" timeout="">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>${runner}</arg>
<arg>--monitorcolors OFF</arg>
<arg>--outputdir ${OUTDIR}</arg>
<arg>--output ${OUTFILE}</arg>
<arg>--report NONE</arg>
<arg>--log NONE</arg>
<arg>${options}</arg>
<arg>${data string}</arg>
<arg>1&gt;${STDOUTFILE}</arg>
<arg>2&gt;${STDERRFILE}</arg>
</arguments>
<msg timestamp="20130409 15:06:57.652" level="INFO">${cmd} = python /Users/asyrjasalo/eficode/robot/robotframework/src/robot/run.py --monitorcolors OFF --outputdir /Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants_i...</msg>
<status status="PASS" endtime="20130409 15:06:57.652" starttime="20130409 15:06:57.651"></status>
</kw>
<kw type="kw" name="${rc} = OperatingSystem.Run And Return Rc" timeout="">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>${cmd}</arg>
</arguments>
<msg timestamp="20130409 15:06:57.653" level="INFO">Running command 'python /Users/asyrjasalo/eficode/robot/robotframework/src/robot/run.py --monitorcolors OFF --outputdir /Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants_in_suite_teardown --output /Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants_in_suite_teardown/output.xml --report NONE --log NONE --MonitorMarkers OFF --runmode dryrun --variable interpreter:python --pythonpath /Users/asyrjasalo/eficode/robot/robotframework/atest/resources/../testresources/testlibs --pythonpath /Users/asyrjasalo/eficode/robot/robotframework/atest/resources/../testresources/listeners /Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/run_keyword_variants_in_suite_teardown.txt 1&gt;/Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants_in_suite_teardown/stdout.txt 2&gt;/Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants_in_suite_teardown/stderr.txt'</msg>
<msg timestamp="20130409 15:06:57.907" level="INFO">${rc} = 1</msg>
<status status="PASS" endtime="20130409 15:06:57.907" starttime="20130409 15:06:57.652"></status>
</kw>
<kw type="kw" name="BuiltIn.Log" timeout="">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>&lt;a href="file://${OUTDIR}"&gt;${OUTDIR}&lt;/a&gt;</arg>
<arg>HTML</arg>
</arguments>
<msg timestamp="20130409 15:06:57.908" html="yes" level="INFO">&lt;a href="file:///Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants_in_suite_teardown"&gt;/Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants_in_suite_teardown&lt;/a&gt;</msg>
<status status="PASS" endtime="20130409 15:06:57.908" starttime="20130409 15:06:57.907"></status>
</kw>
<kw type="kw" name="BuiltIn.Log" timeout="">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>&lt;a href="file://${OUTFILE}"&gt;${OUTFILE}&lt;/a&gt;</arg>
<arg>HTML</arg>
</arguments>
<msg timestamp="20130409 15:06:57.908" html="yes" level="INFO">&lt;a href="file:///Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants_in_suite_teardown/output.xml"&gt;/Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants_in_suite_teardown/output.xml&lt;/a&gt;</msg>
<status status="PASS" endtime="20130409 15:06:57.908" starttime="20130409 15:06:57.908"></status>
</kw>
<kw type="kw" name="BuiltIn.Log" timeout="">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>&lt;a href="file://${STDOUTFILE}"&gt;${STDOUTFILE}&lt;/a&gt;</arg>
<arg>HTML</arg>
</arguments>
<msg timestamp="20130409 15:06:57.909" html="yes" level="INFO">&lt;a href="file:///Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants_in_suite_teardown/stdout.txt"&gt;/Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants_in_suite_teardown/stdout.txt&lt;/a&gt;</msg>
<status status="PASS" endtime="20130409 15:06:57.909" starttime="20130409 15:06:57.909"></status>
</kw>
<kw type="kw" name="BuiltIn.Log" timeout="">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>&lt;a href="file://${STDERRFILE}"&gt;${STDERRFILE}&lt;/a&gt;</arg>
<arg>HTML</arg>
</arguments>
<msg timestamp="20130409 15:06:57.910" html="yes" level="INFO">&lt;a href="file:///Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants_in_suite_teardown/stderr.txt"&gt;/Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants_in_suite_teardown/stderr.txt&lt;/a&gt;</msg>
<status status="PASS" endtime="20130409 15:06:57.910" starttime="20130409 15:06:57.909"></status>
</kw>
<kw type="kw" name="BuiltIn.Log" timeout="">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>&lt;a href="file://${SYSLOGFILE}"&gt;${SYSLOGFILE}&lt;/a&gt;</arg>
<arg>HTML</arg>
</arguments>
<msg timestamp="20130409 15:06:57.910" html="yes" level="INFO">&lt;a href="file:///Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants_in_suite_teardown/syslog.txt"&gt;/Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants_in_suite_teardown/syslog.txt&lt;/a&gt;</msg>
<status status="PASS" endtime="20130409 15:06:57.910" starttime="20130409 15:06:57.910"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:57.910" starttime="20130409 15:06:57.647"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:57.911" starttime="20130409 15:06:57.630"></status>
</kw>
<kw type="kw" name="TestCheckerLibrary.Process Output" timeout="">
<doc></doc>
<arguments>
<arg>${OUTFILE}</arg>
</arguments>
<msg timestamp="20130409 15:06:57.913" level="INFO">${SUITE} = Run Keyword Variants In Suite Teardown</msg>
<msg timestamp="20130409 15:06:57.914" level="INFO">${STATISTICS} = &lt;robot.model.statistics.Statistics object at 0x10518b950&gt;</msg>
<msg timestamp="20130409 15:06:57.914" level="INFO">${ERRORS} = &lt;robot.result.executionerrors.ExecutionErrors object at 0x105188c50&gt;</msg>
<msg timestamp="20130409 15:06:57.914" level="INFO">Processing output '/Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants_in_suite_teardown/output.xml'</msg>
<status status="PASS" endtime="20130409 15:06:57.914" starttime="20130409 15:06:57.911"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:57.914" starttime="20130409 15:06:57.629"></status>
</kw>
<test id="s1-s3-t1" timeout="" name="Suite Teardown Related Run Keyword Variants">
<kw type="kw" name="atest_resource.Check Test Case" timeout="">
<doc></doc>
<arguments>
<arg>${TESTNAME}</arg>
</arguments>
<kw type="kw" name="${test} = TestCheckerLibrary.Get Test From Suite" timeout="">
<doc></doc>
<arguments>
<arg>${SUITE}</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20130409 15:06:57.917" level="INFO">${test} = Suite Teardown Related Run Keyword Variants</msg>
<status status="PASS" endtime="20130409 15:06:57.917" starttime="20130409 15:06:57.917"></status>
</kw>
<kw type="kw" name="TestCheckerLibrary.Check Test Status" timeout="">
<doc>Verifies that test's status and message are as expected.</doc>
<arguments>
<arg>${test}</arg>
<arg>${status}</arg>
<arg>${message}</arg>
</arguments>
<status status="PASS" endtime="20130409 15:06:57.918" starttime="20130409 15:06:57.917"></status>
</kw>
<status status="PASS" endtime="20130409 15:06:57.918" starttime="20130409 15:06:57.915"></status>
</kw>
<doc></doc>
<tags>
<tag>jybot</tag>
<tag>pybot</tag>
<tag>regression</tag>
</tags>
<status status="PASS" endtime="20130409 15:06:57.918" critical="yes" starttime="20130409 15:06:57.914"></status>
</test>
<doc></doc>
<metadata>
</metadata>
<status status="PASS" endtime="20130409 15:06:57.919" starttime="20130409 15:06:57.615"></status>
</suite>
<doc>Robot Framework acceptance tests</doc>
<metadata>
<item name="Interpreter">python</item>
<item name="Platform">darwin</item>
</metadata>
<status status="PASS" endtime="20130409 15:06:57.920" starttime="20130409 15:06:56.309"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="50">Critical Tests</stat>
<stat fail="0" pass="50">All Tests</stat>
</total>
<tag>
<stat info="critical" links="" doc="" combined="" pass="50" fail="0">regression</stat>
<stat info="combined" links="" doc="" combined="jybot NOT pybot" pass="0" fail="0">jybot NOT pybot</stat>
<stat info="combined" links="" doc="" combined="pybot NOT jybot" pass="0" fail="0">pybot NOT jybot</stat>
</tag>
<suite>
<stat fail="0" pass="50" id="s1" name="Dryrun">Dryrun</stat>
<stat fail="0" pass="19" id="s1-s1" name="Dryrun">Dryrun.Dryrun</stat>
<stat fail="0" pass="30" id="s1-s2" name="Run Keyword Variants">Dryrun.Run Keyword Variants</stat>
<stat fail="0" pass="1" id="s1-s3" name="Run Keyword Variants In Suite Teardown">Dryrun.Run Keyword Variants In Suite Teardown</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
